; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

	TITLE	C:\Users\bachmaer\Downloads\glm-0.9.9.0\glm\glm\detail\glm.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?length@?$vec@$01M$0A@@glm@@SAHXZ		; glm::vec<2,float,0>::length
PUBLIC	??A?$vec@$01M$0A@@glm@@QAEAAMH@Z		; glm::vec<2,float,0>::operator[]
PUBLIC	??A?$vec@$01M$0A@@glm@@QBEABMH@Z		; glm::vec<2,float,0>::operator[]
PUBLIC	??0?$vec@$01M$0A@@glm@@QAE@M@Z			; glm::vec<2,float,0>::vec<2,float,0>
PUBLIC	??0?$vec@$01M$0A@@glm@@QAE@MM@Z			; glm::vec<2,float,0>::vec<2,float,0>
PUBLIC	??E?$vec@$01M$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,float,0>::operator++
PUBLIC	??F?$vec@$01M$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,float,0>::operator--
PUBLIC	??E?$vec@$01M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,float,0>::operator++
PUBLIC	??F?$vec@$01M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,float,0>::operator--
PUBLIC	?length@?$vec@$01G$0A@@glm@@SAHXZ		; glm::vec<2,unsigned short,0>::length
PUBLIC	??A?$vec@$01G$0A@@glm@@QAEAAGH@Z		; glm::vec<2,unsigned short,0>::operator[]
PUBLIC	??A?$vec@$01G$0A@@glm@@QBEABGH@Z		; glm::vec<2,unsigned short,0>::operator[]
PUBLIC	??0?$vec@$01G$0A@@glm@@QAE@G@Z			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>
PUBLIC	??0?$vec@$01G$0A@@glm@@QAE@GG@Z			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>
PUBLIC	??E?$vec@$01G$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,0>::operator++
PUBLIC	??F?$vec@$01G$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,0>::operator--
PUBLIC	??E?$vec@$01G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,0>::operator++
PUBLIC	??F?$vec@$01G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,0>::operator--
PUBLIC	?length@?$vec@$01F$0A@@glm@@SAHXZ		; glm::vec<2,short,0>::length
PUBLIC	??A?$vec@$01F$0A@@glm@@QAEAAFH@Z		; glm::vec<2,short,0>::operator[]
PUBLIC	??A?$vec@$01F$0A@@glm@@QBEABFH@Z		; glm::vec<2,short,0>::operator[]
PUBLIC	??0?$vec@$01F$0A@@glm@@QAE@F@Z			; glm::vec<2,short,0>::vec<2,short,0>
PUBLIC	??0?$vec@$01F$0A@@glm@@QAE@FF@Z			; glm::vec<2,short,0>::vec<2,short,0>
PUBLIC	??E?$vec@$01F$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,short,0>::operator++
PUBLIC	??F?$vec@$01F$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,short,0>::operator--
PUBLIC	??E?$vec@$01F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,short,0>::operator++
PUBLIC	??F?$vec@$01F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,short,0>::operator--
PUBLIC	?length@?$vec@$03M$0A@@glm@@SAHXZ		; glm::vec<4,float,0>::length
PUBLIC	??A?$vec@$03M$0A@@glm@@QAEAAMH@Z		; glm::vec<4,float,0>::operator[]
PUBLIC	??A?$vec@$03M$0A@@glm@@QBEABMH@Z		; glm::vec<4,float,0>::operator[]
PUBLIC	??0?$vec@$03M$0A@@glm@@QAE@M@Z			; glm::vec<4,float,0>::vec<4,float,0>
PUBLIC	??0?$vec@$03M$0A@@glm@@QAE@MMMM@Z		; glm::vec<4,float,0>::vec<4,float,0>
PUBLIC	??E?$vec@$03M$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,float,0>::operator++
PUBLIC	??F?$vec@$03M$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,float,0>::operator--
PUBLIC	??E?$vec@$03M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,float,0>::operator++
PUBLIC	??F?$vec@$03M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,float,0>::operator--
PUBLIC	?length@?$vec@$03E$0A@@glm@@SAHXZ		; glm::vec<4,unsigned char,0>::length
PUBLIC	??A?$vec@$03E$0A@@glm@@QAEAAEH@Z		; glm::vec<4,unsigned char,0>::operator[]
PUBLIC	??A?$vec@$03E$0A@@glm@@QBEABEH@Z		; glm::vec<4,unsigned char,0>::operator[]
PUBLIC	??0?$vec@$03E$0A@@glm@@QAE@E@Z			; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>
PUBLIC	??0?$vec@$03E$0A@@glm@@QAE@EEEE@Z		; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>
PUBLIC	??E?$vec@$03E$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,0>::operator++
PUBLIC	??F?$vec@$03E$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,0>::operator--
PUBLIC	??E?$vec@$03E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,0>::operator++
PUBLIC	??F?$vec@$03E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,0>::operator--
PUBLIC	?length@?$vec@$03C$0A@@glm@@SAHXZ		; glm::vec<4,signed char,0>::length
PUBLIC	??A?$vec@$03C$0A@@glm@@QAEAACH@Z		; glm::vec<4,signed char,0>::operator[]
PUBLIC	??A?$vec@$03C$0A@@glm@@QBEABCH@Z		; glm::vec<4,signed char,0>::operator[]
PUBLIC	??0?$vec@$03C$0A@@glm@@QAE@C@Z			; glm::vec<4,signed char,0>::vec<4,signed char,0>
PUBLIC	??0?$vec@$03C$0A@@glm@@QAE@CCCC@Z		; glm::vec<4,signed char,0>::vec<4,signed char,0>
PUBLIC	??E?$vec@$03C$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,0>::operator++
PUBLIC	??F?$vec@$03C$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,0>::operator--
PUBLIC	??E?$vec@$03C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,0>::operator++
PUBLIC	??F?$vec@$03C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,0>::operator--
PUBLIC	?length@?$vec@$01I$0A@@glm@@SAHXZ		; glm::vec<2,unsigned int,0>::length
PUBLIC	??A?$vec@$01I$0A@@glm@@QAEAAIH@Z		; glm::vec<2,unsigned int,0>::operator[]
PUBLIC	??A?$vec@$01I$0A@@glm@@QBEABIH@Z		; glm::vec<2,unsigned int,0>::operator[]
PUBLIC	??0?$vec@$01I$0A@@glm@@QAE@I@Z			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>
PUBLIC	??0?$vec@$01I$0A@@glm@@QAE@II@Z			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>
PUBLIC	??E?$vec@$01I$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,0>::operator++
PUBLIC	??F?$vec@$01I$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,0>::operator--
PUBLIC	??E?$vec@$01I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,0>::operator++
PUBLIC	??F?$vec@$01I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,0>::operator--
PUBLIC	?length@?$vec@$00E$01@glm@@SAHXZ		; glm::vec<1,unsigned char,2>::length
PUBLIC	??A?$vec@$00E$01@glm@@QAEAAEH@Z			; glm::vec<1,unsigned char,2>::operator[]
PUBLIC	??A?$vec@$00E$01@glm@@QBEABEH@Z			; glm::vec<1,unsigned char,2>::operator[]
PUBLIC	??0?$vec@$00E$01@glm@@QAE@E@Z			; glm::vec<1,unsigned char,2>::vec<1,unsigned char,2>
PUBLIC	??E?$vec@$00E$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,2>::operator++
PUBLIC	??F?$vec@$00E$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,2>::operator--
PUBLIC	??E?$vec@$00E$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,2>::operator++
PUBLIC	??F?$vec@$00E$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,2>::operator--
PUBLIC	?length@?$vec@$00G$01@glm@@SAHXZ		; glm::vec<1,unsigned short,2>::length
PUBLIC	??A?$vec@$00G$01@glm@@QAEAAGH@Z			; glm::vec<1,unsigned short,2>::operator[]
PUBLIC	??A?$vec@$00G$01@glm@@QBEABGH@Z			; glm::vec<1,unsigned short,2>::operator[]
PUBLIC	??0?$vec@$00G$01@glm@@QAE@G@Z			; glm::vec<1,unsigned short,2>::vec<1,unsigned short,2>
PUBLIC	??E?$vec@$00G$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,2>::operator++
PUBLIC	??F?$vec@$00G$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,2>::operator--
PUBLIC	??E?$vec@$00G$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,2>::operator++
PUBLIC	??F?$vec@$00G$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,2>::operator--
PUBLIC	?length@?$vec@$00I$01@glm@@SAHXZ		; glm::vec<1,unsigned int,2>::length
PUBLIC	??A?$vec@$00I$01@glm@@QAEAAIH@Z			; glm::vec<1,unsigned int,2>::operator[]
PUBLIC	??A?$vec@$00I$01@glm@@QBEABIH@Z			; glm::vec<1,unsigned int,2>::operator[]
PUBLIC	??0?$vec@$00I$01@glm@@QAE@I@Z			; glm::vec<1,unsigned int,2>::vec<1,unsigned int,2>
PUBLIC	??E?$vec@$00I$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,2>::operator++
PUBLIC	??F?$vec@$00I$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,2>::operator--
PUBLIC	??E?$vec@$00I$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,2>::operator++
PUBLIC	??F?$vec@$00I$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,2>::operator--
PUBLIC	?length@?$vec@$00_K$01@glm@@SAHXZ		; glm::vec<1,unsigned __int64,2>::length
PUBLIC	??A?$vec@$00_K$01@glm@@QAEAA_KH@Z		; glm::vec<1,unsigned __int64,2>::operator[]
PUBLIC	??A?$vec@$00_K$01@glm@@QBEAB_KH@Z		; glm::vec<1,unsigned __int64,2>::operator[]
PUBLIC	??0?$vec@$00_K$01@glm@@QAE@_K@Z			; glm::vec<1,unsigned __int64,2>::vec<1,unsigned __int64,2>
PUBLIC	??E?$vec@$00_K$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$00_K$01@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,2>::operator--
PUBLIC	??E?$vec@$00_K$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$00_K$01@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,2>::operator--
PUBLIC	?length@?$vec@$00C$01@glm@@SAHXZ		; glm::vec<1,signed char,2>::length
PUBLIC	??A?$vec@$00C$01@glm@@QAEAACH@Z			; glm::vec<1,signed char,2>::operator[]
PUBLIC	??A?$vec@$00C$01@glm@@QBEABCH@Z			; glm::vec<1,signed char,2>::operator[]
PUBLIC	??0?$vec@$00C$01@glm@@QAE@C@Z			; glm::vec<1,signed char,2>::vec<1,signed char,2>
PUBLIC	??E?$vec@$00C$01@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,2>::operator++
PUBLIC	??F?$vec@$00C$01@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,2>::operator--
PUBLIC	??E?$vec@$00C$01@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,2>::operator++
PUBLIC	??F?$vec@$00C$01@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,2>::operator--
PUBLIC	?length@?$vec@$00F$01@glm@@SAHXZ		; glm::vec<1,short,2>::length
PUBLIC	??A?$vec@$00F$01@glm@@QAEAAFH@Z			; glm::vec<1,short,2>::operator[]
PUBLIC	??A?$vec@$00F$01@glm@@QBEABFH@Z			; glm::vec<1,short,2>::operator[]
PUBLIC	??0?$vec@$00F$01@glm@@QAE@F@Z			; glm::vec<1,short,2>::vec<1,short,2>
PUBLIC	??E?$vec@$00F$01@glm@@QAEAAU01@XZ		; glm::vec<1,short,2>::operator++
PUBLIC	??F?$vec@$00F$01@glm@@QAEAAU01@XZ		; glm::vec<1,short,2>::operator--
PUBLIC	??E?$vec@$00F$01@glm@@QAE?AU01@H@Z		; glm::vec<1,short,2>::operator++
PUBLIC	??F?$vec@$00F$01@glm@@QAE?AU01@H@Z		; glm::vec<1,short,2>::operator--
PUBLIC	?length@?$vec@$00H$01@glm@@SAHXZ		; glm::vec<1,int,2>::length
PUBLIC	??A?$vec@$00H$01@glm@@QAEAAHH@Z			; glm::vec<1,int,2>::operator[]
PUBLIC	??A?$vec@$00H$01@glm@@QBEABHH@Z			; glm::vec<1,int,2>::operator[]
PUBLIC	??0?$vec@$00H$01@glm@@QAE@H@Z			; glm::vec<1,int,2>::vec<1,int,2>
PUBLIC	??E?$vec@$00H$01@glm@@QAEAAU01@XZ		; glm::vec<1,int,2>::operator++
PUBLIC	??F?$vec@$00H$01@glm@@QAEAAU01@XZ		; glm::vec<1,int,2>::operator--
PUBLIC	??E?$vec@$00H$01@glm@@QAE?AU01@H@Z		; glm::vec<1,int,2>::operator++
PUBLIC	??F?$vec@$00H$01@glm@@QAE?AU01@H@Z		; glm::vec<1,int,2>::operator--
PUBLIC	?length@?$vec@$00_J$01@glm@@SAHXZ		; glm::vec<1,__int64,2>::length
PUBLIC	??A?$vec@$00_J$01@glm@@QAEAA_JH@Z		; glm::vec<1,__int64,2>::operator[]
PUBLIC	??A?$vec@$00_J$01@glm@@QBEAB_JH@Z		; glm::vec<1,__int64,2>::operator[]
PUBLIC	??0?$vec@$00_J$01@glm@@QAE@_J@Z			; glm::vec<1,__int64,2>::vec<1,__int64,2>
PUBLIC	??E?$vec@$00_J$01@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,2>::operator++
PUBLIC	??F?$vec@$00_J$01@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,2>::operator--
PUBLIC	??E?$vec@$00_J$01@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,2>::operator++
PUBLIC	??F?$vec@$00_J$01@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,2>::operator--
PUBLIC	?length@?$vec@$00M$01@glm@@SAHXZ		; glm::vec<1,float,2>::length
PUBLIC	??A?$vec@$00M$01@glm@@QAEAAMH@Z			; glm::vec<1,float,2>::operator[]
PUBLIC	??A?$vec@$00M$01@glm@@QBEABMH@Z			; glm::vec<1,float,2>::operator[]
PUBLIC	??0?$vec@$00M$01@glm@@QAE@M@Z			; glm::vec<1,float,2>::vec<1,float,2>
PUBLIC	??E?$vec@$00M$01@glm@@QAEAAU01@XZ		; glm::vec<1,float,2>::operator++
PUBLIC	??F?$vec@$00M$01@glm@@QAEAAU01@XZ		; glm::vec<1,float,2>::operator--
PUBLIC	??E?$vec@$00M$01@glm@@QAE?AU01@H@Z		; glm::vec<1,float,2>::operator++
PUBLIC	??F?$vec@$00M$01@glm@@QAE?AU01@H@Z		; glm::vec<1,float,2>::operator--
PUBLIC	?length@?$vec@$00N$01@glm@@SAHXZ		; glm::vec<1,double,2>::length
PUBLIC	??A?$vec@$00N$01@glm@@QAEAANH@Z			; glm::vec<1,double,2>::operator[]
PUBLIC	??A?$vec@$00N$01@glm@@QBEABNH@Z			; glm::vec<1,double,2>::operator[]
PUBLIC	??0?$vec@$00N$01@glm@@QAE@N@Z			; glm::vec<1,double,2>::vec<1,double,2>
PUBLIC	??E?$vec@$00N$01@glm@@QAEAAU01@XZ		; glm::vec<1,double,2>::operator++
PUBLIC	??F?$vec@$00N$01@glm@@QAEAAU01@XZ		; glm::vec<1,double,2>::operator--
PUBLIC	??E?$vec@$00N$01@glm@@QAE?AU01@H@Z		; glm::vec<1,double,2>::operator++
PUBLIC	??F?$vec@$00N$01@glm@@QAE?AU01@H@Z		; glm::vec<1,double,2>::operator--
PUBLIC	?length@?$vec@$00E$00@glm@@SAHXZ		; glm::vec<1,unsigned char,1>::length
PUBLIC	??A?$vec@$00E$00@glm@@QAEAAEH@Z			; glm::vec<1,unsigned char,1>::operator[]
PUBLIC	??A?$vec@$00E$00@glm@@QBEABEH@Z			; glm::vec<1,unsigned char,1>::operator[]
PUBLIC	??0?$vec@$00E$00@glm@@QAE@E@Z			; glm::vec<1,unsigned char,1>::vec<1,unsigned char,1>
PUBLIC	??E?$vec@$00E$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,1>::operator++
PUBLIC	??F?$vec@$00E$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,1>::operator--
PUBLIC	??E?$vec@$00E$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,1>::operator++
PUBLIC	??F?$vec@$00E$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,1>::operator--
PUBLIC	?length@?$vec@$00G$00@glm@@SAHXZ		; glm::vec<1,unsigned short,1>::length
PUBLIC	??A?$vec@$00G$00@glm@@QAEAAGH@Z			; glm::vec<1,unsigned short,1>::operator[]
PUBLIC	??A?$vec@$00G$00@glm@@QBEABGH@Z			; glm::vec<1,unsigned short,1>::operator[]
PUBLIC	??0?$vec@$00G$00@glm@@QAE@G@Z			; glm::vec<1,unsigned short,1>::vec<1,unsigned short,1>
PUBLIC	??E?$vec@$00G$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,1>::operator++
PUBLIC	??F?$vec@$00G$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,1>::operator--
PUBLIC	??E?$vec@$00G$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,1>::operator++
PUBLIC	??F?$vec@$00G$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,1>::operator--
PUBLIC	?length@?$vec@$00I$00@glm@@SAHXZ		; glm::vec<1,unsigned int,1>::length
PUBLIC	??A?$vec@$00I$00@glm@@QAEAAIH@Z			; glm::vec<1,unsigned int,1>::operator[]
PUBLIC	??A?$vec@$00I$00@glm@@QBEABIH@Z			; glm::vec<1,unsigned int,1>::operator[]
PUBLIC	??0?$vec@$00I$00@glm@@QAE@I@Z			; glm::vec<1,unsigned int,1>::vec<1,unsigned int,1>
PUBLIC	??E?$vec@$00I$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,1>::operator++
PUBLIC	??F?$vec@$00I$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,1>::operator--
PUBLIC	??E?$vec@$00I$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,1>::operator++
PUBLIC	??F?$vec@$00I$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,1>::operator--
PUBLIC	?length@?$vec@$00_K$00@glm@@SAHXZ		; glm::vec<1,unsigned __int64,1>::length
PUBLIC	??A?$vec@$00_K$00@glm@@QAEAA_KH@Z		; glm::vec<1,unsigned __int64,1>::operator[]
PUBLIC	??A?$vec@$00_K$00@glm@@QBEAB_KH@Z		; glm::vec<1,unsigned __int64,1>::operator[]
PUBLIC	??0?$vec@$00_K$00@glm@@QAE@_K@Z			; glm::vec<1,unsigned __int64,1>::vec<1,unsigned __int64,1>
PUBLIC	??E?$vec@$00_K$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$00_K$00@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,1>::operator--
PUBLIC	??E?$vec@$00_K$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$00_K$00@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,1>::operator--
PUBLIC	?length@?$vec@$00C$00@glm@@SAHXZ		; glm::vec<1,signed char,1>::length
PUBLIC	??A?$vec@$00C$00@glm@@QAEAACH@Z			; glm::vec<1,signed char,1>::operator[]
PUBLIC	??A?$vec@$00C$00@glm@@QBEABCH@Z			; glm::vec<1,signed char,1>::operator[]
PUBLIC	??0?$vec@$00C$00@glm@@QAE@C@Z			; glm::vec<1,signed char,1>::vec<1,signed char,1>
PUBLIC	??E?$vec@$00C$00@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,1>::operator++
PUBLIC	??F?$vec@$00C$00@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,1>::operator--
PUBLIC	??E?$vec@$00C$00@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,1>::operator++
PUBLIC	??F?$vec@$00C$00@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,1>::operator--
PUBLIC	?length@?$vec@$00F$00@glm@@SAHXZ		; glm::vec<1,short,1>::length
PUBLIC	??A?$vec@$00F$00@glm@@QAEAAFH@Z			; glm::vec<1,short,1>::operator[]
PUBLIC	??A?$vec@$00F$00@glm@@QBEABFH@Z			; glm::vec<1,short,1>::operator[]
PUBLIC	??0?$vec@$00F$00@glm@@QAE@F@Z			; glm::vec<1,short,1>::vec<1,short,1>
PUBLIC	??E?$vec@$00F$00@glm@@QAEAAU01@XZ		; glm::vec<1,short,1>::operator++
PUBLIC	??F?$vec@$00F$00@glm@@QAEAAU01@XZ		; glm::vec<1,short,1>::operator--
PUBLIC	??E?$vec@$00F$00@glm@@QAE?AU01@H@Z		; glm::vec<1,short,1>::operator++
PUBLIC	??F?$vec@$00F$00@glm@@QAE?AU01@H@Z		; glm::vec<1,short,1>::operator--
PUBLIC	?length@?$vec@$00H$00@glm@@SAHXZ		; glm::vec<1,int,1>::length
PUBLIC	??A?$vec@$00H$00@glm@@QAEAAHH@Z			; glm::vec<1,int,1>::operator[]
PUBLIC	??A?$vec@$00H$00@glm@@QBEABHH@Z			; glm::vec<1,int,1>::operator[]
PUBLIC	??0?$vec@$00H$00@glm@@QAE@H@Z			; glm::vec<1,int,1>::vec<1,int,1>
PUBLIC	??E?$vec@$00H$00@glm@@QAEAAU01@XZ		; glm::vec<1,int,1>::operator++
PUBLIC	??F?$vec@$00H$00@glm@@QAEAAU01@XZ		; glm::vec<1,int,1>::operator--
PUBLIC	??E?$vec@$00H$00@glm@@QAE?AU01@H@Z		; glm::vec<1,int,1>::operator++
PUBLIC	??F?$vec@$00H$00@glm@@QAE?AU01@H@Z		; glm::vec<1,int,1>::operator--
PUBLIC	?length@?$vec@$00_J$00@glm@@SAHXZ		; glm::vec<1,__int64,1>::length
PUBLIC	??A?$vec@$00_J$00@glm@@QAEAA_JH@Z		; glm::vec<1,__int64,1>::operator[]
PUBLIC	??A?$vec@$00_J$00@glm@@QBEAB_JH@Z		; glm::vec<1,__int64,1>::operator[]
PUBLIC	??0?$vec@$00_J$00@glm@@QAE@_J@Z			; glm::vec<1,__int64,1>::vec<1,__int64,1>
PUBLIC	??E?$vec@$00_J$00@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,1>::operator++
PUBLIC	??F?$vec@$00_J$00@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,1>::operator--
PUBLIC	??E?$vec@$00_J$00@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,1>::operator++
PUBLIC	??F?$vec@$00_J$00@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,1>::operator--
PUBLIC	?length@?$vec@$00M$00@glm@@SAHXZ		; glm::vec<1,float,1>::length
PUBLIC	??A?$vec@$00M$00@glm@@QAEAAMH@Z			; glm::vec<1,float,1>::operator[]
PUBLIC	??A?$vec@$00M$00@glm@@QBEABMH@Z			; glm::vec<1,float,1>::operator[]
PUBLIC	??0?$vec@$00M$00@glm@@QAE@M@Z			; glm::vec<1,float,1>::vec<1,float,1>
PUBLIC	??E?$vec@$00M$00@glm@@QAEAAU01@XZ		; glm::vec<1,float,1>::operator++
PUBLIC	??F?$vec@$00M$00@glm@@QAEAAU01@XZ		; glm::vec<1,float,1>::operator--
PUBLIC	??E?$vec@$00M$00@glm@@QAE?AU01@H@Z		; glm::vec<1,float,1>::operator++
PUBLIC	??F?$vec@$00M$00@glm@@QAE?AU01@H@Z		; glm::vec<1,float,1>::operator--
PUBLIC	?length@?$vec@$00N$00@glm@@SAHXZ		; glm::vec<1,double,1>::length
PUBLIC	??A?$vec@$00N$00@glm@@QAEAANH@Z			; glm::vec<1,double,1>::operator[]
PUBLIC	??A?$vec@$00N$00@glm@@QBEABNH@Z			; glm::vec<1,double,1>::operator[]
PUBLIC	??0?$vec@$00N$00@glm@@QAE@N@Z			; glm::vec<1,double,1>::vec<1,double,1>
PUBLIC	??E?$vec@$00N$00@glm@@QAEAAU01@XZ		; glm::vec<1,double,1>::operator++
PUBLIC	??F?$vec@$00N$00@glm@@QAEAAU01@XZ		; glm::vec<1,double,1>::operator--
PUBLIC	??E?$vec@$00N$00@glm@@QAE?AU01@H@Z		; glm::vec<1,double,1>::operator++
PUBLIC	??F?$vec@$00N$00@glm@@QAE?AU01@H@Z		; glm::vec<1,double,1>::operator--
PUBLIC	?length@?$vec@$00E$0A@@glm@@SAHXZ		; glm::vec<1,unsigned char,0>::length
PUBLIC	??A?$vec@$00E$0A@@glm@@QAEAAEH@Z		; glm::vec<1,unsigned char,0>::operator[]
PUBLIC	??A?$vec@$00E$0A@@glm@@QBEABEH@Z		; glm::vec<1,unsigned char,0>::operator[]
PUBLIC	??0?$vec@$00E$0A@@glm@@QAE@E@Z			; glm::vec<1,unsigned char,0>::vec<1,unsigned char,0>
PUBLIC	??E?$vec@$00E$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,0>::operator++
PUBLIC	??F?$vec@$00E$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned char,0>::operator--
PUBLIC	??E?$vec@$00E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,0>::operator++
PUBLIC	??F?$vec@$00E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned char,0>::operator--
PUBLIC	?length@?$vec@$00G$0A@@glm@@SAHXZ		; glm::vec<1,unsigned short,0>::length
PUBLIC	??A?$vec@$00G$0A@@glm@@QAEAAGH@Z		; glm::vec<1,unsigned short,0>::operator[]
PUBLIC	??A?$vec@$00G$0A@@glm@@QBEABGH@Z		; glm::vec<1,unsigned short,0>::operator[]
PUBLIC	??0?$vec@$00G$0A@@glm@@QAE@G@Z			; glm::vec<1,unsigned short,0>::vec<1,unsigned short,0>
PUBLIC	??E?$vec@$00G$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,0>::operator++
PUBLIC	??F?$vec@$00G$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned short,0>::operator--
PUBLIC	??E?$vec@$00G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,0>::operator++
PUBLIC	??F?$vec@$00G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned short,0>::operator--
PUBLIC	?length@?$vec@$00I$0A@@glm@@SAHXZ		; glm::vec<1,unsigned int,0>::length
PUBLIC	??A?$vec@$00I$0A@@glm@@QAEAAIH@Z		; glm::vec<1,unsigned int,0>::operator[]
PUBLIC	??A?$vec@$00I$0A@@glm@@QBEABIH@Z		; glm::vec<1,unsigned int,0>::operator[]
PUBLIC	??0?$vec@$00I$0A@@glm@@QAE@I@Z			; glm::vec<1,unsigned int,0>::vec<1,unsigned int,0>
PUBLIC	??E?$vec@$00I$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,0>::operator++
PUBLIC	??F?$vec@$00I$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned int,0>::operator--
PUBLIC	??E?$vec@$00I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,0>::operator++
PUBLIC	??F?$vec@$00I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned int,0>::operator--
PUBLIC	?length@?$vec@$00_K$0A@@glm@@SAHXZ		; glm::vec<1,unsigned __int64,0>::length
PUBLIC	??A?$vec@$00_K$0A@@glm@@QAEAA_KH@Z		; glm::vec<1,unsigned __int64,0>::operator[]
PUBLIC	??A?$vec@$00_K$0A@@glm@@QBEAB_KH@Z		; glm::vec<1,unsigned __int64,0>::operator[]
PUBLIC	??0?$vec@$00_K$0A@@glm@@QAE@_K@Z		; glm::vec<1,unsigned __int64,0>::vec<1,unsigned __int64,0>
PUBLIC	??E?$vec@$00_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$00_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,unsigned __int64,0>::operator--
PUBLIC	??E?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,unsigned __int64,0>::operator--
PUBLIC	?length@?$vec@$00C$0A@@glm@@SAHXZ		; glm::vec<1,signed char,0>::length
PUBLIC	??A?$vec@$00C$0A@@glm@@QAEAACH@Z		; glm::vec<1,signed char,0>::operator[]
PUBLIC	??A?$vec@$00C$0A@@glm@@QBEABCH@Z		; glm::vec<1,signed char,0>::operator[]
PUBLIC	??0?$vec@$00C$0A@@glm@@QAE@C@Z			; glm::vec<1,signed char,0>::vec<1,signed char,0>
PUBLIC	??E?$vec@$00C$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,0>::operator++
PUBLIC	??F?$vec@$00C$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,signed char,0>::operator--
PUBLIC	??E?$vec@$00C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,0>::operator++
PUBLIC	??F?$vec@$00C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,signed char,0>::operator--
PUBLIC	?length@?$vec@$00F$0A@@glm@@SAHXZ		; glm::vec<1,short,0>::length
PUBLIC	??A?$vec@$00F$0A@@glm@@QAEAAFH@Z		; glm::vec<1,short,0>::operator[]
PUBLIC	??A?$vec@$00F$0A@@glm@@QBEABFH@Z		; glm::vec<1,short,0>::operator[]
PUBLIC	??0?$vec@$00F$0A@@glm@@QAE@F@Z			; glm::vec<1,short,0>::vec<1,short,0>
PUBLIC	??E?$vec@$00F$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,short,0>::operator++
PUBLIC	??F?$vec@$00F$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,short,0>::operator--
PUBLIC	??E?$vec@$00F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,short,0>::operator++
PUBLIC	??F?$vec@$00F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,short,0>::operator--
PUBLIC	?length@?$vec@$00H$0A@@glm@@SAHXZ		; glm::vec<1,int,0>::length
PUBLIC	??A?$vec@$00H$0A@@glm@@QAEAAHH@Z		; glm::vec<1,int,0>::operator[]
PUBLIC	??A?$vec@$00H$0A@@glm@@QBEABHH@Z		; glm::vec<1,int,0>::operator[]
PUBLIC	??0?$vec@$00H$0A@@glm@@QAE@H@Z			; glm::vec<1,int,0>::vec<1,int,0>
PUBLIC	??E?$vec@$00H$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,int,0>::operator++
PUBLIC	??F?$vec@$00H$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,int,0>::operator--
PUBLIC	??E?$vec@$00H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,int,0>::operator++
PUBLIC	??F?$vec@$00H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,int,0>::operator--
PUBLIC	?length@?$vec@$00_J$0A@@glm@@SAHXZ		; glm::vec<1,__int64,0>::length
PUBLIC	??A?$vec@$00_J$0A@@glm@@QAEAA_JH@Z		; glm::vec<1,__int64,0>::operator[]
PUBLIC	??A?$vec@$00_J$0A@@glm@@QBEAB_JH@Z		; glm::vec<1,__int64,0>::operator[]
PUBLIC	??0?$vec@$00_J$0A@@glm@@QAE@_J@Z		; glm::vec<1,__int64,0>::vec<1,__int64,0>
PUBLIC	??E?$vec@$00_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,0>::operator++
PUBLIC	??F?$vec@$00_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,__int64,0>::operator--
PUBLIC	??E?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,0>::operator++
PUBLIC	??F?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,__int64,0>::operator--
PUBLIC	?length@?$vec@$00M$0A@@glm@@SAHXZ		; glm::vec<1,float,0>::length
PUBLIC	??A?$vec@$00M$0A@@glm@@QAEAAMH@Z		; glm::vec<1,float,0>::operator[]
PUBLIC	??A?$vec@$00M$0A@@glm@@QBEABMH@Z		; glm::vec<1,float,0>::operator[]
PUBLIC	??0?$vec@$00M$0A@@glm@@QAE@M@Z			; glm::vec<1,float,0>::vec<1,float,0>
PUBLIC	??E?$vec@$00M$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,float,0>::operator++
PUBLIC	??F?$vec@$00M$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,float,0>::operator--
PUBLIC	??E?$vec@$00M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,float,0>::operator++
PUBLIC	??F?$vec@$00M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,float,0>::operator--
PUBLIC	?length@?$vec@$00N$0A@@glm@@SAHXZ		; glm::vec<1,double,0>::length
PUBLIC	??A?$vec@$00N$0A@@glm@@QAEAANH@Z		; glm::vec<1,double,0>::operator[]
PUBLIC	??A?$vec@$00N$0A@@glm@@QBEABNH@Z		; glm::vec<1,double,0>::operator[]
PUBLIC	??0?$vec@$00N$0A@@glm@@QAE@N@Z			; glm::vec<1,double,0>::vec<1,double,0>
PUBLIC	??E?$vec@$00N$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,double,0>::operator++
PUBLIC	??F?$vec@$00N$0A@@glm@@QAEAAU01@XZ		; glm::vec<1,double,0>::operator--
PUBLIC	??E?$vec@$00N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,double,0>::operator++
PUBLIC	??F?$vec@$00N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<1,double,0>::operator--
PUBLIC	?length@?$vec@$01E$01@glm@@SAHXZ		; glm::vec<2,unsigned char,2>::length
PUBLIC	??A?$vec@$01E$01@glm@@QAEAAEH@Z			; glm::vec<2,unsigned char,2>::operator[]
PUBLIC	??A?$vec@$01E$01@glm@@QBEABEH@Z			; glm::vec<2,unsigned char,2>::operator[]
PUBLIC	??0?$vec@$01E$01@glm@@QAE@E@Z			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>
PUBLIC	??0?$vec@$01E$01@glm@@QAE@EE@Z			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>
PUBLIC	??E?$vec@$01E$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,2>::operator++
PUBLIC	??F?$vec@$01E$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,2>::operator--
PUBLIC	??E?$vec@$01E$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,2>::operator++
PUBLIC	??F?$vec@$01E$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,2>::operator--
PUBLIC	?length@?$vec@$01G$01@glm@@SAHXZ		; glm::vec<2,unsigned short,2>::length
PUBLIC	??A?$vec@$01G$01@glm@@QAEAAGH@Z			; glm::vec<2,unsigned short,2>::operator[]
PUBLIC	??A?$vec@$01G$01@glm@@QBEABGH@Z			; glm::vec<2,unsigned short,2>::operator[]
PUBLIC	??0?$vec@$01G$01@glm@@QAE@G@Z			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>
PUBLIC	??0?$vec@$01G$01@glm@@QAE@GG@Z			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>
PUBLIC	??E?$vec@$01G$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,2>::operator++
PUBLIC	??F?$vec@$01G$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,2>::operator--
PUBLIC	??E?$vec@$01G$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,2>::operator++
PUBLIC	??F?$vec@$01G$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,2>::operator--
PUBLIC	?length@?$vec@$01I$01@glm@@SAHXZ		; glm::vec<2,unsigned int,2>::length
PUBLIC	??A?$vec@$01I$01@glm@@QAEAAIH@Z			; glm::vec<2,unsigned int,2>::operator[]
PUBLIC	??A?$vec@$01I$01@glm@@QBEABIH@Z			; glm::vec<2,unsigned int,2>::operator[]
PUBLIC	??0?$vec@$01I$01@glm@@QAE@I@Z			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>
PUBLIC	??0?$vec@$01I$01@glm@@QAE@II@Z			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>
PUBLIC	??E?$vec@$01I$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,2>::operator++
PUBLIC	??F?$vec@$01I$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,2>::operator--
PUBLIC	??E?$vec@$01I$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,2>::operator++
PUBLIC	??F?$vec@$01I$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,2>::operator--
PUBLIC	?length@?$vec@$01_K$01@glm@@SAHXZ		; glm::vec<2,unsigned __int64,2>::length
PUBLIC	??A?$vec@$01_K$01@glm@@QAEAA_KH@Z		; glm::vec<2,unsigned __int64,2>::operator[]
PUBLIC	??A?$vec@$01_K$01@glm@@QBEAB_KH@Z		; glm::vec<2,unsigned __int64,2>::operator[]
PUBLIC	??0?$vec@$01_K$01@glm@@QAE@_K@Z			; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>
PUBLIC	??0?$vec@$01_K$01@glm@@QAE@_K0@Z		; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>
PUBLIC	??E?$vec@$01_K$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$01_K$01@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,2>::operator--
PUBLIC	??E?$vec@$01_K$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$01_K$01@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,2>::operator--
PUBLIC	?length@?$vec@$01C$01@glm@@SAHXZ		; glm::vec<2,signed char,2>::length
PUBLIC	??A?$vec@$01C$01@glm@@QAEAACH@Z			; glm::vec<2,signed char,2>::operator[]
PUBLIC	??A?$vec@$01C$01@glm@@QBEABCH@Z			; glm::vec<2,signed char,2>::operator[]
PUBLIC	??0?$vec@$01C$01@glm@@QAE@C@Z			; glm::vec<2,signed char,2>::vec<2,signed char,2>
PUBLIC	??0?$vec@$01C$01@glm@@QAE@CC@Z			; glm::vec<2,signed char,2>::vec<2,signed char,2>
PUBLIC	??E?$vec@$01C$01@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,2>::operator++
PUBLIC	??F?$vec@$01C$01@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,2>::operator--
PUBLIC	??E?$vec@$01C$01@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,2>::operator++
PUBLIC	??F?$vec@$01C$01@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,2>::operator--
PUBLIC	?length@?$vec@$01F$01@glm@@SAHXZ		; glm::vec<2,short,2>::length
PUBLIC	??A?$vec@$01F$01@glm@@QAEAAFH@Z			; glm::vec<2,short,2>::operator[]
PUBLIC	??A?$vec@$01F$01@glm@@QBEABFH@Z			; glm::vec<2,short,2>::operator[]
PUBLIC	??0?$vec@$01F$01@glm@@QAE@F@Z			; glm::vec<2,short,2>::vec<2,short,2>
PUBLIC	??0?$vec@$01F$01@glm@@QAE@FF@Z			; glm::vec<2,short,2>::vec<2,short,2>
PUBLIC	??E?$vec@$01F$01@glm@@QAEAAU01@XZ		; glm::vec<2,short,2>::operator++
PUBLIC	??F?$vec@$01F$01@glm@@QAEAAU01@XZ		; glm::vec<2,short,2>::operator--
PUBLIC	??E?$vec@$01F$01@glm@@QAE?AU01@H@Z		; glm::vec<2,short,2>::operator++
PUBLIC	??F?$vec@$01F$01@glm@@QAE?AU01@H@Z		; glm::vec<2,short,2>::operator--
PUBLIC	?length@?$vec@$01H$01@glm@@SAHXZ		; glm::vec<2,int,2>::length
PUBLIC	??A?$vec@$01H$01@glm@@QAEAAHH@Z			; glm::vec<2,int,2>::operator[]
PUBLIC	??A?$vec@$01H$01@glm@@QBEABHH@Z			; glm::vec<2,int,2>::operator[]
PUBLIC	??0?$vec@$01H$01@glm@@QAE@H@Z			; glm::vec<2,int,2>::vec<2,int,2>
PUBLIC	??0?$vec@$01H$01@glm@@QAE@HH@Z			; glm::vec<2,int,2>::vec<2,int,2>
PUBLIC	??E?$vec@$01H$01@glm@@QAEAAU01@XZ		; glm::vec<2,int,2>::operator++
PUBLIC	??F?$vec@$01H$01@glm@@QAEAAU01@XZ		; glm::vec<2,int,2>::operator--
PUBLIC	??E?$vec@$01H$01@glm@@QAE?AU01@H@Z		; glm::vec<2,int,2>::operator++
PUBLIC	??F?$vec@$01H$01@glm@@QAE?AU01@H@Z		; glm::vec<2,int,2>::operator--
PUBLIC	?length@?$vec@$01_J$01@glm@@SAHXZ		; glm::vec<2,__int64,2>::length
PUBLIC	??A?$vec@$01_J$01@glm@@QAEAA_JH@Z		; glm::vec<2,__int64,2>::operator[]
PUBLIC	??A?$vec@$01_J$01@glm@@QBEAB_JH@Z		; glm::vec<2,__int64,2>::operator[]
PUBLIC	??0?$vec@$01_J$01@glm@@QAE@_J@Z			; glm::vec<2,__int64,2>::vec<2,__int64,2>
PUBLIC	??0?$vec@$01_J$01@glm@@QAE@_J0@Z		; glm::vec<2,__int64,2>::vec<2,__int64,2>
PUBLIC	??E?$vec@$01_J$01@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,2>::operator++
PUBLIC	??F?$vec@$01_J$01@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,2>::operator--
PUBLIC	??E?$vec@$01_J$01@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,2>::operator++
PUBLIC	??F?$vec@$01_J$01@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,2>::operator--
PUBLIC	?length@?$vec@$01M$01@glm@@SAHXZ		; glm::vec<2,float,2>::length
PUBLIC	??A?$vec@$01M$01@glm@@QAEAAMH@Z			; glm::vec<2,float,2>::operator[]
PUBLIC	??A?$vec@$01M$01@glm@@QBEABMH@Z			; glm::vec<2,float,2>::operator[]
PUBLIC	??0?$vec@$01M$01@glm@@QAE@M@Z			; glm::vec<2,float,2>::vec<2,float,2>
PUBLIC	??0?$vec@$01M$01@glm@@QAE@MM@Z			; glm::vec<2,float,2>::vec<2,float,2>
PUBLIC	??E?$vec@$01M$01@glm@@QAEAAU01@XZ		; glm::vec<2,float,2>::operator++
PUBLIC	??F?$vec@$01M$01@glm@@QAEAAU01@XZ		; glm::vec<2,float,2>::operator--
PUBLIC	??E?$vec@$01M$01@glm@@QAE?AU01@H@Z		; glm::vec<2,float,2>::operator++
PUBLIC	??F?$vec@$01M$01@glm@@QAE?AU01@H@Z		; glm::vec<2,float,2>::operator--
PUBLIC	?length@?$vec@$01N$01@glm@@SAHXZ		; glm::vec<2,double,2>::length
PUBLIC	??A?$vec@$01N$01@glm@@QAEAANH@Z			; glm::vec<2,double,2>::operator[]
PUBLIC	??A?$vec@$01N$01@glm@@QBEABNH@Z			; glm::vec<2,double,2>::operator[]
PUBLIC	??0?$vec@$01N$01@glm@@QAE@N@Z			; glm::vec<2,double,2>::vec<2,double,2>
PUBLIC	??0?$vec@$01N$01@glm@@QAE@NN@Z			; glm::vec<2,double,2>::vec<2,double,2>
PUBLIC	??E?$vec@$01N$01@glm@@QAEAAU01@XZ		; glm::vec<2,double,2>::operator++
PUBLIC	??F?$vec@$01N$01@glm@@QAEAAU01@XZ		; glm::vec<2,double,2>::operator--
PUBLIC	??E?$vec@$01N$01@glm@@QAE?AU01@H@Z		; glm::vec<2,double,2>::operator++
PUBLIC	??F?$vec@$01N$01@glm@@QAE?AU01@H@Z		; glm::vec<2,double,2>::operator--
PUBLIC	?length@?$vec@$01E$00@glm@@SAHXZ		; glm::vec<2,unsigned char,1>::length
PUBLIC	??A?$vec@$01E$00@glm@@QAEAAEH@Z			; glm::vec<2,unsigned char,1>::operator[]
PUBLIC	??A?$vec@$01E$00@glm@@QBEABEH@Z			; glm::vec<2,unsigned char,1>::operator[]
PUBLIC	??0?$vec@$01E$00@glm@@QAE@E@Z			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>
PUBLIC	??0?$vec@$01E$00@glm@@QAE@EE@Z			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>
PUBLIC	??E?$vec@$01E$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,1>::operator++
PUBLIC	??F?$vec@$01E$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,1>::operator--
PUBLIC	??E?$vec@$01E$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,1>::operator++
PUBLIC	??F?$vec@$01E$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,1>::operator--
PUBLIC	?length@?$vec@$01G$00@glm@@SAHXZ		; glm::vec<2,unsigned short,1>::length
PUBLIC	??A?$vec@$01G$00@glm@@QAEAAGH@Z			; glm::vec<2,unsigned short,1>::operator[]
PUBLIC	??A?$vec@$01G$00@glm@@QBEABGH@Z			; glm::vec<2,unsigned short,1>::operator[]
PUBLIC	??0?$vec@$01G$00@glm@@QAE@G@Z			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>
PUBLIC	??0?$vec@$01G$00@glm@@QAE@GG@Z			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>
PUBLIC	??E?$vec@$01G$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,1>::operator++
PUBLIC	??F?$vec@$01G$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned short,1>::operator--
PUBLIC	??E?$vec@$01G$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,1>::operator++
PUBLIC	??F?$vec@$01G$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned short,1>::operator--
PUBLIC	?length@?$vec@$01I$00@glm@@SAHXZ		; glm::vec<2,unsigned int,1>::length
PUBLIC	??A?$vec@$01I$00@glm@@QAEAAIH@Z			; glm::vec<2,unsigned int,1>::operator[]
PUBLIC	??A?$vec@$01I$00@glm@@QBEABIH@Z			; glm::vec<2,unsigned int,1>::operator[]
PUBLIC	??0?$vec@$01I$00@glm@@QAE@I@Z			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>
PUBLIC	??0?$vec@$01I$00@glm@@QAE@II@Z			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>
PUBLIC	??E?$vec@$01I$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,1>::operator++
PUBLIC	??F?$vec@$01I$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned int,1>::operator--
PUBLIC	??E?$vec@$01I$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,1>::operator++
PUBLIC	??F?$vec@$01I$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned int,1>::operator--
PUBLIC	?length@?$vec@$01_K$00@glm@@SAHXZ		; glm::vec<2,unsigned __int64,1>::length
PUBLIC	??A?$vec@$01_K$00@glm@@QAEAA_KH@Z		; glm::vec<2,unsigned __int64,1>::operator[]
PUBLIC	??A?$vec@$01_K$00@glm@@QBEAB_KH@Z		; glm::vec<2,unsigned __int64,1>::operator[]
PUBLIC	??0?$vec@$01_K$00@glm@@QAE@_K@Z			; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>
PUBLIC	??0?$vec@$01_K$00@glm@@QAE@_K0@Z		; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>
PUBLIC	??E?$vec@$01_K$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$01_K$00@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,1>::operator--
PUBLIC	??E?$vec@$01_K$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$01_K$00@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,1>::operator--
PUBLIC	?length@?$vec@$01C$00@glm@@SAHXZ		; glm::vec<2,signed char,1>::length
PUBLIC	??A?$vec@$01C$00@glm@@QAEAACH@Z			; glm::vec<2,signed char,1>::operator[]
PUBLIC	??A?$vec@$01C$00@glm@@QBEABCH@Z			; glm::vec<2,signed char,1>::operator[]
PUBLIC	??0?$vec@$01C$00@glm@@QAE@C@Z			; glm::vec<2,signed char,1>::vec<2,signed char,1>
PUBLIC	??0?$vec@$01C$00@glm@@QAE@CC@Z			; glm::vec<2,signed char,1>::vec<2,signed char,1>
PUBLIC	??E?$vec@$01C$00@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,1>::operator++
PUBLIC	??F?$vec@$01C$00@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,1>::operator--
PUBLIC	??E?$vec@$01C$00@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,1>::operator++
PUBLIC	??F?$vec@$01C$00@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,1>::operator--
PUBLIC	?length@?$vec@$01F$00@glm@@SAHXZ		; glm::vec<2,short,1>::length
PUBLIC	??A?$vec@$01F$00@glm@@QAEAAFH@Z			; glm::vec<2,short,1>::operator[]
PUBLIC	??A?$vec@$01F$00@glm@@QBEABFH@Z			; glm::vec<2,short,1>::operator[]
PUBLIC	??0?$vec@$01F$00@glm@@QAE@F@Z			; glm::vec<2,short,1>::vec<2,short,1>
PUBLIC	??0?$vec@$01F$00@glm@@QAE@FF@Z			; glm::vec<2,short,1>::vec<2,short,1>
PUBLIC	??E?$vec@$01F$00@glm@@QAEAAU01@XZ		; glm::vec<2,short,1>::operator++
PUBLIC	??F?$vec@$01F$00@glm@@QAEAAU01@XZ		; glm::vec<2,short,1>::operator--
PUBLIC	??E?$vec@$01F$00@glm@@QAE?AU01@H@Z		; glm::vec<2,short,1>::operator++
PUBLIC	??F?$vec@$01F$00@glm@@QAE?AU01@H@Z		; glm::vec<2,short,1>::operator--
PUBLIC	?length@?$vec@$01H$00@glm@@SAHXZ		; glm::vec<2,int,1>::length
PUBLIC	??A?$vec@$01H$00@glm@@QAEAAHH@Z			; glm::vec<2,int,1>::operator[]
PUBLIC	??A?$vec@$01H$00@glm@@QBEABHH@Z			; glm::vec<2,int,1>::operator[]
PUBLIC	??0?$vec@$01H$00@glm@@QAE@H@Z			; glm::vec<2,int,1>::vec<2,int,1>
PUBLIC	??0?$vec@$01H$00@glm@@QAE@HH@Z			; glm::vec<2,int,1>::vec<2,int,1>
PUBLIC	??E?$vec@$01H$00@glm@@QAEAAU01@XZ		; glm::vec<2,int,1>::operator++
PUBLIC	??F?$vec@$01H$00@glm@@QAEAAU01@XZ		; glm::vec<2,int,1>::operator--
PUBLIC	??E?$vec@$01H$00@glm@@QAE?AU01@H@Z		; glm::vec<2,int,1>::operator++
PUBLIC	??F?$vec@$01H$00@glm@@QAE?AU01@H@Z		; glm::vec<2,int,1>::operator--
PUBLIC	?length@?$vec@$01_J$00@glm@@SAHXZ		; glm::vec<2,__int64,1>::length
PUBLIC	??A?$vec@$01_J$00@glm@@QAEAA_JH@Z		; glm::vec<2,__int64,1>::operator[]
PUBLIC	??A?$vec@$01_J$00@glm@@QBEAB_JH@Z		; glm::vec<2,__int64,1>::operator[]
PUBLIC	??0?$vec@$01_J$00@glm@@QAE@_J@Z			; glm::vec<2,__int64,1>::vec<2,__int64,1>
PUBLIC	??0?$vec@$01_J$00@glm@@QAE@_J0@Z		; glm::vec<2,__int64,1>::vec<2,__int64,1>
PUBLIC	??E?$vec@$01_J$00@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,1>::operator++
PUBLIC	??F?$vec@$01_J$00@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,1>::operator--
PUBLIC	??E?$vec@$01_J$00@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,1>::operator++
PUBLIC	??F?$vec@$01_J$00@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,1>::operator--
PUBLIC	?length@?$vec@$01M$00@glm@@SAHXZ		; glm::vec<2,float,1>::length
PUBLIC	??A?$vec@$01M$00@glm@@QAEAAMH@Z			; glm::vec<2,float,1>::operator[]
PUBLIC	??A?$vec@$01M$00@glm@@QBEABMH@Z			; glm::vec<2,float,1>::operator[]
PUBLIC	??0?$vec@$01M$00@glm@@QAE@M@Z			; glm::vec<2,float,1>::vec<2,float,1>
PUBLIC	??0?$vec@$01M$00@glm@@QAE@MM@Z			; glm::vec<2,float,1>::vec<2,float,1>
PUBLIC	??E?$vec@$01M$00@glm@@QAEAAU01@XZ		; glm::vec<2,float,1>::operator++
PUBLIC	??F?$vec@$01M$00@glm@@QAEAAU01@XZ		; glm::vec<2,float,1>::operator--
PUBLIC	??E?$vec@$01M$00@glm@@QAE?AU01@H@Z		; glm::vec<2,float,1>::operator++
PUBLIC	??F?$vec@$01M$00@glm@@QAE?AU01@H@Z		; glm::vec<2,float,1>::operator--
PUBLIC	?length@?$vec@$01N$00@glm@@SAHXZ		; glm::vec<2,double,1>::length
PUBLIC	??A?$vec@$01N$00@glm@@QAEAANH@Z			; glm::vec<2,double,1>::operator[]
PUBLIC	??A?$vec@$01N$00@glm@@QBEABNH@Z			; glm::vec<2,double,1>::operator[]
PUBLIC	??0?$vec@$01N$00@glm@@QAE@N@Z			; glm::vec<2,double,1>::vec<2,double,1>
PUBLIC	??0?$vec@$01N$00@glm@@QAE@NN@Z			; glm::vec<2,double,1>::vec<2,double,1>
PUBLIC	??E?$vec@$01N$00@glm@@QAEAAU01@XZ		; glm::vec<2,double,1>::operator++
PUBLIC	??F?$vec@$01N$00@glm@@QAEAAU01@XZ		; glm::vec<2,double,1>::operator--
PUBLIC	??E?$vec@$01N$00@glm@@QAE?AU01@H@Z		; glm::vec<2,double,1>::operator++
PUBLIC	??F?$vec@$01N$00@glm@@QAE?AU01@H@Z		; glm::vec<2,double,1>::operator--
PUBLIC	?length@?$vec@$01E$0A@@glm@@SAHXZ		; glm::vec<2,unsigned char,0>::length
PUBLIC	??A?$vec@$01E$0A@@glm@@QAEAAEH@Z		; glm::vec<2,unsigned char,0>::operator[]
PUBLIC	??A?$vec@$01E$0A@@glm@@QBEABEH@Z		; glm::vec<2,unsigned char,0>::operator[]
PUBLIC	??0?$vec@$01E$0A@@glm@@QAE@E@Z			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>
PUBLIC	??0?$vec@$01E$0A@@glm@@QAE@EE@Z			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>
PUBLIC	??E?$vec@$01E$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,0>::operator++
PUBLIC	??F?$vec@$01E$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned char,0>::operator--
PUBLIC	??E?$vec@$01E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,0>::operator++
PUBLIC	??F?$vec@$01E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned char,0>::operator--
PUBLIC	?length@?$vec@$01_K$0A@@glm@@SAHXZ		; glm::vec<2,unsigned __int64,0>::length
PUBLIC	??A?$vec@$01_K$0A@@glm@@QAEAA_KH@Z		; glm::vec<2,unsigned __int64,0>::operator[]
PUBLIC	??A?$vec@$01_K$0A@@glm@@QBEAB_KH@Z		; glm::vec<2,unsigned __int64,0>::operator[]
PUBLIC	??0?$vec@$01_K$0A@@glm@@QAE@_K@Z		; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>
PUBLIC	??0?$vec@$01_K$0A@@glm@@QAE@_K0@Z		; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>
PUBLIC	??E?$vec@$01_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$01_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,unsigned __int64,0>::operator--
PUBLIC	??E?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,unsigned __int64,0>::operator--
PUBLIC	?length@?$vec@$01C$0A@@glm@@SAHXZ		; glm::vec<2,signed char,0>::length
PUBLIC	??A?$vec@$01C$0A@@glm@@QAEAACH@Z		; glm::vec<2,signed char,0>::operator[]
PUBLIC	??A?$vec@$01C$0A@@glm@@QBEABCH@Z		; glm::vec<2,signed char,0>::operator[]
PUBLIC	??0?$vec@$01C$0A@@glm@@QAE@C@Z			; glm::vec<2,signed char,0>::vec<2,signed char,0>
PUBLIC	??0?$vec@$01C$0A@@glm@@QAE@CC@Z			; glm::vec<2,signed char,0>::vec<2,signed char,0>
PUBLIC	??E?$vec@$01C$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,0>::operator++
PUBLIC	??F?$vec@$01C$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,signed char,0>::operator--
PUBLIC	??E?$vec@$01C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,0>::operator++
PUBLIC	??F?$vec@$01C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,signed char,0>::operator--
PUBLIC	?length@?$vec@$01H$0A@@glm@@SAHXZ		; glm::vec<2,int,0>::length
PUBLIC	??A?$vec@$01H$0A@@glm@@QAEAAHH@Z		; glm::vec<2,int,0>::operator[]
PUBLIC	??A?$vec@$01H$0A@@glm@@QBEABHH@Z		; glm::vec<2,int,0>::operator[]
PUBLIC	??0?$vec@$01H$0A@@glm@@QAE@H@Z			; glm::vec<2,int,0>::vec<2,int,0>
PUBLIC	??0?$vec@$01H$0A@@glm@@QAE@HH@Z			; glm::vec<2,int,0>::vec<2,int,0>
PUBLIC	??E?$vec@$01H$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,int,0>::operator++
PUBLIC	??F?$vec@$01H$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,int,0>::operator--
PUBLIC	??E?$vec@$01H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,int,0>::operator++
PUBLIC	??F?$vec@$01H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,int,0>::operator--
PUBLIC	?length@?$vec@$01_J$0A@@glm@@SAHXZ		; glm::vec<2,__int64,0>::length
PUBLIC	??A?$vec@$01_J$0A@@glm@@QAEAA_JH@Z		; glm::vec<2,__int64,0>::operator[]
PUBLIC	??A?$vec@$01_J$0A@@glm@@QBEAB_JH@Z		; glm::vec<2,__int64,0>::operator[]
PUBLIC	??0?$vec@$01_J$0A@@glm@@QAE@_J@Z		; glm::vec<2,__int64,0>::vec<2,__int64,0>
PUBLIC	??0?$vec@$01_J$0A@@glm@@QAE@_J0@Z		; glm::vec<2,__int64,0>::vec<2,__int64,0>
PUBLIC	??E?$vec@$01_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,0>::operator++
PUBLIC	??F?$vec@$01_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,__int64,0>::operator--
PUBLIC	??E?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,0>::operator++
PUBLIC	??F?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,__int64,0>::operator--
PUBLIC	?length@?$vec@$01N$0A@@glm@@SAHXZ		; glm::vec<2,double,0>::length
PUBLIC	??A?$vec@$01N$0A@@glm@@QAEAANH@Z		; glm::vec<2,double,0>::operator[]
PUBLIC	??A?$vec@$01N$0A@@glm@@QBEABNH@Z		; glm::vec<2,double,0>::operator[]
PUBLIC	??0?$vec@$01N$0A@@glm@@QAE@N@Z			; glm::vec<2,double,0>::vec<2,double,0>
PUBLIC	??0?$vec@$01N$0A@@glm@@QAE@NN@Z			; glm::vec<2,double,0>::vec<2,double,0>
PUBLIC	??E?$vec@$01N$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,double,0>::operator++
PUBLIC	??F?$vec@$01N$0A@@glm@@QAEAAU01@XZ		; glm::vec<2,double,0>::operator--
PUBLIC	??E?$vec@$01N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,double,0>::operator++
PUBLIC	??F?$vec@$01N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<2,double,0>::operator--
PUBLIC	?length@?$vec@$02E$01@glm@@SAHXZ		; glm::vec<3,unsigned char,2>::length
PUBLIC	??A?$vec@$02E$01@glm@@QAEAAEH@Z			; glm::vec<3,unsigned char,2>::operator[]
PUBLIC	??A?$vec@$02E$01@glm@@QBEABEH@Z			; glm::vec<3,unsigned char,2>::operator[]
PUBLIC	??0?$vec@$02E$01@glm@@QAE@E@Z			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>
PUBLIC	??0?$vec@$02E$01@glm@@QAE@EEE@Z			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>
PUBLIC	??E?$vec@$02E$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,2>::operator++
PUBLIC	??F?$vec@$02E$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,2>::operator--
PUBLIC	??E?$vec@$02E$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,2>::operator++
PUBLIC	??F?$vec@$02E$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,2>::operator--
PUBLIC	?length@?$vec@$02G$01@glm@@SAHXZ		; glm::vec<3,unsigned short,2>::length
PUBLIC	??A?$vec@$02G$01@glm@@QAEAAGH@Z			; glm::vec<3,unsigned short,2>::operator[]
PUBLIC	??A?$vec@$02G$01@glm@@QBEABGH@Z			; glm::vec<3,unsigned short,2>::operator[]
PUBLIC	??0?$vec@$02G$01@glm@@QAE@G@Z			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>
PUBLIC	??0?$vec@$02G$01@glm@@QAE@GGG@Z			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>
PUBLIC	??E?$vec@$02G$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,2>::operator++
PUBLIC	??F?$vec@$02G$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,2>::operator--
PUBLIC	??E?$vec@$02G$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,2>::operator++
PUBLIC	??F?$vec@$02G$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,2>::operator--
PUBLIC	?length@?$vec@$02I$01@glm@@SAHXZ		; glm::vec<3,unsigned int,2>::length
PUBLIC	??A?$vec@$02I$01@glm@@QAEAAIH@Z			; glm::vec<3,unsigned int,2>::operator[]
PUBLIC	??A?$vec@$02I$01@glm@@QBEABIH@Z			; glm::vec<3,unsigned int,2>::operator[]
PUBLIC	??0?$vec@$02I$01@glm@@QAE@I@Z			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>
PUBLIC	??0?$vec@$02I$01@glm@@QAE@III@Z			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>
PUBLIC	??E?$vec@$02I$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,2>::operator++
PUBLIC	??F?$vec@$02I$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,2>::operator--
PUBLIC	??E?$vec@$02I$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,2>::operator++
PUBLIC	??F?$vec@$02I$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,2>::operator--
PUBLIC	?length@?$vec@$02_K$01@glm@@SAHXZ		; glm::vec<3,unsigned __int64,2>::length
PUBLIC	??A?$vec@$02_K$01@glm@@QAEAA_KH@Z		; glm::vec<3,unsigned __int64,2>::operator[]
PUBLIC	??A?$vec@$02_K$01@glm@@QBEAB_KH@Z		; glm::vec<3,unsigned __int64,2>::operator[]
PUBLIC	??0?$vec@$02_K$01@glm@@QAE@_K@Z			; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>
PUBLIC	??0?$vec@$02_K$01@glm@@QAE@_K00@Z		; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>
PUBLIC	??E?$vec@$02_K$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$02_K$01@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,2>::operator--
PUBLIC	??E?$vec@$02_K$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$02_K$01@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,2>::operator--
PUBLIC	?length@?$vec@$02C$01@glm@@SAHXZ		; glm::vec<3,signed char,2>::length
PUBLIC	??A?$vec@$02C$01@glm@@QAEAACH@Z			; glm::vec<3,signed char,2>::operator[]
PUBLIC	??A?$vec@$02C$01@glm@@QBEABCH@Z			; glm::vec<3,signed char,2>::operator[]
PUBLIC	??0?$vec@$02C$01@glm@@QAE@C@Z			; glm::vec<3,signed char,2>::vec<3,signed char,2>
PUBLIC	??0?$vec@$02C$01@glm@@QAE@CCC@Z			; glm::vec<3,signed char,2>::vec<3,signed char,2>
PUBLIC	??E?$vec@$02C$01@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,2>::operator++
PUBLIC	??F?$vec@$02C$01@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,2>::operator--
PUBLIC	??E?$vec@$02C$01@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,2>::operator++
PUBLIC	??F?$vec@$02C$01@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,2>::operator--
PUBLIC	?length@?$vec@$02F$01@glm@@SAHXZ		; glm::vec<3,short,2>::length
PUBLIC	??A?$vec@$02F$01@glm@@QAEAAFH@Z			; glm::vec<3,short,2>::operator[]
PUBLIC	??A?$vec@$02F$01@glm@@QBEABFH@Z			; glm::vec<3,short,2>::operator[]
PUBLIC	??0?$vec@$02F$01@glm@@QAE@F@Z			; glm::vec<3,short,2>::vec<3,short,2>
PUBLIC	??0?$vec@$02F$01@glm@@QAE@FFF@Z			; glm::vec<3,short,2>::vec<3,short,2>
PUBLIC	??E?$vec@$02F$01@glm@@QAEAAU01@XZ		; glm::vec<3,short,2>::operator++
PUBLIC	??F?$vec@$02F$01@glm@@QAEAAU01@XZ		; glm::vec<3,short,2>::operator--
PUBLIC	??E?$vec@$02F$01@glm@@QAE?AU01@H@Z		; glm::vec<3,short,2>::operator++
PUBLIC	??F?$vec@$02F$01@glm@@QAE?AU01@H@Z		; glm::vec<3,short,2>::operator--
PUBLIC	?length@?$vec@$02H$01@glm@@SAHXZ		; glm::vec<3,int,2>::length
PUBLIC	??A?$vec@$02H$01@glm@@QAEAAHH@Z			; glm::vec<3,int,2>::operator[]
PUBLIC	??A?$vec@$02H$01@glm@@QBEABHH@Z			; glm::vec<3,int,2>::operator[]
PUBLIC	??0?$vec@$02H$01@glm@@QAE@H@Z			; glm::vec<3,int,2>::vec<3,int,2>
PUBLIC	??0?$vec@$02H$01@glm@@QAE@HHH@Z			; glm::vec<3,int,2>::vec<3,int,2>
PUBLIC	??E?$vec@$02H$01@glm@@QAEAAU01@XZ		; glm::vec<3,int,2>::operator++
PUBLIC	??F?$vec@$02H$01@glm@@QAEAAU01@XZ		; glm::vec<3,int,2>::operator--
PUBLIC	??E?$vec@$02H$01@glm@@QAE?AU01@H@Z		; glm::vec<3,int,2>::operator++
PUBLIC	??F?$vec@$02H$01@glm@@QAE?AU01@H@Z		; glm::vec<3,int,2>::operator--
PUBLIC	?length@?$vec@$02_J$01@glm@@SAHXZ		; glm::vec<3,__int64,2>::length
PUBLIC	??A?$vec@$02_J$01@glm@@QAEAA_JH@Z		; glm::vec<3,__int64,2>::operator[]
PUBLIC	??A?$vec@$02_J$01@glm@@QBEAB_JH@Z		; glm::vec<3,__int64,2>::operator[]
PUBLIC	??0?$vec@$02_J$01@glm@@QAE@_J@Z			; glm::vec<3,__int64,2>::vec<3,__int64,2>
PUBLIC	??0?$vec@$02_J$01@glm@@QAE@_J00@Z		; glm::vec<3,__int64,2>::vec<3,__int64,2>
PUBLIC	??E?$vec@$02_J$01@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,2>::operator++
PUBLIC	??F?$vec@$02_J$01@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,2>::operator--
PUBLIC	??E?$vec@$02_J$01@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,2>::operator++
PUBLIC	??F?$vec@$02_J$01@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,2>::operator--
PUBLIC	?length@?$vec@$02M$01@glm@@SAHXZ		; glm::vec<3,float,2>::length
PUBLIC	??A?$vec@$02M$01@glm@@QAEAAMH@Z			; glm::vec<3,float,2>::operator[]
PUBLIC	??A?$vec@$02M$01@glm@@QBEABMH@Z			; glm::vec<3,float,2>::operator[]
PUBLIC	??0?$vec@$02M$01@glm@@QAE@M@Z			; glm::vec<3,float,2>::vec<3,float,2>
PUBLIC	??0?$vec@$02M$01@glm@@QAE@MMM@Z			; glm::vec<3,float,2>::vec<3,float,2>
PUBLIC	??E?$vec@$02M$01@glm@@QAEAAU01@XZ		; glm::vec<3,float,2>::operator++
PUBLIC	??F?$vec@$02M$01@glm@@QAEAAU01@XZ		; glm::vec<3,float,2>::operator--
PUBLIC	??E?$vec@$02M$01@glm@@QAE?AU01@H@Z		; glm::vec<3,float,2>::operator++
PUBLIC	??F?$vec@$02M$01@glm@@QAE?AU01@H@Z		; glm::vec<3,float,2>::operator--
PUBLIC	?length@?$vec@$02N$01@glm@@SAHXZ		; glm::vec<3,double,2>::length
PUBLIC	??A?$vec@$02N$01@glm@@QAEAANH@Z			; glm::vec<3,double,2>::operator[]
PUBLIC	??A?$vec@$02N$01@glm@@QBEABNH@Z			; glm::vec<3,double,2>::operator[]
PUBLIC	??0?$vec@$02N$01@glm@@QAE@N@Z			; glm::vec<3,double,2>::vec<3,double,2>
PUBLIC	??0?$vec@$02N$01@glm@@QAE@NNN@Z			; glm::vec<3,double,2>::vec<3,double,2>
PUBLIC	??E?$vec@$02N$01@glm@@QAEAAU01@XZ		; glm::vec<3,double,2>::operator++
PUBLIC	??F?$vec@$02N$01@glm@@QAEAAU01@XZ		; glm::vec<3,double,2>::operator--
PUBLIC	??E?$vec@$02N$01@glm@@QAE?AU01@H@Z		; glm::vec<3,double,2>::operator++
PUBLIC	??F?$vec@$02N$01@glm@@QAE?AU01@H@Z		; glm::vec<3,double,2>::operator--
PUBLIC	?length@?$vec@$02E$00@glm@@SAHXZ		; glm::vec<3,unsigned char,1>::length
PUBLIC	??A?$vec@$02E$00@glm@@QAEAAEH@Z			; glm::vec<3,unsigned char,1>::operator[]
PUBLIC	??A?$vec@$02E$00@glm@@QBEABEH@Z			; glm::vec<3,unsigned char,1>::operator[]
PUBLIC	??0?$vec@$02E$00@glm@@QAE@E@Z			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>
PUBLIC	??0?$vec@$02E$00@glm@@QAE@EEE@Z			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>
PUBLIC	??E?$vec@$02E$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,1>::operator++
PUBLIC	??F?$vec@$02E$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,1>::operator--
PUBLIC	??E?$vec@$02E$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,1>::operator++
PUBLIC	??F?$vec@$02E$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,1>::operator--
PUBLIC	?length@?$vec@$02G$00@glm@@SAHXZ		; glm::vec<3,unsigned short,1>::length
PUBLIC	??A?$vec@$02G$00@glm@@QAEAAGH@Z			; glm::vec<3,unsigned short,1>::operator[]
PUBLIC	??A?$vec@$02G$00@glm@@QBEABGH@Z			; glm::vec<3,unsigned short,1>::operator[]
PUBLIC	??0?$vec@$02G$00@glm@@QAE@G@Z			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>
PUBLIC	??0?$vec@$02G$00@glm@@QAE@GGG@Z			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>
PUBLIC	??E?$vec@$02G$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,1>::operator++
PUBLIC	??F?$vec@$02G$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,1>::operator--
PUBLIC	??E?$vec@$02G$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,1>::operator++
PUBLIC	??F?$vec@$02G$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,1>::operator--
PUBLIC	?length@?$vec@$02I$00@glm@@SAHXZ		; glm::vec<3,unsigned int,1>::length
PUBLIC	??A?$vec@$02I$00@glm@@QAEAAIH@Z			; glm::vec<3,unsigned int,1>::operator[]
PUBLIC	??A?$vec@$02I$00@glm@@QBEABIH@Z			; glm::vec<3,unsigned int,1>::operator[]
PUBLIC	??0?$vec@$02I$00@glm@@QAE@I@Z			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>
PUBLIC	??0?$vec@$02I$00@glm@@QAE@III@Z			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>
PUBLIC	??E?$vec@$02I$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,1>::operator++
PUBLIC	??F?$vec@$02I$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,1>::operator--
PUBLIC	??E?$vec@$02I$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,1>::operator++
PUBLIC	??F?$vec@$02I$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,1>::operator--
PUBLIC	?length@?$vec@$02_K$00@glm@@SAHXZ		; glm::vec<3,unsigned __int64,1>::length
PUBLIC	??A?$vec@$02_K$00@glm@@QAEAA_KH@Z		; glm::vec<3,unsigned __int64,1>::operator[]
PUBLIC	??A?$vec@$02_K$00@glm@@QBEAB_KH@Z		; glm::vec<3,unsigned __int64,1>::operator[]
PUBLIC	??0?$vec@$02_K$00@glm@@QAE@_K@Z			; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>
PUBLIC	??0?$vec@$02_K$00@glm@@QAE@_K00@Z		; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>
PUBLIC	??E?$vec@$02_K$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$02_K$00@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,1>::operator--
PUBLIC	??E?$vec@$02_K$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$02_K$00@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,1>::operator--
PUBLIC	?length@?$vec@$02C$00@glm@@SAHXZ		; glm::vec<3,signed char,1>::length
PUBLIC	??A?$vec@$02C$00@glm@@QAEAACH@Z			; glm::vec<3,signed char,1>::operator[]
PUBLIC	??A?$vec@$02C$00@glm@@QBEABCH@Z			; glm::vec<3,signed char,1>::operator[]
PUBLIC	??0?$vec@$02C$00@glm@@QAE@C@Z			; glm::vec<3,signed char,1>::vec<3,signed char,1>
PUBLIC	??0?$vec@$02C$00@glm@@QAE@CCC@Z			; glm::vec<3,signed char,1>::vec<3,signed char,1>
PUBLIC	??E?$vec@$02C$00@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,1>::operator++
PUBLIC	??F?$vec@$02C$00@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,1>::operator--
PUBLIC	??E?$vec@$02C$00@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,1>::operator++
PUBLIC	??F?$vec@$02C$00@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,1>::operator--
PUBLIC	?length@?$vec@$02F$00@glm@@SAHXZ		; glm::vec<3,short,1>::length
PUBLIC	??A?$vec@$02F$00@glm@@QAEAAFH@Z			; glm::vec<3,short,1>::operator[]
PUBLIC	??A?$vec@$02F$00@glm@@QBEABFH@Z			; glm::vec<3,short,1>::operator[]
PUBLIC	??0?$vec@$02F$00@glm@@QAE@F@Z			; glm::vec<3,short,1>::vec<3,short,1>
PUBLIC	??0?$vec@$02F$00@glm@@QAE@FFF@Z			; glm::vec<3,short,1>::vec<3,short,1>
PUBLIC	??E?$vec@$02F$00@glm@@QAEAAU01@XZ		; glm::vec<3,short,1>::operator++
PUBLIC	??F?$vec@$02F$00@glm@@QAEAAU01@XZ		; glm::vec<3,short,1>::operator--
PUBLIC	??E?$vec@$02F$00@glm@@QAE?AU01@H@Z		; glm::vec<3,short,1>::operator++
PUBLIC	??F?$vec@$02F$00@glm@@QAE?AU01@H@Z		; glm::vec<3,short,1>::operator--
PUBLIC	?length@?$vec@$02H$00@glm@@SAHXZ		; glm::vec<3,int,1>::length
PUBLIC	??A?$vec@$02H$00@glm@@QAEAAHH@Z			; glm::vec<3,int,1>::operator[]
PUBLIC	??A?$vec@$02H$00@glm@@QBEABHH@Z			; glm::vec<3,int,1>::operator[]
PUBLIC	??0?$vec@$02H$00@glm@@QAE@H@Z			; glm::vec<3,int,1>::vec<3,int,1>
PUBLIC	??0?$vec@$02H$00@glm@@QAE@HHH@Z			; glm::vec<3,int,1>::vec<3,int,1>
PUBLIC	??E?$vec@$02H$00@glm@@QAEAAU01@XZ		; glm::vec<3,int,1>::operator++
PUBLIC	??F?$vec@$02H$00@glm@@QAEAAU01@XZ		; glm::vec<3,int,1>::operator--
PUBLIC	??E?$vec@$02H$00@glm@@QAE?AU01@H@Z		; glm::vec<3,int,1>::operator++
PUBLIC	??F?$vec@$02H$00@glm@@QAE?AU01@H@Z		; glm::vec<3,int,1>::operator--
PUBLIC	?length@?$vec@$02_J$00@glm@@SAHXZ		; glm::vec<3,__int64,1>::length
PUBLIC	??A?$vec@$02_J$00@glm@@QAEAA_JH@Z		; glm::vec<3,__int64,1>::operator[]
PUBLIC	??A?$vec@$02_J$00@glm@@QBEAB_JH@Z		; glm::vec<3,__int64,1>::operator[]
PUBLIC	??0?$vec@$02_J$00@glm@@QAE@_J@Z			; glm::vec<3,__int64,1>::vec<3,__int64,1>
PUBLIC	??0?$vec@$02_J$00@glm@@QAE@_J00@Z		; glm::vec<3,__int64,1>::vec<3,__int64,1>
PUBLIC	??E?$vec@$02_J$00@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,1>::operator++
PUBLIC	??F?$vec@$02_J$00@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,1>::operator--
PUBLIC	??E?$vec@$02_J$00@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,1>::operator++
PUBLIC	??F?$vec@$02_J$00@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,1>::operator--
PUBLIC	?length@?$vec@$02M$00@glm@@SAHXZ		; glm::vec<3,float,1>::length
PUBLIC	??A?$vec@$02M$00@glm@@QAEAAMH@Z			; glm::vec<3,float,1>::operator[]
PUBLIC	??A?$vec@$02M$00@glm@@QBEABMH@Z			; glm::vec<3,float,1>::operator[]
PUBLIC	??0?$vec@$02M$00@glm@@QAE@M@Z			; glm::vec<3,float,1>::vec<3,float,1>
PUBLIC	??0?$vec@$02M$00@glm@@QAE@MMM@Z			; glm::vec<3,float,1>::vec<3,float,1>
PUBLIC	??E?$vec@$02M$00@glm@@QAEAAU01@XZ		; glm::vec<3,float,1>::operator++
PUBLIC	??F?$vec@$02M$00@glm@@QAEAAU01@XZ		; glm::vec<3,float,1>::operator--
PUBLIC	??E?$vec@$02M$00@glm@@QAE?AU01@H@Z		; glm::vec<3,float,1>::operator++
PUBLIC	??F?$vec@$02M$00@glm@@QAE?AU01@H@Z		; glm::vec<3,float,1>::operator--
PUBLIC	?length@?$vec@$02N$00@glm@@SAHXZ		; glm::vec<3,double,1>::length
PUBLIC	??A?$vec@$02N$00@glm@@QAEAANH@Z			; glm::vec<3,double,1>::operator[]
PUBLIC	??A?$vec@$02N$00@glm@@QBEABNH@Z			; glm::vec<3,double,1>::operator[]
PUBLIC	??0?$vec@$02N$00@glm@@QAE@N@Z			; glm::vec<3,double,1>::vec<3,double,1>
PUBLIC	??0?$vec@$02N$00@glm@@QAE@NNN@Z			; glm::vec<3,double,1>::vec<3,double,1>
PUBLIC	??E?$vec@$02N$00@glm@@QAEAAU01@XZ		; glm::vec<3,double,1>::operator++
PUBLIC	??F?$vec@$02N$00@glm@@QAEAAU01@XZ		; glm::vec<3,double,1>::operator--
PUBLIC	??E?$vec@$02N$00@glm@@QAE?AU01@H@Z		; glm::vec<3,double,1>::operator++
PUBLIC	??F?$vec@$02N$00@glm@@QAE?AU01@H@Z		; glm::vec<3,double,1>::operator--
PUBLIC	?length@?$vec@$02E$0A@@glm@@SAHXZ		; glm::vec<3,unsigned char,0>::length
PUBLIC	??A?$vec@$02E$0A@@glm@@QAEAAEH@Z		; glm::vec<3,unsigned char,0>::operator[]
PUBLIC	??A?$vec@$02E$0A@@glm@@QBEABEH@Z		; glm::vec<3,unsigned char,0>::operator[]
PUBLIC	??0?$vec@$02E$0A@@glm@@QAE@E@Z			; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>
PUBLIC	??0?$vec@$02E$0A@@glm@@QAE@EEE@Z		; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>
PUBLIC	??E?$vec@$02E$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,0>::operator++
PUBLIC	??F?$vec@$02E$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned char,0>::operator--
PUBLIC	??E?$vec@$02E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,0>::operator++
PUBLIC	??F?$vec@$02E$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned char,0>::operator--
PUBLIC	?length@?$vec@$02G$0A@@glm@@SAHXZ		; glm::vec<3,unsigned short,0>::length
PUBLIC	??A?$vec@$02G$0A@@glm@@QAEAAGH@Z		; glm::vec<3,unsigned short,0>::operator[]
PUBLIC	??A?$vec@$02G$0A@@glm@@QBEABGH@Z		; glm::vec<3,unsigned short,0>::operator[]
PUBLIC	??0?$vec@$02G$0A@@glm@@QAE@G@Z			; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>
PUBLIC	??0?$vec@$02G$0A@@glm@@QAE@GGG@Z		; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>
PUBLIC	??E?$vec@$02G$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,0>::operator++
PUBLIC	??F?$vec@$02G$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned short,0>::operator--
PUBLIC	??E?$vec@$02G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,0>::operator++
PUBLIC	??F?$vec@$02G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned short,0>::operator--
PUBLIC	?length@?$vec@$02I$0A@@glm@@SAHXZ		; glm::vec<3,unsigned int,0>::length
PUBLIC	??A?$vec@$02I$0A@@glm@@QAEAAIH@Z		; glm::vec<3,unsigned int,0>::operator[]
PUBLIC	??A?$vec@$02I$0A@@glm@@QBEABIH@Z		; glm::vec<3,unsigned int,0>::operator[]
PUBLIC	??0?$vec@$02I$0A@@glm@@QAE@I@Z			; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>
PUBLIC	??0?$vec@$02I$0A@@glm@@QAE@III@Z		; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>
PUBLIC	??E?$vec@$02I$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,0>::operator++
PUBLIC	??F?$vec@$02I$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned int,0>::operator--
PUBLIC	??E?$vec@$02I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,0>::operator++
PUBLIC	??F?$vec@$02I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned int,0>::operator--
PUBLIC	?length@?$vec@$02_K$0A@@glm@@SAHXZ		; glm::vec<3,unsigned __int64,0>::length
PUBLIC	??A?$vec@$02_K$0A@@glm@@QAEAA_KH@Z		; glm::vec<3,unsigned __int64,0>::operator[]
PUBLIC	??A?$vec@$02_K$0A@@glm@@QBEAB_KH@Z		; glm::vec<3,unsigned __int64,0>::operator[]
PUBLIC	??0?$vec@$02_K$0A@@glm@@QAE@_K@Z		; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>
PUBLIC	??0?$vec@$02_K$0A@@glm@@QAE@_K00@Z		; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>
PUBLIC	??E?$vec@$02_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$02_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,unsigned __int64,0>::operator--
PUBLIC	??E?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,unsigned __int64,0>::operator--
PUBLIC	?length@?$vec@$02C$0A@@glm@@SAHXZ		; glm::vec<3,signed char,0>::length
PUBLIC	??A?$vec@$02C$0A@@glm@@QAEAACH@Z		; glm::vec<3,signed char,0>::operator[]
PUBLIC	??A?$vec@$02C$0A@@glm@@QBEABCH@Z		; glm::vec<3,signed char,0>::operator[]
PUBLIC	??0?$vec@$02C$0A@@glm@@QAE@C@Z			; glm::vec<3,signed char,0>::vec<3,signed char,0>
PUBLIC	??0?$vec@$02C$0A@@glm@@QAE@CCC@Z		; glm::vec<3,signed char,0>::vec<3,signed char,0>
PUBLIC	??E?$vec@$02C$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,0>::operator++
PUBLIC	??F?$vec@$02C$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,signed char,0>::operator--
PUBLIC	??E?$vec@$02C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,0>::operator++
PUBLIC	??F?$vec@$02C$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,signed char,0>::operator--
PUBLIC	?length@?$vec@$02F$0A@@glm@@SAHXZ		; glm::vec<3,short,0>::length
PUBLIC	??A?$vec@$02F$0A@@glm@@QAEAAFH@Z		; glm::vec<3,short,0>::operator[]
PUBLIC	??A?$vec@$02F$0A@@glm@@QBEABFH@Z		; glm::vec<3,short,0>::operator[]
PUBLIC	??0?$vec@$02F$0A@@glm@@QAE@F@Z			; glm::vec<3,short,0>::vec<3,short,0>
PUBLIC	??0?$vec@$02F$0A@@glm@@QAE@FFF@Z		; glm::vec<3,short,0>::vec<3,short,0>
PUBLIC	??E?$vec@$02F$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,short,0>::operator++
PUBLIC	??F?$vec@$02F$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,short,0>::operator--
PUBLIC	??E?$vec@$02F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,short,0>::operator++
PUBLIC	??F?$vec@$02F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,short,0>::operator--
PUBLIC	?length@?$vec@$02H$0A@@glm@@SAHXZ		; glm::vec<3,int,0>::length
PUBLIC	??A?$vec@$02H$0A@@glm@@QAEAAHH@Z		; glm::vec<3,int,0>::operator[]
PUBLIC	??A?$vec@$02H$0A@@glm@@QBEABHH@Z		; glm::vec<3,int,0>::operator[]
PUBLIC	??0?$vec@$02H$0A@@glm@@QAE@H@Z			; glm::vec<3,int,0>::vec<3,int,0>
PUBLIC	??0?$vec@$02H$0A@@glm@@QAE@HHH@Z		; glm::vec<3,int,0>::vec<3,int,0>
PUBLIC	??E?$vec@$02H$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,int,0>::operator++
PUBLIC	??F?$vec@$02H$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,int,0>::operator--
PUBLIC	??E?$vec@$02H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,int,0>::operator++
PUBLIC	??F?$vec@$02H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,int,0>::operator--
PUBLIC	?length@?$vec@$02_J$0A@@glm@@SAHXZ		; glm::vec<3,__int64,0>::length
PUBLIC	??A?$vec@$02_J$0A@@glm@@QAEAA_JH@Z		; glm::vec<3,__int64,0>::operator[]
PUBLIC	??A?$vec@$02_J$0A@@glm@@QBEAB_JH@Z		; glm::vec<3,__int64,0>::operator[]
PUBLIC	??0?$vec@$02_J$0A@@glm@@QAE@_J@Z		; glm::vec<3,__int64,0>::vec<3,__int64,0>
PUBLIC	??0?$vec@$02_J$0A@@glm@@QAE@_J00@Z		; glm::vec<3,__int64,0>::vec<3,__int64,0>
PUBLIC	??E?$vec@$02_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,0>::operator++
PUBLIC	??F?$vec@$02_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,__int64,0>::operator--
PUBLIC	??E?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,0>::operator++
PUBLIC	??F?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,__int64,0>::operator--
PUBLIC	?length@?$vec@$02M$0A@@glm@@SAHXZ		; glm::vec<3,float,0>::length
PUBLIC	??A?$vec@$02M$0A@@glm@@QAEAAMH@Z		; glm::vec<3,float,0>::operator[]
PUBLIC	??A?$vec@$02M$0A@@glm@@QBEABMH@Z		; glm::vec<3,float,0>::operator[]
PUBLIC	??0?$vec@$02M$0A@@glm@@QAE@M@Z			; glm::vec<3,float,0>::vec<3,float,0>
PUBLIC	??0?$vec@$02M$0A@@glm@@QAE@MMM@Z		; glm::vec<3,float,0>::vec<3,float,0>
PUBLIC	??E?$vec@$02M$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,float,0>::operator++
PUBLIC	??F?$vec@$02M$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,float,0>::operator--
PUBLIC	??E?$vec@$02M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,float,0>::operator++
PUBLIC	??F?$vec@$02M$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,float,0>::operator--
PUBLIC	?length@?$vec@$02N$0A@@glm@@SAHXZ		; glm::vec<3,double,0>::length
PUBLIC	??A?$vec@$02N$0A@@glm@@QAEAANH@Z		; glm::vec<3,double,0>::operator[]
PUBLIC	??A?$vec@$02N$0A@@glm@@QBEABNH@Z		; glm::vec<3,double,0>::operator[]
PUBLIC	??0?$vec@$02N$0A@@glm@@QAE@N@Z			; glm::vec<3,double,0>::vec<3,double,0>
PUBLIC	??0?$vec@$02N$0A@@glm@@QAE@NNN@Z		; glm::vec<3,double,0>::vec<3,double,0>
PUBLIC	??E?$vec@$02N$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,double,0>::operator++
PUBLIC	??F?$vec@$02N$0A@@glm@@QAEAAU01@XZ		; glm::vec<3,double,0>::operator--
PUBLIC	??E?$vec@$02N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,double,0>::operator++
PUBLIC	??F?$vec@$02N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<3,double,0>::operator--
PUBLIC	?length@?$vec@$03E$01@glm@@SAHXZ		; glm::vec<4,unsigned char,2>::length
PUBLIC	??A?$vec@$03E$01@glm@@QAEAAEH@Z			; glm::vec<4,unsigned char,2>::operator[]
PUBLIC	??A?$vec@$03E$01@glm@@QBEABEH@Z			; glm::vec<4,unsigned char,2>::operator[]
PUBLIC	??0?$vec@$03E$01@glm@@QAE@E@Z			; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>
PUBLIC	??0?$vec@$03E$01@glm@@QAE@EEEE@Z		; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>
PUBLIC	??E?$vec@$03E$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,2>::operator++
PUBLIC	??F?$vec@$03E$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,2>::operator--
PUBLIC	??E?$vec@$03E$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,2>::operator++
PUBLIC	??F?$vec@$03E$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,2>::operator--
PUBLIC	?length@?$vec@$03G$01@glm@@SAHXZ		; glm::vec<4,unsigned short,2>::length
PUBLIC	??A?$vec@$03G$01@glm@@QAEAAGH@Z			; glm::vec<4,unsigned short,2>::operator[]
PUBLIC	??A?$vec@$03G$01@glm@@QBEABGH@Z			; glm::vec<4,unsigned short,2>::operator[]
PUBLIC	??0?$vec@$03G$01@glm@@QAE@G@Z			; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>
PUBLIC	??0?$vec@$03G$01@glm@@QAE@GGGG@Z		; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>
PUBLIC	??E?$vec@$03G$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,2>::operator++
PUBLIC	??F?$vec@$03G$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,2>::operator--
PUBLIC	??E?$vec@$03G$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,2>::operator++
PUBLIC	??F?$vec@$03G$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,2>::operator--
PUBLIC	?length@?$vec@$03I$01@glm@@SAHXZ		; glm::vec<4,unsigned int,2>::length
PUBLIC	??A?$vec@$03I$01@glm@@QAEAAIH@Z			; glm::vec<4,unsigned int,2>::operator[]
PUBLIC	??A?$vec@$03I$01@glm@@QBEABIH@Z			; glm::vec<4,unsigned int,2>::operator[]
PUBLIC	??0?$vec@$03I$01@glm@@QAE@I@Z			; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>
PUBLIC	??0?$vec@$03I$01@glm@@QAE@IIII@Z		; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>
PUBLIC	??E?$vec@$03I$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,2>::operator++
PUBLIC	??F?$vec@$03I$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,2>::operator--
PUBLIC	??E?$vec@$03I$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,2>::operator++
PUBLIC	??F?$vec@$03I$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,2>::operator--
PUBLIC	?length@?$vec@$03_K$01@glm@@SAHXZ		; glm::vec<4,unsigned __int64,2>::length
PUBLIC	??A?$vec@$03_K$01@glm@@QAEAA_KH@Z		; glm::vec<4,unsigned __int64,2>::operator[]
PUBLIC	??A?$vec@$03_K$01@glm@@QBEAB_KH@Z		; glm::vec<4,unsigned __int64,2>::operator[]
PUBLIC	??0?$vec@$03_K$01@glm@@QAE@_K@Z			; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>
PUBLIC	??0?$vec@$03_K$01@glm@@QAE@_K000@Z		; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>
PUBLIC	??E?$vec@$03_K$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$03_K$01@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,2>::operator--
PUBLIC	??E?$vec@$03_K$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,2>::operator++
PUBLIC	??F?$vec@$03_K$01@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,2>::operator--
PUBLIC	?length@?$vec@$03C$01@glm@@SAHXZ		; glm::vec<4,signed char,2>::length
PUBLIC	??A?$vec@$03C$01@glm@@QAEAACH@Z			; glm::vec<4,signed char,2>::operator[]
PUBLIC	??A?$vec@$03C$01@glm@@QBEABCH@Z			; glm::vec<4,signed char,2>::operator[]
PUBLIC	??0?$vec@$03C$01@glm@@QAE@C@Z			; glm::vec<4,signed char,2>::vec<4,signed char,2>
PUBLIC	??0?$vec@$03C$01@glm@@QAE@CCCC@Z		; glm::vec<4,signed char,2>::vec<4,signed char,2>
PUBLIC	??E?$vec@$03C$01@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,2>::operator++
PUBLIC	??F?$vec@$03C$01@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,2>::operator--
PUBLIC	??E?$vec@$03C$01@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,2>::operator++
PUBLIC	??F?$vec@$03C$01@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,2>::operator--
PUBLIC	?length@?$vec@$03F$01@glm@@SAHXZ		; glm::vec<4,short,2>::length
PUBLIC	??A?$vec@$03F$01@glm@@QAEAAFH@Z			; glm::vec<4,short,2>::operator[]
PUBLIC	??A?$vec@$03F$01@glm@@QBEABFH@Z			; glm::vec<4,short,2>::operator[]
PUBLIC	??0?$vec@$03F$01@glm@@QAE@F@Z			; glm::vec<4,short,2>::vec<4,short,2>
PUBLIC	??0?$vec@$03F$01@glm@@QAE@FFFF@Z		; glm::vec<4,short,2>::vec<4,short,2>
PUBLIC	??E?$vec@$03F$01@glm@@QAEAAU01@XZ		; glm::vec<4,short,2>::operator++
PUBLIC	??F?$vec@$03F$01@glm@@QAEAAU01@XZ		; glm::vec<4,short,2>::operator--
PUBLIC	??E?$vec@$03F$01@glm@@QAE?AU01@H@Z		; glm::vec<4,short,2>::operator++
PUBLIC	??F?$vec@$03F$01@glm@@QAE?AU01@H@Z		; glm::vec<4,short,2>::operator--
PUBLIC	?length@?$vec@$03H$01@glm@@SAHXZ		; glm::vec<4,int,2>::length
PUBLIC	??A?$vec@$03H$01@glm@@QAEAAHH@Z			; glm::vec<4,int,2>::operator[]
PUBLIC	??A?$vec@$03H$01@glm@@QBEABHH@Z			; glm::vec<4,int,2>::operator[]
PUBLIC	??0?$vec@$03H$01@glm@@QAE@H@Z			; glm::vec<4,int,2>::vec<4,int,2>
PUBLIC	??0?$vec@$03H$01@glm@@QAE@HHHH@Z		; glm::vec<4,int,2>::vec<4,int,2>
PUBLIC	??E?$vec@$03H$01@glm@@QAEAAU01@XZ		; glm::vec<4,int,2>::operator++
PUBLIC	??F?$vec@$03H$01@glm@@QAEAAU01@XZ		; glm::vec<4,int,2>::operator--
PUBLIC	??E?$vec@$03H$01@glm@@QAE?AU01@H@Z		; glm::vec<4,int,2>::operator++
PUBLIC	??F?$vec@$03H$01@glm@@QAE?AU01@H@Z		; glm::vec<4,int,2>::operator--
PUBLIC	?length@?$vec@$03_J$01@glm@@SAHXZ		; glm::vec<4,__int64,2>::length
PUBLIC	??A?$vec@$03_J$01@glm@@QAEAA_JH@Z		; glm::vec<4,__int64,2>::operator[]
PUBLIC	??A?$vec@$03_J$01@glm@@QBEAB_JH@Z		; glm::vec<4,__int64,2>::operator[]
PUBLIC	??0?$vec@$03_J$01@glm@@QAE@_J@Z			; glm::vec<4,__int64,2>::vec<4,__int64,2>
PUBLIC	??0?$vec@$03_J$01@glm@@QAE@_J000@Z		; glm::vec<4,__int64,2>::vec<4,__int64,2>
PUBLIC	??E?$vec@$03_J$01@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,2>::operator++
PUBLIC	??F?$vec@$03_J$01@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,2>::operator--
PUBLIC	??E?$vec@$03_J$01@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,2>::operator++
PUBLIC	??F?$vec@$03_J$01@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,2>::operator--
PUBLIC	?length@?$vec@$03M$01@glm@@SAHXZ		; glm::vec<4,float,2>::length
PUBLIC	??A?$vec@$03M$01@glm@@QAEAAMH@Z			; glm::vec<4,float,2>::operator[]
PUBLIC	??A?$vec@$03M$01@glm@@QBEABMH@Z			; glm::vec<4,float,2>::operator[]
PUBLIC	??0?$vec@$03M$01@glm@@QAE@M@Z			; glm::vec<4,float,2>::vec<4,float,2>
PUBLIC	??0?$vec@$03M$01@glm@@QAE@MMMM@Z		; glm::vec<4,float,2>::vec<4,float,2>
PUBLIC	??E?$vec@$03M$01@glm@@QAEAAU01@XZ		; glm::vec<4,float,2>::operator++
PUBLIC	??F?$vec@$03M$01@glm@@QAEAAU01@XZ		; glm::vec<4,float,2>::operator--
PUBLIC	??E?$vec@$03M$01@glm@@QAE?AU01@H@Z		; glm::vec<4,float,2>::operator++
PUBLIC	??F?$vec@$03M$01@glm@@QAE?AU01@H@Z		; glm::vec<4,float,2>::operator--
PUBLIC	?length@?$vec@$03N$01@glm@@SAHXZ		; glm::vec<4,double,2>::length
PUBLIC	??A?$vec@$03N$01@glm@@QAEAANH@Z			; glm::vec<4,double,2>::operator[]
PUBLIC	??A?$vec@$03N$01@glm@@QBEABNH@Z			; glm::vec<4,double,2>::operator[]
PUBLIC	??0?$vec@$03N$01@glm@@QAE@N@Z			; glm::vec<4,double,2>::vec<4,double,2>
PUBLIC	??0?$vec@$03N$01@glm@@QAE@NNNN@Z		; glm::vec<4,double,2>::vec<4,double,2>
PUBLIC	??E?$vec@$03N$01@glm@@QAEAAU01@XZ		; glm::vec<4,double,2>::operator++
PUBLIC	??F?$vec@$03N$01@glm@@QAEAAU01@XZ		; glm::vec<4,double,2>::operator--
PUBLIC	??E?$vec@$03N$01@glm@@QAE?AU01@H@Z		; glm::vec<4,double,2>::operator++
PUBLIC	??F?$vec@$03N$01@glm@@QAE?AU01@H@Z		; glm::vec<4,double,2>::operator--
PUBLIC	?length@?$vec@$03E$00@glm@@SAHXZ		; glm::vec<4,unsigned char,1>::length
PUBLIC	??A?$vec@$03E$00@glm@@QAEAAEH@Z			; glm::vec<4,unsigned char,1>::operator[]
PUBLIC	??A?$vec@$03E$00@glm@@QBEABEH@Z			; glm::vec<4,unsigned char,1>::operator[]
PUBLIC	??0?$vec@$03E$00@glm@@QAE@E@Z			; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>
PUBLIC	??0?$vec@$03E$00@glm@@QAE@EEEE@Z		; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>
PUBLIC	??E?$vec@$03E$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,1>::operator++
PUBLIC	??F?$vec@$03E$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned char,1>::operator--
PUBLIC	??E?$vec@$03E$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,1>::operator++
PUBLIC	??F?$vec@$03E$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned char,1>::operator--
PUBLIC	?length@?$vec@$03G$00@glm@@SAHXZ		; glm::vec<4,unsigned short,1>::length
PUBLIC	??A?$vec@$03G$00@glm@@QAEAAGH@Z			; glm::vec<4,unsigned short,1>::operator[]
PUBLIC	??A?$vec@$03G$00@glm@@QBEABGH@Z			; glm::vec<4,unsigned short,1>::operator[]
PUBLIC	??0?$vec@$03G$00@glm@@QAE@G@Z			; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>
PUBLIC	??0?$vec@$03G$00@glm@@QAE@GGGG@Z		; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>
PUBLIC	??E?$vec@$03G$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,1>::operator++
PUBLIC	??F?$vec@$03G$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,1>::operator--
PUBLIC	??E?$vec@$03G$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,1>::operator++
PUBLIC	??F?$vec@$03G$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,1>::operator--
PUBLIC	?length@?$vec@$03I$00@glm@@SAHXZ		; glm::vec<4,unsigned int,1>::length
PUBLIC	??A?$vec@$03I$00@glm@@QAEAAIH@Z			; glm::vec<4,unsigned int,1>::operator[]
PUBLIC	??A?$vec@$03I$00@glm@@QBEABIH@Z			; glm::vec<4,unsigned int,1>::operator[]
PUBLIC	??0?$vec@$03I$00@glm@@QAE@I@Z			; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>
PUBLIC	??0?$vec@$03I$00@glm@@QAE@IIII@Z		; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>
PUBLIC	??E?$vec@$03I$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,1>::operator++
PUBLIC	??F?$vec@$03I$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,1>::operator--
PUBLIC	??E?$vec@$03I$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,1>::operator++
PUBLIC	??F?$vec@$03I$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,1>::operator--
PUBLIC	?length@?$vec@$03_K$00@glm@@SAHXZ		; glm::vec<4,unsigned __int64,1>::length
PUBLIC	??A?$vec@$03_K$00@glm@@QAEAA_KH@Z		; glm::vec<4,unsigned __int64,1>::operator[]
PUBLIC	??A?$vec@$03_K$00@glm@@QBEAB_KH@Z		; glm::vec<4,unsigned __int64,1>::operator[]
PUBLIC	??0?$vec@$03_K$00@glm@@QAE@_K@Z			; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>
PUBLIC	??0?$vec@$03_K$00@glm@@QAE@_K000@Z		; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>
PUBLIC	??E?$vec@$03_K$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$03_K$00@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,1>::operator--
PUBLIC	??E?$vec@$03_K$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,1>::operator++
PUBLIC	??F?$vec@$03_K$00@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,1>::operator--
PUBLIC	?length@?$vec@$03C$00@glm@@SAHXZ		; glm::vec<4,signed char,1>::length
PUBLIC	??A?$vec@$03C$00@glm@@QAEAACH@Z			; glm::vec<4,signed char,1>::operator[]
PUBLIC	??A?$vec@$03C$00@glm@@QBEABCH@Z			; glm::vec<4,signed char,1>::operator[]
PUBLIC	??0?$vec@$03C$00@glm@@QAE@C@Z			; glm::vec<4,signed char,1>::vec<4,signed char,1>
PUBLIC	??0?$vec@$03C$00@glm@@QAE@CCCC@Z		; glm::vec<4,signed char,1>::vec<4,signed char,1>
PUBLIC	??E?$vec@$03C$00@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,1>::operator++
PUBLIC	??F?$vec@$03C$00@glm@@QAEAAU01@XZ		; glm::vec<4,signed char,1>::operator--
PUBLIC	??E?$vec@$03C$00@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,1>::operator++
PUBLIC	??F?$vec@$03C$00@glm@@QAE?AU01@H@Z		; glm::vec<4,signed char,1>::operator--
PUBLIC	?length@?$vec@$03F$00@glm@@SAHXZ		; glm::vec<4,short,1>::length
PUBLIC	??A?$vec@$03F$00@glm@@QAEAAFH@Z			; glm::vec<4,short,1>::operator[]
PUBLIC	??A?$vec@$03F$00@glm@@QBEABFH@Z			; glm::vec<4,short,1>::operator[]
PUBLIC	??0?$vec@$03F$00@glm@@QAE@F@Z			; glm::vec<4,short,1>::vec<4,short,1>
PUBLIC	??0?$vec@$03F$00@glm@@QAE@FFFF@Z		; glm::vec<4,short,1>::vec<4,short,1>
PUBLIC	??E?$vec@$03F$00@glm@@QAEAAU01@XZ		; glm::vec<4,short,1>::operator++
PUBLIC	??F?$vec@$03F$00@glm@@QAEAAU01@XZ		; glm::vec<4,short,1>::operator--
PUBLIC	??E?$vec@$03F$00@glm@@QAE?AU01@H@Z		; glm::vec<4,short,1>::operator++
PUBLIC	??F?$vec@$03F$00@glm@@QAE?AU01@H@Z		; glm::vec<4,short,1>::operator--
PUBLIC	?length@?$vec@$03H$00@glm@@SAHXZ		; glm::vec<4,int,1>::length
PUBLIC	??A?$vec@$03H$00@glm@@QAEAAHH@Z			; glm::vec<4,int,1>::operator[]
PUBLIC	??A?$vec@$03H$00@glm@@QBEABHH@Z			; glm::vec<4,int,1>::operator[]
PUBLIC	??0?$vec@$03H$00@glm@@QAE@H@Z			; glm::vec<4,int,1>::vec<4,int,1>
PUBLIC	??0?$vec@$03H$00@glm@@QAE@HHHH@Z		; glm::vec<4,int,1>::vec<4,int,1>
PUBLIC	??E?$vec@$03H$00@glm@@QAEAAU01@XZ		; glm::vec<4,int,1>::operator++
PUBLIC	??F?$vec@$03H$00@glm@@QAEAAU01@XZ		; glm::vec<4,int,1>::operator--
PUBLIC	??E?$vec@$03H$00@glm@@QAE?AU01@H@Z		; glm::vec<4,int,1>::operator++
PUBLIC	??F?$vec@$03H$00@glm@@QAE?AU01@H@Z		; glm::vec<4,int,1>::operator--
PUBLIC	?length@?$vec@$03_J$00@glm@@SAHXZ		; glm::vec<4,__int64,1>::length
PUBLIC	??A?$vec@$03_J$00@glm@@QAEAA_JH@Z		; glm::vec<4,__int64,1>::operator[]
PUBLIC	??A?$vec@$03_J$00@glm@@QBEAB_JH@Z		; glm::vec<4,__int64,1>::operator[]
PUBLIC	??0?$vec@$03_J$00@glm@@QAE@_J@Z			; glm::vec<4,__int64,1>::vec<4,__int64,1>
PUBLIC	??0?$vec@$03_J$00@glm@@QAE@_J000@Z		; glm::vec<4,__int64,1>::vec<4,__int64,1>
PUBLIC	??E?$vec@$03_J$00@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,1>::operator++
PUBLIC	??F?$vec@$03_J$00@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,1>::operator--
PUBLIC	??E?$vec@$03_J$00@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,1>::operator++
PUBLIC	??F?$vec@$03_J$00@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,1>::operator--
PUBLIC	?length@?$vec@$03M$00@glm@@SAHXZ		; glm::vec<4,float,1>::length
PUBLIC	??A?$vec@$03M$00@glm@@QAEAAMH@Z			; glm::vec<4,float,1>::operator[]
PUBLIC	??A?$vec@$03M$00@glm@@QBEABMH@Z			; glm::vec<4,float,1>::operator[]
PUBLIC	??0?$vec@$03M$00@glm@@QAE@M@Z			; glm::vec<4,float,1>::vec<4,float,1>
PUBLIC	??0?$vec@$03M$00@glm@@QAE@MMMM@Z		; glm::vec<4,float,1>::vec<4,float,1>
PUBLIC	??E?$vec@$03M$00@glm@@QAEAAU01@XZ		; glm::vec<4,float,1>::operator++
PUBLIC	??F?$vec@$03M$00@glm@@QAEAAU01@XZ		; glm::vec<4,float,1>::operator--
PUBLIC	??E?$vec@$03M$00@glm@@QAE?AU01@H@Z		; glm::vec<4,float,1>::operator++
PUBLIC	??F?$vec@$03M$00@glm@@QAE?AU01@H@Z		; glm::vec<4,float,1>::operator--
PUBLIC	?length@?$vec@$03N$00@glm@@SAHXZ		; glm::vec<4,double,1>::length
PUBLIC	??A?$vec@$03N$00@glm@@QAEAANH@Z			; glm::vec<4,double,1>::operator[]
PUBLIC	??A?$vec@$03N$00@glm@@QBEABNH@Z			; glm::vec<4,double,1>::operator[]
PUBLIC	??0?$vec@$03N$00@glm@@QAE@N@Z			; glm::vec<4,double,1>::vec<4,double,1>
PUBLIC	??0?$vec@$03N$00@glm@@QAE@NNNN@Z		; glm::vec<4,double,1>::vec<4,double,1>
PUBLIC	??E?$vec@$03N$00@glm@@QAEAAU01@XZ		; glm::vec<4,double,1>::operator++
PUBLIC	??F?$vec@$03N$00@glm@@QAEAAU01@XZ		; glm::vec<4,double,1>::operator--
PUBLIC	??E?$vec@$03N$00@glm@@QAE?AU01@H@Z		; glm::vec<4,double,1>::operator++
PUBLIC	??F?$vec@$03N$00@glm@@QAE?AU01@H@Z		; glm::vec<4,double,1>::operator--
PUBLIC	?length@?$vec@$03G$0A@@glm@@SAHXZ		; glm::vec<4,unsigned short,0>::length
PUBLIC	??A?$vec@$03G$0A@@glm@@QAEAAGH@Z		; glm::vec<4,unsigned short,0>::operator[]
PUBLIC	??A?$vec@$03G$0A@@glm@@QBEABGH@Z		; glm::vec<4,unsigned short,0>::operator[]
PUBLIC	??0?$vec@$03G$0A@@glm@@QAE@G@Z			; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>
PUBLIC	??0?$vec@$03G$0A@@glm@@QAE@GGGG@Z		; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>
PUBLIC	??E?$vec@$03G$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,0>::operator++
PUBLIC	??F?$vec@$03G$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned short,0>::operator--
PUBLIC	??E?$vec@$03G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,0>::operator++
PUBLIC	??F?$vec@$03G$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned short,0>::operator--
PUBLIC	?length@?$vec@$03I$0A@@glm@@SAHXZ		; glm::vec<4,unsigned int,0>::length
PUBLIC	??A?$vec@$03I$0A@@glm@@QAEAAIH@Z		; glm::vec<4,unsigned int,0>::operator[]
PUBLIC	??A?$vec@$03I$0A@@glm@@QBEABIH@Z		; glm::vec<4,unsigned int,0>::operator[]
PUBLIC	??0?$vec@$03I$0A@@glm@@QAE@I@Z			; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>
PUBLIC	??0?$vec@$03I$0A@@glm@@QAE@IIII@Z		; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>
PUBLIC	??E?$vec@$03I$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,0>::operator++
PUBLIC	??F?$vec@$03I$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned int,0>::operator--
PUBLIC	??E?$vec@$03I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,0>::operator++
PUBLIC	??F?$vec@$03I$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned int,0>::operator--
PUBLIC	?length@?$vec@$03_K$0A@@glm@@SAHXZ		; glm::vec<4,unsigned __int64,0>::length
PUBLIC	??A?$vec@$03_K$0A@@glm@@QAEAA_KH@Z		; glm::vec<4,unsigned __int64,0>::operator[]
PUBLIC	??A?$vec@$03_K$0A@@glm@@QBEAB_KH@Z		; glm::vec<4,unsigned __int64,0>::operator[]
PUBLIC	??0?$vec@$03_K$0A@@glm@@QAE@_K@Z		; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>
PUBLIC	??0?$vec@$03_K$0A@@glm@@QAE@_K000@Z		; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>
PUBLIC	??E?$vec@$03_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$03_K$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,unsigned __int64,0>::operator--
PUBLIC	??E?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,0>::operator++
PUBLIC	??F?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,unsigned __int64,0>::operator--
PUBLIC	?length@?$vec@$03F$0A@@glm@@SAHXZ		; glm::vec<4,short,0>::length
PUBLIC	??A?$vec@$03F$0A@@glm@@QAEAAFH@Z		; glm::vec<4,short,0>::operator[]
PUBLIC	??A?$vec@$03F$0A@@glm@@QBEABFH@Z		; glm::vec<4,short,0>::operator[]
PUBLIC	??0?$vec@$03F$0A@@glm@@QAE@F@Z			; glm::vec<4,short,0>::vec<4,short,0>
PUBLIC	??0?$vec@$03F$0A@@glm@@QAE@FFFF@Z		; glm::vec<4,short,0>::vec<4,short,0>
PUBLIC	??E?$vec@$03F$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,short,0>::operator++
PUBLIC	??F?$vec@$03F$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,short,0>::operator--
PUBLIC	??E?$vec@$03F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,short,0>::operator++
PUBLIC	??F?$vec@$03F$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,short,0>::operator--
PUBLIC	?length@?$vec@$03H$0A@@glm@@SAHXZ		; glm::vec<4,int,0>::length
PUBLIC	??A?$vec@$03H$0A@@glm@@QAEAAHH@Z		; glm::vec<4,int,0>::operator[]
PUBLIC	??A?$vec@$03H$0A@@glm@@QBEABHH@Z		; glm::vec<4,int,0>::operator[]
PUBLIC	??0?$vec@$03H$0A@@glm@@QAE@H@Z			; glm::vec<4,int,0>::vec<4,int,0>
PUBLIC	??0?$vec@$03H$0A@@glm@@QAE@HHHH@Z		; glm::vec<4,int,0>::vec<4,int,0>
PUBLIC	??E?$vec@$03H$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,int,0>::operator++
PUBLIC	??F?$vec@$03H$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,int,0>::operator--
PUBLIC	??E?$vec@$03H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,int,0>::operator++
PUBLIC	??F?$vec@$03H$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,int,0>::operator--
PUBLIC	?length@?$vec@$03_J$0A@@glm@@SAHXZ		; glm::vec<4,__int64,0>::length
PUBLIC	??A?$vec@$03_J$0A@@glm@@QAEAA_JH@Z		; glm::vec<4,__int64,0>::operator[]
PUBLIC	??A?$vec@$03_J$0A@@glm@@QBEAB_JH@Z		; glm::vec<4,__int64,0>::operator[]
PUBLIC	??0?$vec@$03_J$0A@@glm@@QAE@_J@Z		; glm::vec<4,__int64,0>::vec<4,__int64,0>
PUBLIC	??0?$vec@$03_J$0A@@glm@@QAE@_J000@Z		; glm::vec<4,__int64,0>::vec<4,__int64,0>
PUBLIC	??E?$vec@$03_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,0>::operator++
PUBLIC	??F?$vec@$03_J$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,__int64,0>::operator--
PUBLIC	??E?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,0>::operator++
PUBLIC	??F?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,__int64,0>::operator--
PUBLIC	?length@?$vec@$03N$0A@@glm@@SAHXZ		; glm::vec<4,double,0>::length
PUBLIC	??A?$vec@$03N$0A@@glm@@QAEAANH@Z		; glm::vec<4,double,0>::operator[]
PUBLIC	??A?$vec@$03N$0A@@glm@@QBEABNH@Z		; glm::vec<4,double,0>::operator[]
PUBLIC	??0?$vec@$03N$0A@@glm@@QAE@N@Z			; glm::vec<4,double,0>::vec<4,double,0>
PUBLIC	??0?$vec@$03N$0A@@glm@@QAE@NNNN@Z		; glm::vec<4,double,0>::vec<4,double,0>
PUBLIC	??E?$vec@$03N$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,double,0>::operator++
PUBLIC	??F?$vec@$03N$0A@@glm@@QAEAAU01@XZ		; glm::vec<4,double,0>::operator--
PUBLIC	??E?$vec@$03N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,double,0>::operator++
PUBLIC	??F?$vec@$03N$0A@@glm@@QAE?AU01@H@Z		; glm::vec<4,double,0>::operator--
PUBLIC	?length@?$mat@$01$01M$01@glm@@SAHXZ		; glm::mat<2,2,float,2>::length
PUBLIC	??A?$mat@$01$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ; glm::mat<2,2,float,2>::operator[]
PUBLIC	??A?$mat@$01$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ; glm::mat<2,2,float,2>::operator[]
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@M@Z		; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABM000@Z		; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@0@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<2,2,float,2>::mat<2,2,float,2>
PUBLIC	??E?$mat@$01$01M$01@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,2>::operator++
PUBLIC	??F?$mat@$01$01M$01@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,2>::operator--
PUBLIC	??E?$mat@$01$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,2>::operator++
PUBLIC	??F?$mat@$01$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,2>::operator--
PUBLIC	?length@?$mat@$01$01N$01@glm@@SAHXZ		; glm::mat<2,2,double,2>::length
PUBLIC	??A?$mat@$01$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ; glm::mat<2,2,double,2>::operator[]
PUBLIC	??A?$mat@$01$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ; glm::mat<2,2,double,2>::operator[]
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@N@Z		; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABN000@Z		; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@0@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<2,2,double,2>::mat<2,2,double,2>
PUBLIC	??E?$mat@$01$01N$01@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,2>::operator++
PUBLIC	??F?$mat@$01$01N$01@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,2>::operator--
PUBLIC	??E?$mat@$01$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,2>::operator++
PUBLIC	??F?$mat@$01$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,2>::operator--
PUBLIC	?length@?$mat@$01$01M$00@glm@@SAHXZ		; glm::mat<2,2,float,1>::length
PUBLIC	??A?$mat@$01$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ; glm::mat<2,2,float,1>::operator[]
PUBLIC	??A?$mat@$01$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ; glm::mat<2,2,float,1>::operator[]
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@M@Z		; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABM000@Z		; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@0@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<2,2,float,1>::mat<2,2,float,1>
PUBLIC	??E?$mat@$01$01M$00@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,1>::operator++
PUBLIC	??F?$mat@$01$01M$00@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,1>::operator--
PUBLIC	??E?$mat@$01$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,1>::operator++
PUBLIC	??F?$mat@$01$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,1>::operator--
PUBLIC	?length@?$mat@$01$01N$00@glm@@SAHXZ		; glm::mat<2,2,double,1>::length
PUBLIC	??A?$mat@$01$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ; glm::mat<2,2,double,1>::operator[]
PUBLIC	??A?$mat@$01$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ; glm::mat<2,2,double,1>::operator[]
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@N@Z		; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABN000@Z		; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@0@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<2,2,double,1>::mat<2,2,double,1>
PUBLIC	??E?$mat@$01$01N$00@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,1>::operator++
PUBLIC	??F?$mat@$01$01N$00@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,1>::operator--
PUBLIC	??E?$mat@$01$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,1>::operator++
PUBLIC	??F?$mat@$01$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,1>::operator--
PUBLIC	?length@?$mat@$01$01M$0A@@glm@@SAHXZ		; glm::mat<2,2,float,0>::length
PUBLIC	??A?$mat@$01$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ; glm::mat<2,2,float,0>::operator[]
PUBLIC	??A?$mat@$01$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ; glm::mat<2,2,float,0>::operator[]
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@M@Z		; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABM000@Z		; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@0@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<2,2,float,0>::mat<2,2,float,0>
PUBLIC	??E?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,0>::operator++
PUBLIC	??F?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,2,float,0>::operator--
PUBLIC	??E?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,0>::operator++
PUBLIC	??F?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,2,float,0>::operator--
PUBLIC	?length@?$mat@$01$01N$0A@@glm@@SAHXZ		; glm::mat<2,2,double,0>::length
PUBLIC	??A?$mat@$01$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ; glm::mat<2,2,double,0>::operator[]
PUBLIC	??A?$mat@$01$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ; glm::mat<2,2,double,0>::operator[]
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@N@Z		; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABN000@Z		; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@0@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<2,2,double,0>::mat<2,2,double,0>
PUBLIC	??E?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,0>::operator++
PUBLIC	??F?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,2,double,0>::operator--
PUBLIC	??E?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,0>::operator++
PUBLIC	??F?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,2,double,0>::operator--
PUBLIC	?length@?$mat@$01$02M$01@glm@@SAHXZ		; glm::mat<2,3,float,2>::length
PUBLIC	??A?$mat@$01$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ; glm::mat<2,3,float,2>::operator[]
PUBLIC	??A?$mat@$01$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ; glm::mat<2,3,float,2>::operator[]
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@M@Z		; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@MMMMMM@Z		; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<2,3,float,2>::mat<2,3,float,2>
PUBLIC	??E?$mat@$01$02M$01@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,2>::operator++
PUBLIC	??F?$mat@$01$02M$01@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,2>::operator--
PUBLIC	??E?$mat@$01$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,2>::operator++
PUBLIC	??F?$mat@$01$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,2>::operator--
PUBLIC	?length@?$mat@$01$02N$01@glm@@SAHXZ		; glm::mat<2,3,double,2>::length
PUBLIC	??A?$mat@$01$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ; glm::mat<2,3,double,2>::operator[]
PUBLIC	??A?$mat@$01$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ; glm::mat<2,3,double,2>::operator[]
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@N@Z		; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@NNNNNN@Z		; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<2,3,double,2>::mat<2,3,double,2>
PUBLIC	??E?$mat@$01$02N$01@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,2>::operator++
PUBLIC	??F?$mat@$01$02N$01@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,2>::operator--
PUBLIC	??E?$mat@$01$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,2>::operator++
PUBLIC	??F?$mat@$01$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,2>::operator--
PUBLIC	?length@?$mat@$01$02M$00@glm@@SAHXZ		; glm::mat<2,3,float,1>::length
PUBLIC	??A?$mat@$01$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ; glm::mat<2,3,float,1>::operator[]
PUBLIC	??A?$mat@$01$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ; glm::mat<2,3,float,1>::operator[]
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@M@Z		; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@MMMMMM@Z		; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<2,3,float,1>::mat<2,3,float,1>
PUBLIC	??E?$mat@$01$02M$00@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,1>::operator++
PUBLIC	??F?$mat@$01$02M$00@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,1>::operator--
PUBLIC	??E?$mat@$01$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,1>::operator++
PUBLIC	??F?$mat@$01$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,1>::operator--
PUBLIC	?length@?$mat@$01$02N$00@glm@@SAHXZ		; glm::mat<2,3,double,1>::length
PUBLIC	??A?$mat@$01$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ; glm::mat<2,3,double,1>::operator[]
PUBLIC	??A?$mat@$01$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ; glm::mat<2,3,double,1>::operator[]
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@N@Z		; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@NNNNNN@Z		; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<2,3,double,1>::mat<2,3,double,1>
PUBLIC	??E?$mat@$01$02N$00@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,1>::operator++
PUBLIC	??F?$mat@$01$02N$00@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,1>::operator--
PUBLIC	??E?$mat@$01$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,1>::operator++
PUBLIC	??F?$mat@$01$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,1>::operator--
PUBLIC	?length@?$mat@$01$02M$0A@@glm@@SAHXZ		; glm::mat<2,3,float,0>::length
PUBLIC	??A?$mat@$01$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ; glm::mat<2,3,float,0>::operator[]
PUBLIC	??A?$mat@$01$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ; glm::mat<2,3,float,0>::operator[]
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@M@Z		; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@MMMMMM@Z		; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<2,3,float,0>::mat<2,3,float,0>
PUBLIC	??E?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,0>::operator++
PUBLIC	??F?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,3,float,0>::operator--
PUBLIC	??E?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,0>::operator++
PUBLIC	??F?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,3,float,0>::operator--
PUBLIC	?length@?$mat@$01$02N$0A@@glm@@SAHXZ		; glm::mat<2,3,double,0>::length
PUBLIC	??A?$mat@$01$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ; glm::mat<2,3,double,0>::operator[]
PUBLIC	??A?$mat@$01$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ; glm::mat<2,3,double,0>::operator[]
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@N@Z		; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@NNNNNN@Z		; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<2,3,double,0>::mat<2,3,double,0>
PUBLIC	??E?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,0>::operator++
PUBLIC	??F?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,3,double,0>::operator--
PUBLIC	??E?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,0>::operator++
PUBLIC	??F?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,3,double,0>::operator--
PUBLIC	?length@?$mat@$01$03M$01@glm@@SAHXZ		; glm::mat<2,4,float,2>::length
PUBLIC	??A?$mat@$01$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ; glm::mat<2,4,float,2>::operator[]
PUBLIC	??A?$mat@$01$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ; glm::mat<2,4,float,2>::operator[]
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@M@Z		; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@MMMMMMMM@Z		; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@0@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<2,4,float,2>::mat<2,4,float,2>
PUBLIC	??E?$mat@$01$03M$01@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,2>::operator++
PUBLIC	??F?$mat@$01$03M$01@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,2>::operator--
PUBLIC	??E?$mat@$01$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,2>::operator++
PUBLIC	??F?$mat@$01$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,2>::operator--
PUBLIC	?length@?$mat@$01$03N$01@glm@@SAHXZ		; glm::mat<2,4,double,2>::length
PUBLIC	??A?$mat@$01$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ; glm::mat<2,4,double,2>::operator[]
PUBLIC	??A?$mat@$01$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ; glm::mat<2,4,double,2>::operator[]
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@N@Z		; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@NNNNNNNN@Z		; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@0@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<2,4,double,2>::mat<2,4,double,2>
PUBLIC	??E?$mat@$01$03N$01@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,2>::operator++
PUBLIC	??F?$mat@$01$03N$01@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,2>::operator--
PUBLIC	??E?$mat@$01$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,2>::operator++
PUBLIC	??F?$mat@$01$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,2>::operator--
PUBLIC	?length@?$mat@$01$03M$00@glm@@SAHXZ		; glm::mat<2,4,float,1>::length
PUBLIC	??A?$mat@$01$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ; glm::mat<2,4,float,1>::operator[]
PUBLIC	??A?$mat@$01$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ; glm::mat<2,4,float,1>::operator[]
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@M@Z		; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@MMMMMMMM@Z		; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@0@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<2,4,float,1>::mat<2,4,float,1>
PUBLIC	??E?$mat@$01$03M$00@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,1>::operator++
PUBLIC	??F?$mat@$01$03M$00@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,1>::operator--
PUBLIC	??E?$mat@$01$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,1>::operator++
PUBLIC	??F?$mat@$01$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,1>::operator--
PUBLIC	?length@?$mat@$01$03N$00@glm@@SAHXZ		; glm::mat<2,4,double,1>::length
PUBLIC	??A?$mat@$01$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ; glm::mat<2,4,double,1>::operator[]
PUBLIC	??A?$mat@$01$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ; glm::mat<2,4,double,1>::operator[]
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@N@Z		; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@NNNNNNNN@Z		; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@0@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<2,4,double,1>::mat<2,4,double,1>
PUBLIC	??E?$mat@$01$03N$00@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,1>::operator++
PUBLIC	??F?$mat@$01$03N$00@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,1>::operator--
PUBLIC	??E?$mat@$01$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,1>::operator++
PUBLIC	??F?$mat@$01$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,1>::operator--
PUBLIC	?length@?$mat@$01$03M$0A@@glm@@SAHXZ		; glm::mat<2,4,float,0>::length
PUBLIC	??A?$mat@$01$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ; glm::mat<2,4,float,0>::operator[]
PUBLIC	??A?$mat@$01$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ; glm::mat<2,4,float,0>::operator[]
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@M@Z		; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@MMMMMMMM@Z	; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@0@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<2,4,float,0>::mat<2,4,float,0>
PUBLIC	??E?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,0>::operator++
PUBLIC	??F?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,4,float,0>::operator--
PUBLIC	??E?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,0>::operator++
PUBLIC	??F?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,4,float,0>::operator--
PUBLIC	?length@?$mat@$01$03N$0A@@glm@@SAHXZ		; glm::mat<2,4,double,0>::length
PUBLIC	??A?$mat@$01$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ; glm::mat<2,4,double,0>::operator[]
PUBLIC	??A?$mat@$01$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ; glm::mat<2,4,double,0>::operator[]
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@N@Z		; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@NNNNNNNN@Z	; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@0@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<2,4,double,0>::mat<2,4,double,0>
PUBLIC	??E?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,0>::operator++
PUBLIC	??F?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<2,4,double,0>::operator--
PUBLIC	??E?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,0>::operator++
PUBLIC	??F?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<2,4,double,0>::operator--
PUBLIC	?length@?$mat@$02$01M$01@glm@@SAHXZ		; glm::mat<3,2,float,2>::length
PUBLIC	??A?$mat@$02$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ; glm::mat<3,2,float,2>::operator[]
PUBLIC	??A?$mat@$02$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ; glm::mat<3,2,float,2>::operator[]
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@M@Z		; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@MMMMMM@Z		; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@00@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<3,2,float,2>::mat<3,2,float,2>
PUBLIC	??E?$mat@$02$01M$01@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,2>::operator++
PUBLIC	??F?$mat@$02$01M$01@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,2>::operator--
PUBLIC	??E?$mat@$02$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,2>::operator++
PUBLIC	??F?$mat@$02$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,2>::operator--
PUBLIC	?length@?$mat@$02$01N$01@glm@@SAHXZ		; glm::mat<3,2,double,2>::length
PUBLIC	??A?$mat@$02$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ; glm::mat<3,2,double,2>::operator[]
PUBLIC	??A?$mat@$02$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ; glm::mat<3,2,double,2>::operator[]
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@N@Z		; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@NNNNNN@Z		; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@00@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<3,2,double,2>::mat<3,2,double,2>
PUBLIC	??E?$mat@$02$01N$01@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,2>::operator++
PUBLIC	??F?$mat@$02$01N$01@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,2>::operator--
PUBLIC	??E?$mat@$02$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,2>::operator++
PUBLIC	??F?$mat@$02$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,2>::operator--
PUBLIC	?length@?$mat@$02$01M$00@glm@@SAHXZ		; glm::mat<3,2,float,1>::length
PUBLIC	??A?$mat@$02$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ; glm::mat<3,2,float,1>::operator[]
PUBLIC	??A?$mat@$02$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ; glm::mat<3,2,float,1>::operator[]
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@M@Z		; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@MMMMMM@Z		; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@00@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<3,2,float,1>::mat<3,2,float,1>
PUBLIC	??E?$mat@$02$01M$00@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,1>::operator++
PUBLIC	??F?$mat@$02$01M$00@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,1>::operator--
PUBLIC	??E?$mat@$02$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,1>::operator++
PUBLIC	??F?$mat@$02$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,1>::operator--
PUBLIC	?length@?$mat@$02$01N$00@glm@@SAHXZ		; glm::mat<3,2,double,1>::length
PUBLIC	??A?$mat@$02$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ; glm::mat<3,2,double,1>::operator[]
PUBLIC	??A?$mat@$02$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ; glm::mat<3,2,double,1>::operator[]
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@N@Z		; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@NNNNNN@Z		; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@00@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<3,2,double,1>::mat<3,2,double,1>
PUBLIC	??E?$mat@$02$01N$00@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,1>::operator++
PUBLIC	??F?$mat@$02$01N$00@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,1>::operator--
PUBLIC	??E?$mat@$02$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,1>::operator++
PUBLIC	??F?$mat@$02$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,1>::operator--
PUBLIC	?length@?$mat@$02$01M$0A@@glm@@SAHXZ		; glm::mat<3,2,float,0>::length
PUBLIC	??A?$mat@$02$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ; glm::mat<3,2,float,0>::operator[]
PUBLIC	??A?$mat@$02$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ; glm::mat<3,2,float,0>::operator[]
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@M@Z		; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@MMMMMM@Z		; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@00@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<3,2,float,0>::mat<3,2,float,0>
PUBLIC	??E?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,0>::operator++
PUBLIC	??F?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,2,float,0>::operator--
PUBLIC	??E?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,0>::operator++
PUBLIC	??F?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,2,float,0>::operator--
PUBLIC	?length@?$mat@$02$01N$0A@@glm@@SAHXZ		; glm::mat<3,2,double,0>::length
PUBLIC	??A?$mat@$02$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ; glm::mat<3,2,double,0>::operator[]
PUBLIC	??A?$mat@$02$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ; glm::mat<3,2,double,0>::operator[]
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@N@Z		; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@NNNNNN@Z		; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@00@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<3,2,double,0>::mat<3,2,double,0>
PUBLIC	??E?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,0>::operator++
PUBLIC	??F?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,2,double,0>::operator--
PUBLIC	??E?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,0>::operator++
PUBLIC	??F?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,2,double,0>::operator--
PUBLIC	?length@?$mat@$02$02M$01@glm@@SAHXZ		; glm::mat<3,3,float,2>::length
PUBLIC	??A?$mat@$02$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ; glm::mat<3,3,float,2>::operator[]
PUBLIC	??A?$mat@$02$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ; glm::mat<3,3,float,2>::operator[]
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@M@Z		; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@MMMMMMMMM@Z	; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@00@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<3,3,float,2>::mat<3,3,float,2>
PUBLIC	??E?$mat@$02$02M$01@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,2>::operator++
PUBLIC	??F?$mat@$02$02M$01@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,2>::operator--
PUBLIC	??E?$mat@$02$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,2>::operator++
PUBLIC	??F?$mat@$02$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,2>::operator--
PUBLIC	?length@?$mat@$02$02N$01@glm@@SAHXZ		; glm::mat<3,3,double,2>::length
PUBLIC	??A?$mat@$02$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ; glm::mat<3,3,double,2>::operator[]
PUBLIC	??A?$mat@$02$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ; glm::mat<3,3,double,2>::operator[]
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@N@Z		; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@NNNNNNNNN@Z	; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@00@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<3,3,double,2>::mat<3,3,double,2>
PUBLIC	??E?$mat@$02$02N$01@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,2>::operator++
PUBLIC	??F?$mat@$02$02N$01@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,2>::operator--
PUBLIC	??E?$mat@$02$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,2>::operator++
PUBLIC	??F?$mat@$02$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,2>::operator--
PUBLIC	?length@?$mat@$02$02M$00@glm@@SAHXZ		; glm::mat<3,3,float,1>::length
PUBLIC	??A?$mat@$02$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ; glm::mat<3,3,float,1>::operator[]
PUBLIC	??A?$mat@$02$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ; glm::mat<3,3,float,1>::operator[]
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@M@Z		; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@MMMMMMMMM@Z	; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@00@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<3,3,float,1>::mat<3,3,float,1>
PUBLIC	??E?$mat@$02$02M$00@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,1>::operator++
PUBLIC	??F?$mat@$02$02M$00@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,1>::operator--
PUBLIC	??E?$mat@$02$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,1>::operator++
PUBLIC	??F?$mat@$02$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,1>::operator--
PUBLIC	?length@?$mat@$02$02N$00@glm@@SAHXZ		; glm::mat<3,3,double,1>::length
PUBLIC	??A?$mat@$02$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ; glm::mat<3,3,double,1>::operator[]
PUBLIC	??A?$mat@$02$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ; glm::mat<3,3,double,1>::operator[]
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@N@Z		; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@NNNNNNNNN@Z	; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@00@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<3,3,double,1>::mat<3,3,double,1>
PUBLIC	??E?$mat@$02$02N$00@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,1>::operator++
PUBLIC	??F?$mat@$02$02N$00@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,1>::operator--
PUBLIC	??E?$mat@$02$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,1>::operator++
PUBLIC	??F?$mat@$02$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,1>::operator--
PUBLIC	?length@?$mat@$02$02M$0A@@glm@@SAHXZ		; glm::mat<3,3,float,0>::length
PUBLIC	??A?$mat@$02$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ; glm::mat<3,3,float,0>::operator[]
PUBLIC	??A?$mat@$02$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ; glm::mat<3,3,float,0>::operator[]
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@M@Z		; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@MMMMMMMMM@Z	; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@00@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<3,3,float,0>::mat<3,3,float,0>
PUBLIC	??E?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,0>::operator++
PUBLIC	??F?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,3,float,0>::operator--
PUBLIC	??E?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,0>::operator++
PUBLIC	??F?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,3,float,0>::operator--
PUBLIC	?length@?$mat@$02$02N$0A@@glm@@SAHXZ		; glm::mat<3,3,double,0>::length
PUBLIC	??A?$mat@$02$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ; glm::mat<3,3,double,0>::operator[]
PUBLIC	??A?$mat@$02$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ; glm::mat<3,3,double,0>::operator[]
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@N@Z		; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@NNNNNNNNN@Z	; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@00@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<3,3,double,0>::mat<3,3,double,0>
PUBLIC	??E?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,0>::operator++
PUBLIC	??F?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,3,double,0>::operator--
PUBLIC	??E?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,0>::operator++
PUBLIC	??F?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,3,double,0>::operator--
PUBLIC	?length@?$mat@$02$03M$01@glm@@SAHXZ		; glm::mat<3,4,float,2>::length
PUBLIC	??A?$mat@$02$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ; glm::mat<3,4,float,2>::operator[]
PUBLIC	??A?$mat@$02$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ; glm::mat<3,4,float,2>::operator[]
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@M@Z		; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@MMMMMMMMMMMM@Z	; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@00@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<3,4,float,2>::mat<3,4,float,2>
PUBLIC	??E?$mat@$02$03M$01@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,2>::operator++
PUBLIC	??F?$mat@$02$03M$01@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,2>::operator--
PUBLIC	??E?$mat@$02$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,2>::operator++
PUBLIC	??F?$mat@$02$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,2>::operator--
PUBLIC	?length@?$mat@$02$03N$01@glm@@SAHXZ		; glm::mat<3,4,double,2>::length
PUBLIC	??A?$mat@$02$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ; glm::mat<3,4,double,2>::operator[]
PUBLIC	??A?$mat@$02$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ; glm::mat<3,4,double,2>::operator[]
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@N@Z		; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@NNNNNNNNNNNN@Z	; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@00@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<3,4,double,2>::mat<3,4,double,2>
PUBLIC	??E?$mat@$02$03N$01@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,2>::operator++
PUBLIC	??F?$mat@$02$03N$01@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,2>::operator--
PUBLIC	??E?$mat@$02$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,2>::operator++
PUBLIC	??F?$mat@$02$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,2>::operator--
PUBLIC	?length@?$mat@$02$03M$00@glm@@SAHXZ		; glm::mat<3,4,float,1>::length
PUBLIC	??A?$mat@$02$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ; glm::mat<3,4,float,1>::operator[]
PUBLIC	??A?$mat@$02$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ; glm::mat<3,4,float,1>::operator[]
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@M@Z		; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@MMMMMMMMMMMM@Z	; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@00@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<3,4,float,1>::mat<3,4,float,1>
PUBLIC	??E?$mat@$02$03M$00@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,1>::operator++
PUBLIC	??F?$mat@$02$03M$00@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,1>::operator--
PUBLIC	??E?$mat@$02$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,1>::operator++
PUBLIC	??F?$mat@$02$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,1>::operator--
PUBLIC	?length@?$mat@$02$03N$00@glm@@SAHXZ		; glm::mat<3,4,double,1>::length
PUBLIC	??A?$mat@$02$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ; glm::mat<3,4,double,1>::operator[]
PUBLIC	??A?$mat@$02$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ; glm::mat<3,4,double,1>::operator[]
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@N@Z		; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@NNNNNNNNNNNN@Z	; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@00@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<3,4,double,1>::mat<3,4,double,1>
PUBLIC	??E?$mat@$02$03N$00@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,1>::operator++
PUBLIC	??F?$mat@$02$03N$00@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,1>::operator--
PUBLIC	??E?$mat@$02$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,1>::operator++
PUBLIC	??F?$mat@$02$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,1>::operator--
PUBLIC	?length@?$mat@$02$03M$0A@@glm@@SAHXZ		; glm::mat<3,4,float,0>::length
PUBLIC	??A?$mat@$02$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ; glm::mat<3,4,float,0>::operator[]
PUBLIC	??A?$mat@$02$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ; glm::mat<3,4,float,0>::operator[]
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@M@Z		; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@MMMMMMMMMMMM@Z	; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@00@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<3,4,float,0>::mat<3,4,float,0>
PUBLIC	??E?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,0>::operator++
PUBLIC	??F?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,4,float,0>::operator--
PUBLIC	??E?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,0>::operator++
PUBLIC	??F?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,4,float,0>::operator--
PUBLIC	?length@?$mat@$02$03N$0A@@glm@@SAHXZ		; glm::mat<3,4,double,0>::length
PUBLIC	??A?$mat@$02$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ; glm::mat<3,4,double,0>::operator[]
PUBLIC	??A?$mat@$02$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ; glm::mat<3,4,double,0>::operator[]
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@N@Z		; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@NNNNNNNNNNNN@Z	; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@00@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<3,4,double,0>::mat<3,4,double,0>
PUBLIC	??E?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,0>::operator++
PUBLIC	??F?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<3,4,double,0>::operator--
PUBLIC	??E?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,0>::operator++
PUBLIC	??F?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<3,4,double,0>::operator--
PUBLIC	?length@?$mat@$03$01M$01@glm@@SAHXZ		; glm::mat<4,2,float,2>::length
PUBLIC	??A?$mat@$03$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ; glm::mat<4,2,float,2>::operator[]
PUBLIC	??A?$mat@$03$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ; glm::mat<4,2,float,2>::operator[]
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@M@Z		; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@MMMMMMMM@Z		; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@000@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<4,2,float,2>::mat<4,2,float,2>
PUBLIC	??E?$mat@$03$01M$01@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,2>::operator++
PUBLIC	??F?$mat@$03$01M$01@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,2>::operator--
PUBLIC	??E?$mat@$03$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,2>::operator++
PUBLIC	??F?$mat@$03$01M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,2>::operator--
PUBLIC	?length@?$mat@$03$01N$01@glm@@SAHXZ		; glm::mat<4,2,double,2>::length
PUBLIC	??A?$mat@$03$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ; glm::mat<4,2,double,2>::operator[]
PUBLIC	??A?$mat@$03$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ; glm::mat<4,2,double,2>::operator[]
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@N@Z		; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@NNNNNNNN@Z		; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@000@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<4,2,double,2>::mat<4,2,double,2>
PUBLIC	??E?$mat@$03$01N$01@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,2>::operator++
PUBLIC	??F?$mat@$03$01N$01@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,2>::operator--
PUBLIC	??E?$mat@$03$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,2>::operator++
PUBLIC	??F?$mat@$03$01N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,2>::operator--
PUBLIC	?length@?$mat@$03$01M$00@glm@@SAHXZ		; glm::mat<4,2,float,1>::length
PUBLIC	??A?$mat@$03$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ; glm::mat<4,2,float,1>::operator[]
PUBLIC	??A?$mat@$03$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ; glm::mat<4,2,float,1>::operator[]
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@M@Z		; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@MMMMMMMM@Z		; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@000@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<4,2,float,1>::mat<4,2,float,1>
PUBLIC	??E?$mat@$03$01M$00@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,1>::operator++
PUBLIC	??F?$mat@$03$01M$00@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,1>::operator--
PUBLIC	??E?$mat@$03$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,1>::operator++
PUBLIC	??F?$mat@$03$01M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,1>::operator--
PUBLIC	?length@?$mat@$03$01N$00@glm@@SAHXZ		; glm::mat<4,2,double,1>::length
PUBLIC	??A?$mat@$03$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ; glm::mat<4,2,double,1>::operator[]
PUBLIC	??A?$mat@$03$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ; glm::mat<4,2,double,1>::operator[]
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@N@Z		; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@NNNNNNNN@Z		; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@000@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<4,2,double,1>::mat<4,2,double,1>
PUBLIC	??E?$mat@$03$01N$00@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,1>::operator++
PUBLIC	??F?$mat@$03$01N$00@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,1>::operator--
PUBLIC	??E?$mat@$03$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,1>::operator++
PUBLIC	??F?$mat@$03$01N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,1>::operator--
PUBLIC	?length@?$mat@$03$01M$0A@@glm@@SAHXZ		; glm::mat<4,2,float,0>::length
PUBLIC	??A?$mat@$03$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ; glm::mat<4,2,float,0>::operator[]
PUBLIC	??A?$mat@$03$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ; glm::mat<4,2,float,0>::operator[]
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@M@Z		; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@MMMMMMMM@Z	; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@000@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<4,2,float,0>::mat<4,2,float,0>
PUBLIC	??E?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,0>::operator++
PUBLIC	??F?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,2,float,0>::operator--
PUBLIC	??E?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,0>::operator++
PUBLIC	??F?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,2,float,0>::operator--
PUBLIC	?length@?$mat@$03$01N$0A@@glm@@SAHXZ		; glm::mat<4,2,double,0>::length
PUBLIC	??A?$mat@$03$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ; glm::mat<4,2,double,0>::operator[]
PUBLIC	??A?$mat@$03$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ; glm::mat<4,2,double,0>::operator[]
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@N@Z		; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@NNNNNNNN@Z	; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@000@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<4,2,double,0>::mat<4,2,double,0>
PUBLIC	??E?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,0>::operator++
PUBLIC	??F?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,2,double,0>::operator--
PUBLIC	??E?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,0>::operator++
PUBLIC	??F?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,2,double,0>::operator--
PUBLIC	?length@?$mat@$03$02M$01@glm@@SAHXZ		; glm::mat<4,3,float,2>::length
PUBLIC	??A?$mat@$03$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ; glm::mat<4,3,float,2>::operator[]
PUBLIC	??A?$mat@$03$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ; glm::mat<4,3,float,2>::operator[]
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABM@Z		; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABM00000000000@Z	; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@000@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<4,3,float,2>::mat<4,3,float,2>
PUBLIC	??E?$mat@$03$02M$01@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,2>::operator++
PUBLIC	??F?$mat@$03$02M$01@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,2>::operator--
PUBLIC	??E?$mat@$03$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,2>::operator++
PUBLIC	??F?$mat@$03$02M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,2>::operator--
PUBLIC	?length@?$mat@$03$02N$01@glm@@SAHXZ		; glm::mat<4,3,double,2>::length
PUBLIC	??A?$mat@$03$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ; glm::mat<4,3,double,2>::operator[]
PUBLIC	??A?$mat@$03$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ; glm::mat<4,3,double,2>::operator[]
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABN@Z		; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABN00000000000@Z	; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@000@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<4,3,double,2>::mat<4,3,double,2>
PUBLIC	??E?$mat@$03$02N$01@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,2>::operator++
PUBLIC	??F?$mat@$03$02N$01@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,2>::operator--
PUBLIC	??E?$mat@$03$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,2>::operator++
PUBLIC	??F?$mat@$03$02N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,2>::operator--
PUBLIC	?length@?$mat@$03$02M$00@glm@@SAHXZ		; glm::mat<4,3,float,1>::length
PUBLIC	??A?$mat@$03$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ; glm::mat<4,3,float,1>::operator[]
PUBLIC	??A?$mat@$03$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ; glm::mat<4,3,float,1>::operator[]
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABM@Z		; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABM00000000000@Z	; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@000@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<4,3,float,1>::mat<4,3,float,1>
PUBLIC	??E?$mat@$03$02M$00@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,1>::operator++
PUBLIC	??F?$mat@$03$02M$00@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,1>::operator--
PUBLIC	??E?$mat@$03$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,1>::operator++
PUBLIC	??F?$mat@$03$02M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,1>::operator--
PUBLIC	?length@?$mat@$03$02N$00@glm@@SAHXZ		; glm::mat<4,3,double,1>::length
PUBLIC	??A?$mat@$03$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ; glm::mat<4,3,double,1>::operator[]
PUBLIC	??A?$mat@$03$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ; glm::mat<4,3,double,1>::operator[]
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABN@Z		; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABN00000000000@Z	; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@000@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<4,3,double,1>::mat<4,3,double,1>
PUBLIC	??E?$mat@$03$02N$00@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,1>::operator++
PUBLIC	??F?$mat@$03$02N$00@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,1>::operator--
PUBLIC	??E?$mat@$03$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,1>::operator++
PUBLIC	??F?$mat@$03$02N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,1>::operator--
PUBLIC	?length@?$mat@$03$02M$0A@@glm@@SAHXZ		; glm::mat<4,3,float,0>::length
PUBLIC	??A?$mat@$03$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ; glm::mat<4,3,float,0>::operator[]
PUBLIC	??A?$mat@$03$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ; glm::mat<4,3,float,0>::operator[]
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABM@Z		; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABM00000000000@Z	; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@000@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<4,3,float,0>::mat<4,3,float,0>
PUBLIC	??E?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,0>::operator++
PUBLIC	??F?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,3,float,0>::operator--
PUBLIC	??E?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,0>::operator++
PUBLIC	??F?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,3,float,0>::operator--
PUBLIC	?length@?$mat@$03$02N$0A@@glm@@SAHXZ		; glm::mat<4,3,double,0>::length
PUBLIC	??A?$mat@$03$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ; glm::mat<4,3,double,0>::operator[]
PUBLIC	??A?$mat@$03$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ; glm::mat<4,3,double,0>::operator[]
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABN@Z		; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABN00000000000@Z	; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@000@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<4,3,double,0>::mat<4,3,double,0>
PUBLIC	??E?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,0>::operator++
PUBLIC	??F?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,3,double,0>::operator--
PUBLIC	??E?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,0>::operator++
PUBLIC	??F?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,3,double,0>::operator--
PUBLIC	?length@?$mat@$03$03M$01@glm@@SAHXZ		; glm::mat<4,4,float,2>::length
PUBLIC	??A?$mat@$03$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ; glm::mat<4,4,float,2>::operator[]
PUBLIC	??A?$mat@$03$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ; glm::mat<4,4,float,2>::operator[]
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABM@Z		; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABM000000000000000@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@000@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ; glm::mat<4,4,float,2>::mat<4,4,float,2>
PUBLIC	??E?$mat@$03$03M$01@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,2>::operator++
PUBLIC	??F?$mat@$03$03M$01@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,2>::operator--
PUBLIC	??E?$mat@$03$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,2>::operator++
PUBLIC	??F?$mat@$03$03M$01@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,2>::operator--
PUBLIC	?length@?$mat@$03$03N$01@glm@@SAHXZ		; glm::mat<4,4,double,2>::length
PUBLIC	??A?$mat@$03$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ; glm::mat<4,4,double,2>::operator[]
PUBLIC	??A?$mat@$03$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ; glm::mat<4,4,double,2>::operator[]
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABN@Z		; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABN000000000000000@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@000@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ; glm::mat<4,4,double,2>::mat<4,4,double,2>
PUBLIC	??E?$mat@$03$03N$01@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,2>::operator++
PUBLIC	??F?$mat@$03$03N$01@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,2>::operator--
PUBLIC	??E?$mat@$03$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,2>::operator++
PUBLIC	??F?$mat@$03$03N$01@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,2>::operator--
PUBLIC	?length@?$mat@$03$03M$00@glm@@SAHXZ		; glm::mat<4,4,float,1>::length
PUBLIC	??A?$mat@$03$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ; glm::mat<4,4,float,1>::operator[]
PUBLIC	??A?$mat@$03$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ; glm::mat<4,4,float,1>::operator[]
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABM@Z		; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABM000000000000000@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@000@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ; glm::mat<4,4,float,1>::mat<4,4,float,1>
PUBLIC	??E?$mat@$03$03M$00@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,1>::operator++
PUBLIC	??F?$mat@$03$03M$00@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,1>::operator--
PUBLIC	??E?$mat@$03$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,1>::operator++
PUBLIC	??F?$mat@$03$03M$00@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,1>::operator--
PUBLIC	?length@?$mat@$03$03N$00@glm@@SAHXZ		; glm::mat<4,4,double,1>::length
PUBLIC	??A?$mat@$03$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ; glm::mat<4,4,double,1>::operator[]
PUBLIC	??A?$mat@$03$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ; glm::mat<4,4,double,1>::operator[]
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABN@Z		; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABN000000000000000@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@000@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ; glm::mat<4,4,double,1>::mat<4,4,double,1>
PUBLIC	??E?$mat@$03$03N$00@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,1>::operator++
PUBLIC	??F?$mat@$03$03N$00@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,1>::operator--
PUBLIC	??E?$mat@$03$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,1>::operator++
PUBLIC	??F?$mat@$03$03N$00@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,1>::operator--
PUBLIC	?length@?$mat@$03$03M$0A@@glm@@SAHXZ		; glm::mat<4,4,float,0>::length
PUBLIC	??A?$mat@$03$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ; glm::mat<4,4,float,0>::operator[]
PUBLIC	??A?$mat@$03$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ; glm::mat<4,4,float,0>::operator[]
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABM@Z		; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABM000000000000000@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@000@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ; glm::mat<4,4,float,0>::mat<4,4,float,0>
PUBLIC	??E?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,0>::operator++
PUBLIC	??F?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,4,float,0>::operator--
PUBLIC	??E?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,0>::operator++
PUBLIC	??F?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,4,float,0>::operator--
PUBLIC	?length@?$mat@$03$03N$0A@@glm@@SAHXZ		; glm::mat<4,4,double,0>::length
PUBLIC	??A?$mat@$03$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ; glm::mat<4,4,double,0>::operator[]
PUBLIC	??A?$mat@$03$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ; glm::mat<4,4,double,0>::operator[]
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABN@Z		; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABN000000000000000@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@000@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ; glm::mat<4,4,double,0>::mat<4,4,double,0>
PUBLIC	??E?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,0>::operator++
PUBLIC	??F?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ		; glm::mat<4,4,double,0>::operator--
PUBLIC	??E?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,0>::operator++
PUBLIC	??F?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z		; glm::mat<4,4,double,0>::operator--
PUBLIC	?length@?$tquat@M$01@glm@@SAHXZ			; glm::tquat<float,2>::length
PUBLIC	??A?$tquat@M$01@glm@@QAEAAMH@Z			; glm::tquat<float,2>::operator[]
PUBLIC	??A?$tquat@M$01@glm@@QBEABMH@Z			; glm::tquat<float,2>::operator[]
PUBLIC	??0?$tquat@M$01@glm@@QAE@MABU?$vec@$02M$01@1@@Z	; glm::tquat<float,2>::tquat<float,2>
PUBLIC	??0?$tquat@M$01@glm@@QAE@MMMM@Z			; glm::tquat<float,2>::tquat<float,2>
PUBLIC	??B?$tquat@M$01@glm@@QAE?AU?$mat@$02$02M$01@1@XZ ; glm::tquat<float,2>::operator glm::mat<3,3,float,2>
PUBLIC	??B?$tquat@M$01@glm@@QAE?AU?$mat@$03$03M$01@1@XZ ; glm::tquat<float,2>::operator glm::mat<4,4,float,2>
PUBLIC	??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z	; glm::tquat<float,2>::tquat<float,2>
PUBLIC	??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z	; glm::tquat<float,2>::tquat<float,2>
PUBLIC	??0?$tquat@M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ; glm::tquat<float,2>::tquat<float,2>
PUBLIC	??0?$tquat@M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ; glm::tquat<float,2>::tquat<float,2>
PUBLIC	?length@?$tquat@N$01@glm@@SAHXZ			; glm::tquat<double,2>::length
PUBLIC	??A?$tquat@N$01@glm@@QAEAANH@Z			; glm::tquat<double,2>::operator[]
PUBLIC	??A?$tquat@N$01@glm@@QBEABNH@Z			; glm::tquat<double,2>::operator[]
PUBLIC	??0?$tquat@N$01@glm@@QAE@NABU?$vec@$02N$01@1@@Z	; glm::tquat<double,2>::tquat<double,2>
PUBLIC	??0?$tquat@N$01@glm@@QAE@NNNN@Z			; glm::tquat<double,2>::tquat<double,2>
PUBLIC	??B?$tquat@N$01@glm@@QAE?AU?$mat@$02$02N$01@1@XZ ; glm::tquat<double,2>::operator glm::mat<3,3,double,2>
PUBLIC	??B?$tquat@N$01@glm@@QAE?AU?$mat@$03$03N$01@1@XZ ; glm::tquat<double,2>::operator glm::mat<4,4,double,2>
PUBLIC	??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z	; glm::tquat<double,2>::tquat<double,2>
PUBLIC	??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z	; glm::tquat<double,2>::tquat<double,2>
PUBLIC	??0?$tquat@N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ; glm::tquat<double,2>::tquat<double,2>
PUBLIC	??0?$tquat@N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ; glm::tquat<double,2>::tquat<double,2>
PUBLIC	?length@?$tquat@M$00@glm@@SAHXZ			; glm::tquat<float,1>::length
PUBLIC	??A?$tquat@M$00@glm@@QAEAAMH@Z			; glm::tquat<float,1>::operator[]
PUBLIC	??A?$tquat@M$00@glm@@QBEABMH@Z			; glm::tquat<float,1>::operator[]
PUBLIC	??0?$tquat@M$00@glm@@QAE@MABU?$vec@$02M$00@1@@Z	; glm::tquat<float,1>::tquat<float,1>
PUBLIC	??0?$tquat@M$00@glm@@QAE@MMMM@Z			; glm::tquat<float,1>::tquat<float,1>
PUBLIC	??B?$tquat@M$00@glm@@QAE?AU?$mat@$02$02M$00@1@XZ ; glm::tquat<float,1>::operator glm::mat<3,3,float,1>
PUBLIC	??B?$tquat@M$00@glm@@QAE?AU?$mat@$03$03M$00@1@XZ ; glm::tquat<float,1>::operator glm::mat<4,4,float,1>
PUBLIC	??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z	; glm::tquat<float,1>::tquat<float,1>
PUBLIC	??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z	; glm::tquat<float,1>::tquat<float,1>
PUBLIC	??0?$tquat@M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ; glm::tquat<float,1>::tquat<float,1>
PUBLIC	??0?$tquat@M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ; glm::tquat<float,1>::tquat<float,1>
PUBLIC	?length@?$tquat@N$00@glm@@SAHXZ			; glm::tquat<double,1>::length
PUBLIC	??A?$tquat@N$00@glm@@QAEAANH@Z			; glm::tquat<double,1>::operator[]
PUBLIC	??A?$tquat@N$00@glm@@QBEABNH@Z			; glm::tquat<double,1>::operator[]
PUBLIC	??0?$tquat@N$00@glm@@QAE@NABU?$vec@$02N$00@1@@Z	; glm::tquat<double,1>::tquat<double,1>
PUBLIC	??0?$tquat@N$00@glm@@QAE@NNNN@Z			; glm::tquat<double,1>::tquat<double,1>
PUBLIC	??B?$tquat@N$00@glm@@QAE?AU?$mat@$02$02N$00@1@XZ ; glm::tquat<double,1>::operator glm::mat<3,3,double,1>
PUBLIC	??B?$tquat@N$00@glm@@QAE?AU?$mat@$03$03N$00@1@XZ ; glm::tquat<double,1>::operator glm::mat<4,4,double,1>
PUBLIC	??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z	; glm::tquat<double,1>::tquat<double,1>
PUBLIC	??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z	; glm::tquat<double,1>::tquat<double,1>
PUBLIC	??0?$tquat@N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ; glm::tquat<double,1>::tquat<double,1>
PUBLIC	??0?$tquat@N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ; glm::tquat<double,1>::tquat<double,1>
PUBLIC	?length@?$tquat@M$0A@@glm@@SAHXZ		; glm::tquat<float,0>::length
PUBLIC	??A?$tquat@M$0A@@glm@@QAEAAMH@Z			; glm::tquat<float,0>::operator[]
PUBLIC	??A?$tquat@M$0A@@glm@@QBEABMH@Z			; glm::tquat<float,0>::operator[]
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@MABU?$vec@$02M$0A@@1@@Z ; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@MMMM@Z		; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$02$02M$0A@@1@XZ ; glm::tquat<float,0>::operator glm::mat<3,3,float,0>
PUBLIC	??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$03$03M$0A@@1@XZ ; glm::tquat<float,0>::operator glm::mat<4,4,float,0>
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z ; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z ; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ; glm::tquat<float,0>::tquat<float,0>
PUBLIC	??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ; glm::tquat<float,0>::tquat<float,0>
PUBLIC	?length@?$tquat@N$0A@@glm@@SAHXZ		; glm::tquat<double,0>::length
PUBLIC	??A?$tquat@N$0A@@glm@@QAEAANH@Z			; glm::tquat<double,0>::operator[]
PUBLIC	??A?$tquat@N$0A@@glm@@QBEABNH@Z			; glm::tquat<double,0>::operator[]
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@NABU?$vec@$02N$0A@@1@@Z ; glm::tquat<double,0>::tquat<double,0>
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@NNNN@Z		; glm::tquat<double,0>::tquat<double,0>
PUBLIC	??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$02$02N$0A@@1@XZ ; glm::tquat<double,0>::operator glm::mat<3,3,double,0>
PUBLIC	??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$03$03N$0A@@1@XZ ; glm::tquat<double,0>::operator glm::mat<4,4,double,0>
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z ; glm::tquat<double,0>::tquat<double,0>
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z ; glm::tquat<double,0>::tquat<double,0>
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ; glm::tquat<double,0>::tquat<double,0>
PUBLIC	??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ; glm::tquat<double,0>::tquat<double,0>
PUBLIC	?length@?$tdualquat@M$01@glm@@SAHXZ		; glm::tdualquat<float,2>::length
PUBLIC	??A?$tdualquat@M$01@glm@@QAEAAU?$tquat@M$01@1@H@Z ; glm::tdualquat<float,2>::operator[]
PUBLIC	??A?$tdualquat@M$01@glm@@QBEABU?$tquat@M$01@1@H@Z ; glm::tdualquat<float,2>::operator[]
PUBLIC	??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@@Z ; glm::tdualquat<float,2>::tdualquat<float,2>
PUBLIC	??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@ABU?$vec@$02M$01@1@@Z ; glm::tdualquat<float,2>::tdualquat<float,2>
PUBLIC	??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@0@Z ; glm::tdualquat<float,2>::tdualquat<float,2>
PUBLIC	??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ; glm::tdualquat<float,2>::tdualquat<float,2>
PUBLIC	??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ; glm::tdualquat<float,2>::tdualquat<float,2>
PUBLIC	?length@?$tdualquat@N$01@glm@@SAHXZ		; glm::tdualquat<double,2>::length
PUBLIC	??A?$tdualquat@N$01@glm@@QAEAAU?$tquat@N$01@1@H@Z ; glm::tdualquat<double,2>::operator[]
PUBLIC	??A?$tdualquat@N$01@glm@@QBEABU?$tquat@N$01@1@H@Z ; glm::tdualquat<double,2>::operator[]
PUBLIC	??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@@Z ; glm::tdualquat<double,2>::tdualquat<double,2>
PUBLIC	??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@ABU?$vec@$02N$01@1@@Z ; glm::tdualquat<double,2>::tdualquat<double,2>
PUBLIC	??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@0@Z ; glm::tdualquat<double,2>::tdualquat<double,2>
PUBLIC	??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ; glm::tdualquat<double,2>::tdualquat<double,2>
PUBLIC	??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ; glm::tdualquat<double,2>::tdualquat<double,2>
PUBLIC	?length@?$tdualquat@M$00@glm@@SAHXZ		; glm::tdualquat<float,1>::length
PUBLIC	??A?$tdualquat@M$00@glm@@QAEAAU?$tquat@M$00@1@H@Z ; glm::tdualquat<float,1>::operator[]
PUBLIC	??A?$tdualquat@M$00@glm@@QBEABU?$tquat@M$00@1@H@Z ; glm::tdualquat<float,1>::operator[]
PUBLIC	??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@@Z ; glm::tdualquat<float,1>::tdualquat<float,1>
PUBLIC	??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@ABU?$vec@$02M$00@1@@Z ; glm::tdualquat<float,1>::tdualquat<float,1>
PUBLIC	??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@0@Z ; glm::tdualquat<float,1>::tdualquat<float,1>
PUBLIC	??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ; glm::tdualquat<float,1>::tdualquat<float,1>
PUBLIC	??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ; glm::tdualquat<float,1>::tdualquat<float,1>
PUBLIC	?length@?$tdualquat@N$00@glm@@SAHXZ		; glm::tdualquat<double,1>::length
PUBLIC	??A?$tdualquat@N$00@glm@@QAEAAU?$tquat@N$00@1@H@Z ; glm::tdualquat<double,1>::operator[]
PUBLIC	??A?$tdualquat@N$00@glm@@QBEABU?$tquat@N$00@1@H@Z ; glm::tdualquat<double,1>::operator[]
PUBLIC	??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@@Z ; glm::tdualquat<double,1>::tdualquat<double,1>
PUBLIC	??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@ABU?$vec@$02N$00@1@@Z ; glm::tdualquat<double,1>::tdualquat<double,1>
PUBLIC	??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@0@Z ; glm::tdualquat<double,1>::tdualquat<double,1>
PUBLIC	??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ; glm::tdualquat<double,1>::tdualquat<double,1>
PUBLIC	??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ; glm::tdualquat<double,1>::tdualquat<double,1>
PUBLIC	?length@?$tdualquat@M$0A@@glm@@SAHXZ		; glm::tdualquat<float,0>::length
PUBLIC	??A?$tdualquat@M$0A@@glm@@QAEAAU?$tquat@M$0A@@1@H@Z ; glm::tdualquat<float,0>::operator[]
PUBLIC	??A?$tdualquat@M$0A@@glm@@QBEABU?$tquat@M$0A@@1@H@Z ; glm::tdualquat<float,0>::operator[]
PUBLIC	??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@@Z ; glm::tdualquat<float,0>::tdualquat<float,0>
PUBLIC	??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@ABU?$vec@$02M$0A@@1@@Z ; glm::tdualquat<float,0>::tdualquat<float,0>
PUBLIC	??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@0@Z ; glm::tdualquat<float,0>::tdualquat<float,0>
PUBLIC	??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ; glm::tdualquat<float,0>::tdualquat<float,0>
PUBLIC	??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ; glm::tdualquat<float,0>::tdualquat<float,0>
PUBLIC	?length@?$tdualquat@N$0A@@glm@@SAHXZ		; glm::tdualquat<double,0>::length
PUBLIC	??A?$tdualquat@N$0A@@glm@@QAEAAU?$tquat@N$0A@@1@H@Z ; glm::tdualquat<double,0>::operator[]
PUBLIC	??A?$tdualquat@N$0A@@glm@@QBEABU?$tquat@N$0A@@1@H@Z ; glm::tdualquat<double,0>::operator[]
PUBLIC	??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@@Z ; glm::tdualquat<double,0>::tdualquat<double,0>
PUBLIC	??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@ABU?$vec@$02N$0A@@1@@Z ; glm::tdualquat<double,0>::tdualquat<double,0>
PUBLIC	??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@0@Z ; glm::tdualquat<double,0>::tdualquat<double,0>
PUBLIC	??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ; glm::tdualquat<double,0>::tdualquat<double,0>
PUBLIC	??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ; glm::tdualquat<double,0>::tdualquat<double,0>
PUBLIC	??$?0HHHH@?$vec@$03M$01@glm@@QAE@HHHH@Z		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,int>
PUBLIC	??$?0MHHH@?$vec@$03M$01@glm@@QAE@MHHH@Z		; glm::vec<4,float,2>::vec<4,float,2><float,int,int,int>
PUBLIC	??$?0HMHH@?$vec@$03M$01@glm@@QAE@HMHH@Z		; glm::vec<4,float,2>::vec<4,float,2><int,float,int,int>
PUBLIC	??$?0HHMH@?$vec@$03M$01@glm@@QAE@HHMH@Z		; glm::vec<4,float,2>::vec<4,float,2><int,int,float,int>
PUBLIC	??$?0HHHH@?$vec@$03M$00@glm@@QAE@HHHH@Z		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,int>
PUBLIC	??$?0MHHH@?$vec@$03M$00@glm@@QAE@MHHH@Z		; glm::vec<4,float,1>::vec<4,float,1><float,int,int,int>
PUBLIC	??$?0HMHH@?$vec@$03M$00@glm@@QAE@HMHH@Z		; glm::vec<4,float,1>::vec<4,float,1><int,float,int,int>
PUBLIC	??$?0HHMH@?$vec@$03M$00@glm@@QAE@HHMH@Z		; glm::vec<4,float,1>::vec<4,float,1><int,int,float,int>
PUBLIC	??$?0HHHH@?$vec@$03M$0A@@glm@@QAE@HHHH@Z	; glm::vec<4,float,0>::vec<4,float,0><int,int,int,int>
PUBLIC	??$?0MHHH@?$vec@$03M$0A@@glm@@QAE@MHHH@Z	; glm::vec<4,float,0>::vec<4,float,0><float,int,int,int>
PUBLIC	??$?0HMHH@?$vec@$03M$0A@@glm@@QAE@HMHH@Z	; glm::vec<4,float,0>::vec<4,float,0><int,float,int,int>
PUBLIC	??$?0HHMH@?$vec@$03M$0A@@glm@@QAE@HHMH@Z	; glm::vec<4,float,0>::vec<4,float,0><int,int,float,int>
PUBLIC	??$?0HHHM@?$vec@$03M$01@glm@@QAE@HHHM@Z		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,float>
PUBLIC	??$?0HHHM@?$vec@$03M$00@glm@@QAE@HHHM@Z		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,float>
PUBLIC	??$?0HHHM@?$vec@$03M$0A@@glm@@QAE@HHHM@Z	; glm::vec<4,float,0>::vec<4,float,0><int,int,int,float>
PUBLIC	??$?0HHHH@?$vec@$03N$01@glm@@QAE@HHHH@Z		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,int>
PUBLIC	??$?0NHHH@?$vec@$03N$01@glm@@QAE@NHHH@Z		; glm::vec<4,double,2>::vec<4,double,2><double,int,int,int>
PUBLIC	??$?0HNHH@?$vec@$03N$01@glm@@QAE@HNHH@Z		; glm::vec<4,double,2>::vec<4,double,2><int,double,int,int>
PUBLIC	??$?0HHNH@?$vec@$03N$01@glm@@QAE@HHNH@Z		; glm::vec<4,double,2>::vec<4,double,2><int,int,double,int>
PUBLIC	??$?0HHHH@?$vec@$03N$00@glm@@QAE@HHHH@Z		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,int>
PUBLIC	??$?0NHHH@?$vec@$03N$00@glm@@QAE@NHHH@Z		; glm::vec<4,double,1>::vec<4,double,1><double,int,int,int>
PUBLIC	??$?0HNHH@?$vec@$03N$00@glm@@QAE@HNHH@Z		; glm::vec<4,double,1>::vec<4,double,1><int,double,int,int>
PUBLIC	??$?0HHNH@?$vec@$03N$00@glm@@QAE@HHNH@Z		; glm::vec<4,double,1>::vec<4,double,1><int,int,double,int>
PUBLIC	??$?0HHHH@?$vec@$03N$0A@@glm@@QAE@HHHH@Z	; glm::vec<4,double,0>::vec<4,double,0><int,int,int,int>
PUBLIC	??$?0NHHH@?$vec@$03N$0A@@glm@@QAE@NHHH@Z	; glm::vec<4,double,0>::vec<4,double,0><double,int,int,int>
PUBLIC	??$?0HNHH@?$vec@$03N$0A@@glm@@QAE@HNHH@Z	; glm::vec<4,double,0>::vec<4,double,0><int,double,int,int>
PUBLIC	??$?0HHNH@?$vec@$03N$0A@@glm@@QAE@HHNH@Z	; glm::vec<4,double,0>::vec<4,double,0><int,int,double,int>
PUBLIC	??$?0HHHN@?$vec@$03N$01@glm@@QAE@HHHN@Z		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,double>
PUBLIC	??$?0HHHN@?$vec@$03N$00@glm@@QAE@HHHN@Z		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,double>
PUBLIC	??$?0HHHN@?$vec@$03N$0A@@glm@@QAE@HHHN@Z	; glm::vec<4,double,0>::vec<4,double,0><int,int,int,double>
PUBLIC	??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z ; glm::quat_cast<float,2>
PUBLIC	??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z ; glm::quat_cast<float,1>
PUBLIC	??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z ; glm::quat_cast<float,0>
PUBLIC	??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z ; glm::quat_cast<double,2>
PUBLIC	??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z ; glm::quat_cast<double,1>
PUBLIC	??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z ; glm::quat_cast<double,0>
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@358637bd
PUBLIC	__real@3e800000
PUBLIC	__real@3eb0c6f7a0000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@bf000000
PUBLIC	__real@bfe0000000000000
PUBLIC	__xmm@00000000000000003ff0000000000000
PUBLIC	__xmm@00000000000000010000000000000001
PUBLIC	__xmm@000000003f8000000000000000000000
PUBLIC	__xmm@00000001000000010000000100000001
PUBLIC	__xmm@3f800000000000000000000000000000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@3ff00000000000000000000000000000
PUBLIC	__xmm@3ff00000000000003ff0000000000000
PUBLIC	__xmm@7fffffff7fffffff7fffffff7fffffff
PUBLIC	__xmm@7fffffffffffffff7fffffffffffffff
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	_cos:PROC
EXTRN	_sin:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__libm_sse2_cos_precise:PROC
EXTRN	__libm_sse2_sin_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@7fffffffffffffff7fffffffffffffff
CONST	SEGMENT
__xmm@7fffffffffffffff7fffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@7fffffff7fffffff7fffffff7fffffff
CONST	SEGMENT
__xmm@7fffffff7fffffff7fffffff7fffffff DB 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH
	DB	0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH, 0ffH, 0ffH, 0ffH, 07fH
CONST	ENDS
;	COMDAT __xmm@3ff00000000000003ff0000000000000
CONST	SEGMENT
__xmm@3ff00000000000003ff0000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 0f0H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, '?'
CONST	ENDS
;	COMDAT __xmm@3ff00000000000000000000000000000
CONST	SEGMENT
__xmm@3ff00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, '?'
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@3f800000000000000000000000000000
CONST	SEGMENT
__xmm@3f800000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000003f8000000000000000000000
CONST	SEGMENT
__xmm@000000003f8000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 080H, '?', 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000010000000000000001
CONST	SEGMENT
__xmm@00000000000000010000000000000001 DB 01H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000003ff0000000000000
CONST	SEGMENT
__xmm@00000000000000003ff0000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 0f0H
	DB	'?', 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3eb0c6f7a0000000
CONST	SEGMENT
__real@3eb0c6f7a0000000 DQ 03eb0c6f7a0000000r	; 1e-06
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@358637bd
CONST	SEGMENT
__real@358637bd DD 0358637bdr			; 1e-06
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@N$0A@@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$0A@@3@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@N$0A@@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$0A@@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<double,0>,double,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1
	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 21   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@N$0A@@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$0A@@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<double,0>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@N$00@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$00@3@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@N$00@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$00@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<double,1>,double,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1
	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 21   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@N$00@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$00@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<double,1>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@N$01@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$01@3@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@N$01@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$01@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<double,2>,double,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1
	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 21   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@N$01@glm@@N$0A@@detail@glm@@SANABU?$tquat@N$01@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<double,2>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$0A@@3@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$0A@@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<float,0>,float,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 21   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$0A@@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<float,0>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@M$00@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$00@3@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@M$00@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$00@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<float,1>,float,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 21   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@M$00@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$00@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<float,1>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ?call@?$compute_dot@U?$tquat@M$01@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$01@3@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$tquat@M$01@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$01@3@0@Z PROC ; glm::detail::compute_dot<glm::tquat<float,2>,float,0>::call, COMDAT

; 18   : 		{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1
	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 21   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$tquat@M$01@glm@@M$0A@@detail@glm@@SAMABU?$tquat@M$01@3@0@Z ENDP ; glm::detail::compute_dot<glm::tquat<float,2>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@N$0A@@glm@@YANABU?$tquat@N$0A@@0@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@N$0A@@glm@@YANABU?$tquat@N$0A@@0@0@Z PROC	; glm::dot<double,0>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 395  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dot@N$0A@@glm@@YANABU?$tquat@N$0A@@0@0@Z ENDP	; glm::dot<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@N$00@glm@@YANABU?$tquat@N$00@0@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@N$00@glm@@YANABU?$tquat@N$00@0@0@Z PROC		; glm::dot<double,1>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 395  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dot@N$00@glm@@YANABU?$tquat@N$00@0@0@Z ENDP		; glm::dot<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@N$01@glm@@YANABU?$tquat@N$01@0@0@Z
_TEXT	SEGMENT
tv175 = -8						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@N$01@glm@@YANABU?$tquat@N$01@0@0@Z PROC		; glm::dot<double,2>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movsd	xmm0, QWORD PTR [ecx+16]
	movsd	xmm2, QWORD PTR [ecx+24]
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+24]
	movsd	xmm1, QWORD PTR [ecx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm0, QWORD PTR [ecx]
	mulsd	xmm0, QWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm1, xmm0
	addsd	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movsd	QWORD PTR tv175[ebp], xmm2
	fld	QWORD PTR tv175[ebp]

; 395  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dot@N$01@glm@@YANABU?$tquat@N$01@0@0@Z ENDP		; glm::dot<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@0@Z PROC	; glm::dot<float,0>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 395  : 	}

	pop	ebp
	ret	0
??$dot@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@0@Z ENDP	; glm::dot<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@M$00@glm@@YAMABU?$tquat@M$00@0@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@M$00@glm@@YAMABU?$tquat@M$00@0@0@Z PROC		; glm::dot<float,1>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 395  : 	}

	pop	ebp
	ret	0
??$dot@M$00@glm@@YAMABU?$tquat@M$00@0@0@Z ENDP		; glm::dot<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$dot@M$01@glm@@YAMABU?$tquat@M$01@0@0@Z
_TEXT	SEGMENT
tv175 = 8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@M$01@glm@@YAMABU?$tquat@M$01@0@0@Z PROC		; glm::dot<float,2>, COMDAT

; 392  : 	{

	push	ebp
	mov	ebp, esp

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	movss	xmm0, DWORD PTR [ecx+8]
	movss	xmm2, DWORD PTR [ecx+12]
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+12]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [eax+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, DWORD PTR [eax]

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm1, xmm0
	addss	xmm2, xmm1

; 393  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 394  : 		return detail::compute_dot<tquat<T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);

	movss	DWORD PTR tv175[ebp], xmm2
	fld	DWORD PTR tv175[ebp]

; 395  : 	}

	pop	ebp
	ret	0
??$dot@M$01@glm@@YAMABU?$tquat@M$01@0@0@Z ENDP		; glm::dot<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z PROC	; glm::operator*<float,2>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [ecx+4]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z ENDP	; glm::operator*<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z PROC	; glm::operator*<float,1>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [ecx+4]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z ENDP	; glm::operator*<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z PROC	; glm::operator*<float,0>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [ecx+4]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edx+8]
	mulss	xmm0, DWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z PROC	; glm::operator*<double,2>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx]
	mulsd	xmm0, QWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+8], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+16]
	mulsd	xmm0, QWORD PTR [ecx+16]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z ENDP	; glm::operator*<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z PROC	; glm::operator*<double,1>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx]
	mulsd	xmm0, QWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+8], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+16]
	mulsd	xmm0, QWORD PTR [ecx+16]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z ENDP	; glm::operator*<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z PROC	; glm::operator*<double,0>, COMDAT

; 634  : 	{

	push	ebp
	mov	ebp, esp

; 635  : 		return vec<3, T, Q>(

	mov	edx, DWORD PTR _v1$[ebp]
	mov	ecx, DWORD PTR _v2$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx]
	mulsd	xmm0, QWORD PTR [ecx]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [ecx+8]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+8], xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edx+16]
	mulsd	xmm0, QWORD PTR [ecx+16]

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 636  : 			v1.x * v2.x,
; 637  : 			v1.y * v2.y,
; 638  : 			v1.z * v2.z);
; 639  : 	}

	pop	ebp
	ret	0
??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z ENDP	; glm::operator*<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@N$0A@@glm@@YANABU?$tquat@N$0A@@0@@Z
_TEXT	SEGMENT
tv205 = -8						; size = 8
_q$ = 8							; size = 4
??$length@N$0A@@glm@@YANABU?$tquat@N$0A@@0@@Z PROC	; glm::length<double,0>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	movsd	QWORD PTR tv205[esp+8], xmm0
	fld	QWORD PTR tv205[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@N$0A@@glm@@YANABU?$tquat@N$0A@@0@@Z ENDP	; glm::length<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@N$0A@$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@N$0A@$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@ABU43@0@Z PROC ; glm::detail::compute_cross<double,0,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@N$0A@$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<double,0,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02N$0A@@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$0A@@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02N$0A@@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$0A@@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,double,0>,double,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02N$0A@@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$0A@@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,double,0>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02NN$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@P6ANN@ZABU43@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_Func$ = 12						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02NN$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@P6ANN@ZABU43@@Z PROC ; glm::detail::functor1<3,double,double,0>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02NN$0A@@detail@glm@@SA?AU?$vec@$02N$0A@@3@P6ANN@ZABU43@@Z ENDP ; glm::detail::functor1<3,double,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@N$00@glm@@YANABU?$tquat@N$00@0@@Z
_TEXT	SEGMENT
tv205 = -8						; size = 8
_q$ = 8							; size = 4
??$length@N$00@glm@@YANABU?$tquat@N$00@0@@Z PROC	; glm::length<double,1>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	movsd	QWORD PTR tv205[esp+8], xmm0
	fld	QWORD PTR tv205[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@N$00@glm@@YANABU?$tquat@N$00@0@@Z ENDP	; glm::length<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@N$00$0A@@detail@glm@@SA?AU?$vec@$02N$00@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@N$00$0A@@detail@glm@@SA?AU?$vec@$02N$00@3@ABU43@0@Z PROC ; glm::detail::compute_cross<double,1,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@N$00$0A@@detail@glm@@SA?AU?$vec@$02N$00@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<double,1,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02N$00@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$00@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02N$00@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$00@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,double,1>,double,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02N$00@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$00@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,double,1>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02NN$00@detail@glm@@SA?AU?$vec@$02N$00@3@P6ANN@ZABU43@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_Func$ = 12						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02NN$00@detail@glm@@SA?AU?$vec@$02N$00@3@P6ANN@ZABU43@@Z PROC ; glm::detail::functor1<3,double,double,1>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02NN$00@detail@glm@@SA?AU?$vec@$02N$00@3@P6ANN@ZABU43@@Z ENDP ; glm::detail::functor1<3,double,double,1>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@N$01@glm@@YANABU?$tquat@N$01@0@@Z
_TEXT	SEGMENT
tv205 = -8						; size = 8
_q$ = 8							; size = 4
??$length@N$01@glm@@YANABU?$tquat@N$01@0@@Z PROC	; glm::length<double,2>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	movsd	QWORD PTR tv205[esp+8], xmm0
	fld	QWORD PTR tv205[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@N$01@glm@@YANABU?$tquat@N$01@0@@Z ENDP	; glm::length<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@N$01$0A@@detail@glm@@SA?AU?$vec@$02N$01@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@N$01$0A@@detail@glm@@SA?AU?$vec@$02N$01@3@ABU43@0@Z PROC ; glm::detail::compute_cross<double,2,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@N$01$0A@@detail@glm@@SA?AU?$vec@$02N$01@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<double,2,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02N$01@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$01@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02N$01@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$01@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,double,2>,double,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02N$01@glm@@N$0A@@detail@glm@@SANABU?$vec@$02N$01@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,double,2>,double,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02NN$01@detail@glm@@SA?AU?$vec@$02N$01@3@P6ANN@ZABU43@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_Func$ = 12						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02NN$01@detail@glm@@SA?AU?$vec@$02N$01@3@P6ANN@ZABU43@@Z PROC ; glm::detail::functor1<3,double,double,2>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02NN$01@detail@glm@@SA?AU?$vec@$02N$01@3@P6ANN@ZABU43@@Z ENDP ; glm::detail::functor1<3,double,double,2>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@@Z
_TEXT	SEGMENT
tv218 = -4						; size = 4
_q$ = 8							; size = 4
??$length@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@@Z PROC	; glm::length<float,0>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [eax+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 400  : 		return glm::sqrt(dot(q, q));

	movss	DWORD PTR tv218[esp+8], xmm0
	fld	DWORD PTR tv218[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@M$0A@@glm@@YAMABU?$tquat@M$0A@@0@@Z ENDP	; glm::length<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@M$0A@$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@M$0A@$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@ABU43@0@Z PROC ; glm::detail::compute_cross<float,0,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@M$0A@$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<float,0,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$0A@@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$0A@@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,float,0>,float,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02M$0A@@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$0A@@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,float,0>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02MM$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@P6AMM@ZABU43@@Z
_TEXT	SEGMENT
__y$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__z$ = 12						; size = 4
_Func$ = 12						; size = 4
__x$ = 16						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02MM$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@P6AMM@ZABU43@@Z PROC ; glm::detail::functor1<3,float,float,0>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [esi]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+4]
	fstp	DWORD PTR __x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+8]
	fstp	DWORD PTR __y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	DWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02MM$0A@@detail@glm@@SA?AU?$vec@$02M$0A@@3@P6AMM@ZABU43@@Z ENDP ; glm::detail::functor1<3,float,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@M$00@glm@@YAMABU?$tquat@M$00@0@@Z
_TEXT	SEGMENT
tv218 = -4						; size = 4
_q$ = 8							; size = 4
??$length@M$00@glm@@YAMABU?$tquat@M$00@0@@Z PROC	; glm::length<float,1>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [eax+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 400  : 		return glm::sqrt(dot(q, q));

	movss	DWORD PTR tv218[esp+8], xmm0
	fld	DWORD PTR tv218[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@M$00@glm@@YAMABU?$tquat@M$00@0@@Z ENDP	; glm::length<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@M$00$0A@@detail@glm@@SA?AU?$vec@$02M$00@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@M$00$0A@@detail@glm@@SA?AU?$vec@$02M$00@3@ABU43@0@Z PROC ; glm::detail::compute_cross<float,1,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@M$00$0A@@detail@glm@@SA?AU?$vec@$02M$00@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<float,1,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02M$00@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$00@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02M$00@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$00@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,float,1>,float,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02M$00@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$00@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,float,1>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02MM$00@detail@glm@@SA?AU?$vec@$02M$00@3@P6AMM@ZABU43@@Z
_TEXT	SEGMENT
__y$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__z$ = 12						; size = 4
_Func$ = 12						; size = 4
__x$ = 16						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02MM$00@detail@glm@@SA?AU?$vec@$02M$00@3@P6AMM@ZABU43@@Z PROC ; glm::detail::functor1<3,float,float,1>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [esi]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+4]
	fstp	DWORD PTR __x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+8]
	fstp	DWORD PTR __y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	DWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02MM$00@detail@glm@@SA?AU?$vec@$02M$00@3@P6AMM@ZABU43@@Z ENDP ; glm::detail::functor1<3,float,float,1>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$length@M$01@glm@@YAMABU?$tquat@M$01@0@@Z
_TEXT	SEGMENT
tv218 = -4						; size = 4
_q$ = 8							; size = 4
??$length@M$01@glm@@YAMABU?$tquat@M$01@0@@Z PROC	; glm::length<float,2>, COMDAT

; 399  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm0, DWORD PTR [eax+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [eax+4]
	movss	xmm1, DWORD PTR [eax+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 400  : 		return glm::sqrt(dot(q, q));

	movss	DWORD PTR tv218[esp+8], xmm0
	fld	DWORD PTR tv218[esp+8]

; 401  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$length@M$01@glm@@YAMABU?$tquat@M$01@0@@Z ENDP	; glm::length<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_cross@M$01$0A@@detail@glm@@SA?AU?$vec@$02M$01@3@ABU43@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?call@?$compute_cross@M$01$0A@@detail@glm@@SA?AU?$vec@$02M$01@3@ABU43@0@Z PROC ; glm::detail::compute_cross<float,2,0>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]
	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 84   : 		}

	pop	ebp
	ret	0
?call@?$compute_cross@M$01$0A@@detail@glm@@SA?AU?$vec@$02M$01@3@ABU43@0@Z ENDP ; glm::detail::compute_cross<float,2,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ?call@?$compute_dot@U?$vec@$02M$01@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$01@3@0@Z
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?call@?$compute_dot@U?$vec@$02M$01@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$01@3@0@Z PROC ; glm::detail::compute_dot<glm::vec<3,float,2>,float,0>::call, COMDAT

; 57   : 		{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _a$[ebp]
	mov	eax, DWORD PTR _b$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 60   : 		}

	pop	ebp
	ret	0
?call@?$compute_dot@U?$vec@$02M$01@glm@@M$0A@@detail@glm@@SAMABU?$vec@$02M$01@3@0@Z ENDP ; glm::detail::compute_dot<glm::vec<3,float,2>,float,0>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
;	COMDAT ?call@?$functor1@$02MM$01@detail@glm@@SA?AU?$vec@$02M$01@3@P6AMM@ZABU43@@Z
_TEXT	SEGMENT
__y$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__z$ = 12						; size = 4
_Func$ = 12						; size = 4
__x$ = 16						; size = 4
_v$ = 16						; size = 4
?call@?$functor1@$02MM$01@detail@glm@@SA?AU?$vec@$02M$01@3@P6AMM@ZABU43@@Z PROC ; glm::detail::functor1<3,float,float,2>::call, COMDAT

; 39   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [esi]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+4]
	fstp	DWORD PTR __x$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
	movss	xmm0, DWORD PTR [esi+8]
	fstp	DWORD PTR __y$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	DWORD PTR _Func$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	DWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [eax+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	pop	esi

; 41   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$functor1@$02MM$01@detail@glm@@SA?AU?$vec@$02M$01@3@P6AMM@ZABU43@@Z ENDP ; glm::detail::functor1<3,float,float,2>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$01$03N$0A@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$01$03N$0A@@0@@Z PROC ; glm::dualquat_cast<double,0>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movsd	xmm6, QWORD PTR [eax+32]
	movsd	xmm4, QWORD PTR [eax+40]
	movsd	xmm7, QWORD PTR [eax+48]
	movsd	xmm5, QWORD PTR [eax+56]
	movsd	xmm3, QWORD PTR [eax+16]
	movsd	xmm1, QWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm2, XMMWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	unpcklpd xmm6, xmm4
	unpcklpd xmm3, xmm1
	unpcklpd xmm7, xmm5
	movups	XMMWORD PTR [eax], xmm2
	movups	XMMWORD PTR [eax+32], xmm6
	movups	XMMWORD PTR [eax+16], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	pop	ebp
	ret	0
??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$01$03N$0A@@0@@Z ENDP ; glm::dualquat_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$02$03N$0A@@0@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
_real$5$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$02$03N$0A@@0@@Z PROC ; glm::dualquat_cast<double,0>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi
	mov	esi, DWORD PTR _x$[ebp]

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+72]
	movsd	xmm4, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, QWORD PTR [esi+48]
	subsd	xmm4, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN119@dualquat_c
$LN2@dualquat_c:
	comisd	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comisd	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm4, QWORD PTR [esi+32]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	addsd	xmm4, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN120@dualquat_c
$LN4@dualquat_c:
	comisd	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm3, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN121@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+64]
	movsd	xmm4, QWORD PTR [esi+72]
	addsd	xmm3, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN119@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm3, xmm1
$LN120@dualquat_c:
	mulsd	xmm4, xmm1
$LN121@dualquat_c:
	movsd	xmm2, QWORD PTR [esi+56]
	movsd	xmm6, QWORD PTR [esi+24]
	movaps	xmm5, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm5, xmm7

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movsd	QWORD PTR _real$3$[esp+36], xmm4
	movups	XMMWORD PTR _real$5$[esp+36], xmm3
	addsd	xmm5, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4
	movaps	xmm4, xmm2
	mulsd	xmm4, QWORD PTR _real$1$[esp+36]
	subsd	xmm5, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm7
	mulsd	xmm5, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3
	movaps	xmm3, xmm6
	mulsd	xmm3, QWORD PTR _real$3$[esp+36]
	addsd	xmm4, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _real$5$[esp+36]
	mulsd	xmm2, QWORD PTR _real$3$[esp+36]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+36]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm5, xmm4

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm3, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR _real$5$[esp+36]

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax+32], xmm5

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulsd	xmm3, QWORD PTR __real@3fe0000000000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, xmm0
	addsd	xmm6, xmm2
	addsd	xmm6, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+36]
	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR _real$1$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm0
	movups	XMMWORD PTR [eax+16], xmm7
	unpcklpd xmm3, xmm6
	movups	XMMWORD PTR [eax+48], xmm3

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@N$0A@@glm@@YA?AU?$tdualquat@N$0A@@0@ABU?$mat@$02$03N$0A@@0@@Z ENDP ; glm::dualquat_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$01$03N$00@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$01$03N$00@0@@Z PROC ; glm::dualquat_cast<double,1>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movsd	xmm6, QWORD PTR [eax+32]
	movsd	xmm4, QWORD PTR [eax+40]
	movsd	xmm7, QWORD PTR [eax+48]
	movsd	xmm5, QWORD PTR [eax+56]
	movsd	xmm3, QWORD PTR [eax+16]
	movsd	xmm1, QWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm2, XMMWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	unpcklpd xmm6, xmm4
	unpcklpd xmm3, xmm1
	unpcklpd xmm7, xmm5
	movups	XMMWORD PTR [eax], xmm2
	movups	XMMWORD PTR [eax+32], xmm6
	movups	XMMWORD PTR [eax+16], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	pop	ebp
	ret	0
??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$01$03N$00@0@@Z ENDP ; glm::dualquat_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$02$03N$00@0@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
_real$5$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$02$03N$00@0@@Z PROC ; glm::dualquat_cast<double,1>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi
	mov	esi, DWORD PTR _x$[ebp]

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+72]
	movsd	xmm4, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, QWORD PTR [esi+48]
	subsd	xmm4, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN119@dualquat_c
$LN2@dualquat_c:
	comisd	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comisd	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm4, QWORD PTR [esi+32]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	addsd	xmm4, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN120@dualquat_c
$LN4@dualquat_c:
	comisd	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm3, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN121@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+64]
	movsd	xmm4, QWORD PTR [esi+72]
	addsd	xmm3, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN119@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm3, xmm1
$LN120@dualquat_c:
	mulsd	xmm4, xmm1
$LN121@dualquat_c:
	movsd	xmm2, QWORD PTR [esi+56]
	movsd	xmm6, QWORD PTR [esi+24]
	movaps	xmm5, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm5, xmm7

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movsd	QWORD PTR _real$3$[esp+36], xmm4
	movups	XMMWORD PTR _real$5$[esp+36], xmm3
	addsd	xmm5, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4
	movaps	xmm4, xmm2
	mulsd	xmm4, QWORD PTR _real$1$[esp+36]
	subsd	xmm5, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm7
	mulsd	xmm5, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3
	movaps	xmm3, xmm6
	mulsd	xmm3, QWORD PTR _real$3$[esp+36]
	addsd	xmm4, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _real$5$[esp+36]
	mulsd	xmm2, QWORD PTR _real$3$[esp+36]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+36]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm5, xmm4

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm3, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR _real$5$[esp+36]

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax+32], xmm5

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulsd	xmm3, QWORD PTR __real@3fe0000000000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, xmm0
	addsd	xmm6, xmm2
	addsd	xmm6, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+36]
	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR _real$1$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm0
	movups	XMMWORD PTR [eax+16], xmm7
	unpcklpd xmm3, xmm6
	movups	XMMWORD PTR [eax+48], xmm3

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@N$00@glm@@YA?AU?$tdualquat@N$00@0@ABU?$mat@$02$03N$00@0@@Z ENDP ; glm::dualquat_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$01$03N$01@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$01$03N$01@0@@Z PROC ; glm::dualquat_cast<double,2>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movsd	xmm6, QWORD PTR [eax+32]
	movsd	xmm4, QWORD PTR [eax+40]
	movsd	xmm7, QWORD PTR [eax+48]
	movsd	xmm5, QWORD PTR [eax+56]
	movsd	xmm3, QWORD PTR [eax+16]
	movsd	xmm1, QWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm2, XMMWORD PTR [eax]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	unpcklpd xmm6, xmm4
	unpcklpd xmm3, xmm1
	unpcklpd xmm7, xmm5
	movups	XMMWORD PTR [eax], xmm2
	movups	XMMWORD PTR [eax+32], xmm6
	movups	XMMWORD PTR [eax+16], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	pop	ebp
	ret	0
??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$01$03N$01@0@@Z ENDP ; glm::dualquat_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$02$03N$01@0@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
_real$5$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$02$03N$01@0@@Z PROC ; glm::dualquat_cast<double,2>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi
	mov	esi, DWORD PTR _x$[ebp]

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+72]
	movsd	xmm4, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, QWORD PTR [esi+48]
	subsd	xmm4, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN119@dualquat_c
$LN2@dualquat_c:
	comisd	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comisd	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm4, QWORD PTR [esi+32]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	addsd	xmm4, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN120@dualquat_c
$LN4@dualquat_c:
	comisd	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm3, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN121@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm3, QWORD PTR [esi+64]
	movsd	xmm4, QWORD PTR [esi+72]
	addsd	xmm3, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN119@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm3, xmm1
$LN120@dualquat_c:
	mulsd	xmm4, xmm1
$LN121@dualquat_c:
	movsd	xmm2, QWORD PTR [esi+56]
	movsd	xmm6, QWORD PTR [esi+24]
	movaps	xmm5, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm5, xmm7

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movsd	QWORD PTR _real$3$[esp+36], xmm4
	movups	XMMWORD PTR _real$5$[esp+36], xmm3
	addsd	xmm5, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4
	movaps	xmm4, xmm2
	mulsd	xmm4, QWORD PTR _real$1$[esp+36]
	subsd	xmm5, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm7
	mulsd	xmm5, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3
	movaps	xmm3, xmm6
	mulsd	xmm3, QWORD PTR _real$3$[esp+36]
	addsd	xmm4, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _real$5$[esp+36]
	mulsd	xmm2, QWORD PTR _real$3$[esp+36]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+36]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm5, xmm4

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm3, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR _real$5$[esp+36]

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax+32], xmm5

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulsd	xmm3, QWORD PTR __real@3fe0000000000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, xmm0
	addsd	xmm6, xmm2
	addsd	xmm6, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+36]
	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR _real$1$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm6, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm0
	movups	XMMWORD PTR [eax+16], xmm7
	unpcklpd xmm3, xmm6
	movups	XMMWORD PTR [eax+48], xmm3

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@N$01@glm@@YA?AU?$tdualquat@N$01@0@ABU?$mat@$02$03N$01@0@@Z ENDP ; glm::dualquat_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$01$03M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$01$03M$0A@@0@@Z PROC ; glm::dualquat_cast<float,0>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T1[ebp], xmm0
	movups	xmm0, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+16], xmm0

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$01$03M$0A@@0@@Z ENDP ; glm::dualquat_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$02$03M$0A@@0@@Z
_TEXT	SEGMENT
_real$1$ = -36						; size = 4
_real$ = -32						; size = 16
_dual$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$02$03M$0A@@0@@Z PROC ; glm::dualquat_cast<float,0>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _x$[ebp]
	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN135@dualquat_c
$LN2@dualquat_c:
	comiss	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comiss	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN136@dualquat_c
$LN4@dualquat_c:
	comiss	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+16]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN137@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN135@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN136@dualquat_c:
	mulss	xmm5, xmm0
$LN137@dualquat_c:
	movss	xmm3, DWORD PTR [esi+28]
	movss	xmm4, DWORD PTR [esi+12]
	movss	xmm2, DWORD PTR [esi+44]
	movaps	xmm0, xmm4
	movss	DWORD PTR _real$1$[esp+40], xmm1
	mulss	xmm0, DWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	DWORD PTR _real$[esp+52], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, xmm6

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movss	DWORD PTR _real$[esp+44], xmm6
	movss	DWORD PTR _real$[esp+40], xmm5
	addss	xmm1, xmm0
	movss	DWORD PTR _real$[esp+36], xmm7
	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+36], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$[esp+36]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm7
	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+40], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$[esp+36]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _real$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax], xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulss	xmm1, DWORD PTR __real@3f000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$[esp+44], xmm1
	movss	DWORD PTR _dual$[esp+48], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _dual$[esp+36]
	movups	XMMWORD PTR [eax+16], xmm0

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$0A@@glm@@YA?AU?$tdualquat@M$0A@@0@ABU?$mat@$02$03M$0A@@0@@Z ENDP ; glm::dualquat_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$01$03M$00@0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$01$03M$00@0@@Z PROC ; glm::dualquat_cast<float,1>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T1[ebp], xmm0
	movups	xmm0, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+16], xmm0

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$01$03M$00@0@@Z ENDP ; glm::dualquat_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$02$03M$00@0@@Z
_TEXT	SEGMENT
_real$1$ = -36						; size = 4
_real$ = -32						; size = 16
_dual$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$02$03M$00@0@@Z PROC ; glm::dualquat_cast<float,1>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _x$[ebp]
	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN135@dualquat_c
$LN2@dualquat_c:
	comiss	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comiss	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN136@dualquat_c
$LN4@dualquat_c:
	comiss	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+16]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN137@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN135@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN136@dualquat_c:
	mulss	xmm5, xmm0
$LN137@dualquat_c:
	movss	xmm3, DWORD PTR [esi+28]
	movss	xmm4, DWORD PTR [esi+12]
	movss	xmm2, DWORD PTR [esi+44]
	movaps	xmm0, xmm4
	movss	DWORD PTR _real$1$[esp+40], xmm1
	mulss	xmm0, DWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	DWORD PTR _real$[esp+52], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, xmm6

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movss	DWORD PTR _real$[esp+44], xmm6
	movss	DWORD PTR _real$[esp+40], xmm5
	addss	xmm1, xmm0
	movss	DWORD PTR _real$[esp+36], xmm7
	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+36], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$[esp+36]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm7
	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+40], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$[esp+36]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _real$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax], xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulss	xmm1, DWORD PTR __real@3f000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$[esp+44], xmm1
	movss	DWORD PTR _dual$[esp+48], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _dual$[esp+36]
	movups	XMMWORD PTR [eax+16], xmm0

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$00@glm@@YA?AU?$tdualquat@M$00@0@ABU?$mat@$02$03M$00@0@@Z ENDP ; glm::dualquat_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$01$03M$01@0@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 16
$T2 = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$01$03M$01@0@@Z PROC ; glm::dualquat_cast<float,2>, COMDAT

; 299  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T1[ebp], xmm0
	movups	xmm0, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+16], xmm0

; 300  : 		return tdualquat<T, Q>(
; 301  : 			tquat<T, Q>( x[0].w, x[0].x, x[0].y, x[0].z ),
; 302  : 			tquat<T, Q>( x[1].w, x[1].x, x[1].y, x[1].z ));
; 303  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$01$03M$01@0@@Z ENDP ; glm::dualquat_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$02$03M$01@0@@Z
_TEXT	SEGMENT
_real$1$ = -36						; size = 4
_real$ = -32						; size = 16
_dual$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$02$03M$01@0@@Z PROC ; glm::dualquat_cast<float,2>, COMDAT

; 307  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 36					; 00000024H
	push	esi

; 308  : 		tquat<T, Q> real;
; 309  : 
; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _x$[ebp]
	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN2@dualquat_c

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN135@dualquat_c
$LN2@dualquat_c:
	comiss	xmm0, xmm1
	jbe	SHORT $LN4@dualquat_c
	comiss	xmm0, xmm2
	jbe	SHORT $LN4@dualquat_c

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN136@dualquat_c
$LN4@dualquat_c:
	comiss	xmm1, xmm2
	jbe	SHORT $LN6@dualquat_c

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+16]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN137@dualquat_c
$LN6@dualquat_c:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN135@dualquat_c:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN136@dualquat_c:
	mulss	xmm5, xmm0
$LN137@dualquat_c:
	movss	xmm3, DWORD PTR [esi+28]
	movss	xmm4, DWORD PTR [esi+12]
	movss	xmm2, DWORD PTR [esi+44]
	movaps	xmm0, xmm4
	movss	DWORD PTR _real$1$[esp+40], xmm1
	mulss	xmm0, DWORD PTR _real$1$[esp+40]

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	DWORD PTR _real$[esp+52], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, xmm6

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	pop	esi
	movss	DWORD PTR _real$[esp+44], xmm6
	movss	DWORD PTR _real$[esp+40], xmm5
	addss	xmm1, xmm0
	movss	DWORD PTR _real$[esp+36], xmm7
	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+36], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$[esp+36]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movaps	xmm0, xmm3
	mulss	xmm0, xmm7
	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$[esp+40], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$[esp+36]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _real$[esp+36]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2

; 70   : 		: real(r), dual(d)

	movups	XMMWORD PTR [eax], xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);
; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	mulss	xmm1, DWORD PTR __real@3f000000

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$[esp+44], xmm1
	movss	DWORD PTR _dual$[esp+48], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR _dual$[esp+36]
	movups	XMMWORD PTR [eax+16], xmm0

; 353  : 		return tdualquat<T, Q>(real, dual);
; 354  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$dualquat_cast@M$01@glm@@YA?AU?$tdualquat@M$01@0@ABU?$mat@$02$03M$01@0@@Z ENDP ; glm::dualquat_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
;	COMDAT ?call@?$compute_abs@N$00@detail@glm@@SANN@Z
_TEXT	SEGMENT
tv68 = -8						; size = 8
_x$ = 8							; size = 8
?call@?$compute_abs@N$00@detail@glm@@SANN@Z PROC	; glm::detail::compute_abs<double,1>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 78   : 			GLM_STATIC_ASSERT(
; 79   : 				std::numeric_limits<genFIType>::is_iec559 || std::numeric_limits<genFIType>::is_signed || GLM_UNRESTRICTED_GENTYPE,
; 80   : 				"'abs' only accept floating-point and integer scalar or vector inputs");
; 81   : 
; 82   : 			return x >= genFIType(0) ? x : -x;

	movsd	xmm0, QWORD PTR _x$[ebp]
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	movsd	QWORD PTR tv68[ebp], xmm0
	fld	QWORD PTR tv68[ebp]

; 83   : 			// TODO, perf comp with: *(((int *) &x) + 1) &= 0x7fffffff;
; 84   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$compute_abs@N$00@detail@glm@@SANN@Z ENDP	; glm::detail::compute_abs<double,1>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
;	COMDAT ?call@?$compute_abs@M$00@detail@glm@@SAMM@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
_x$ = 8							; size = 4
?call@?$compute_abs@M$00@detail@glm@@SAMM@Z PROC	; glm::detail::compute_abs<float,1>::call, COMDAT

; 77   : 		{

	push	ebp
	mov	ebp, esp
	push	ecx

; 78   : 			GLM_STATIC_ASSERT(
; 79   : 				std::numeric_limits<genFIType>::is_iec559 || std::numeric_limits<genFIType>::is_signed || GLM_UNRESTRICTED_GENTYPE,
; 80   : 				"'abs' only accept floating-point and integer scalar or vector inputs");
; 81   : 
; 82   : 			return x >= genFIType(0) ? x : -x;

	movss	xmm0, DWORD PTR _x$[ebp]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 83   : 			// TODO, perf comp with: *(((int *) &x) + 1) &= 0x7fffffff;
; 84   : 		}

	mov	esp, ebp
	pop	ebp
	ret	0
?call@?$compute_abs@M$00@detail@glm@@SAMM@Z ENDP	; glm::detail::compute_abs<float,1>::call
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@N$0A@@glm@@YA?AU?$mat@$03$03N$0A@@0@ABU?$tquat@N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@N$0A@@glm@@YA?AU?$mat@$03$03N$0A@@0@ABU?$tquat@N$0A@@0@@Z PROC ; glm::mat4_cast<double,0>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm3, QWORD PTR [eax]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [eax+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [eax+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm7, xmm7
	addsd	xmm5, xmm5
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm3
	movups	XMMWORD PTR [ecx+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	movups	XMMWORD PTR [ecx+64], xmm0
	unpcklpd xmm4, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm4

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@N$0A@@glm@@YA?AU?$mat@$03$03N$0A@@0@ABU?$tquat@N$0A@@0@@Z ENDP ; glm::mat4_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@N$0A@@glm@@YA?AU?$mat@$02$02N$0A@@0@ABU?$tquat@N$0A@@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -32						; size = 8
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qxz$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat3_cast@N$0A@@glm@@YA?AU?$mat@$02$02N$0A@@0@ABU?$tquat@N$0A@@0@@Z PROC ; glm::mat3_cast<double,0>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm2, QWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2
	movaps	xmm5, xmm1
	mulsd	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [eax+16]
	movaps	xmm3, xmm0
	movsd	QWORD PTR _qyy$1$[ebp], xmm5
	mulsd	xmm3, xmm2
	movaps	xmm6, xmm0
	mulsd	xmm6, xmm0
	movsd	QWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm1
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [eax+24]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulsd	xmm7, xmm2
	movaps	xmm2, xmm3
	mulsd	xmm3, xmm0
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm6
	addsd	xmm1, xmm5
	movsd	xmm5, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm6, QWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addsd	xmm1, xmm1
	addsd	xmm6, xmm6
	subsd	xmm0, xmm1
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm3, QWORD PTR _qyz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR _qxz$1$[ebp]
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, QWORD PTR _qxz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm5
	subsd	xmm0, xmm6
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm7
	addsd	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm3, xmm7
	addsd	xmm0, xmm0
	addsd	xmm3, xmm3
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm3
	addsd	xmm0, xmm0
	subsd	xmm5, xmm0
	movsd	QWORD PTR [eax+64], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@N$0A@@glm@@YA?AU?$mat@$02$02N$0A@@0@ABU?$tquat@N$0A@@0@@Z ENDP ; glm::mat3_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU10@@Z PROC ; glm::normalize<double,0>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movsd	xmm1, QWORD PTR [esi+16]
	movsd	xmm0, QWORD PTR [esi+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise

; 406  : 		T len = length(q);
; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
	comisd	xmm1, xmm0
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR [eax], xmm1
	movsd	QWORD PTR [eax+16], xmm1
	movsd	QWORD PTR [eax+24], xmm0

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	mov	ecx, eax
	divsd	xmm1, xmm0
	sub	esi, eax
	mov	edx, 2
	unpcklpd xmm1, xmm1
	npad	2
$LL16@normalize:

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	lea	ecx, DWORD PTR [ecx+16]
	movups	xmm0, XMMWORD PTR [esi+ecx-16]
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx-16], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	sub	edx, 1
	jne	SHORT $LL16@normalize

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU10@@Z ENDP ; glm::normalize<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z PROC ; glm::cross<double,0>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@0@Z ENDP ; glm::cross<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02N$0A@@glm@@YANABU?$vec@$02N$0A@@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02N$0A@@glm@@YANABU?$vec@$02N$0A@@0@0@Z PROC	; glm::dot<3,double,0>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02N$0A@@glm@@YANABU?$vec@$02N$0A@@0@0@Z ENDP	; glm::dot<3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z PROC ; glm::sin<3,double,0>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	esi

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$sin@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z ENDP ; glm::sin<3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z PROC ; glm::cos<3,double,0>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	esi

; 56   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$cos@$02N$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@@Z ENDP ; glm::cos<3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 8
??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@N@Z PROC	; glm::operator*<double,0>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movsd	xmm1, QWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	unpcklpd xmm1, xmm1
	movups	xmm0, XMMWORD PTR [ecx]
	mulpd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movups	XMMWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [ecx+16]
	mulsd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DN$0A@@glm@@YA?AU?$vec@$02N$0A@@0@ABU10@N@Z ENDP	; glm::operator*<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z PROC ; glm::quat_cast<double,0>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];
; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];
; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];
; 659  : 
; 660  : 		int biggestIndex = 0;

	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR _m$[ebp]
	movsd	xmm0, QWORD PTR [edi+64]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm4, xmm0
	movsd	xmm2, QWORD PTR [edi+32]
	subsd	xmm4, xmm1
	movaps	xmm5, xmm1
	movaps	xmm3, xmm2
	subsd	xmm5, xmm2
	subsd	xmm3, xmm1
	subsd	xmm4, xmm2
	addsd	xmm2, xmm1
	subsd	xmm5, xmm0
	subsd	xmm3, xmm0
	addsd	xmm2, xmm0

; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm5, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm5

; 665  : 			biggestIndex = 1;

	mov	ebx, 1
$LN4@quat_cast:

; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm3, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm3

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 676  : 		}
; 677  : 
; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movsd	xmm1, QWORD PTR __real@3fd0000000000000
	movaps	xmm2, xmm0
	mulsd	xmm2, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN170@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subsd	xmm0, QWORD PTR [edi+56]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+24], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	addsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]
	subsd	xmm0, QWORD PTR [edi+56]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+48]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+16]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN170@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z ENDP ; glm::quat_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$03$03N$0A@@0@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$03$03N$0A@@0@@Z PROC ; glm::quat_cast<double,0>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T1[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T1[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T1[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T1[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T1[ebp+48], xmm2
	movq	QWORD PTR $T1[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z ; glm::quat_cast<double,0>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$03$03N$0A@@0@@Z ENDP ; glm::quat_cast<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@N$00@glm@@YA?AU?$mat@$03$03N$00@0@ABU?$tquat@N$00@0@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@N$00@glm@@YA?AU?$mat@$03$03N$00@0@ABU?$tquat@N$00@0@@Z PROC ; glm::mat4_cast<double,1>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm3, QWORD PTR [eax]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [eax+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [eax+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm7, xmm7
	addsd	xmm5, xmm5
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm3
	movups	XMMWORD PTR [ecx+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	movups	XMMWORD PTR [ecx+64], xmm0
	unpcklpd xmm4, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm4

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@N$00@glm@@YA?AU?$mat@$03$03N$00@0@ABU?$tquat@N$00@0@@Z ENDP ; glm::mat4_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@N$00@glm@@YA?AU?$mat@$02$02N$00@0@ABU?$tquat@N$00@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -32						; size = 8
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qxz$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat3_cast@N$00@glm@@YA?AU?$mat@$02$02N$00@0@ABU?$tquat@N$00@0@@Z PROC ; glm::mat3_cast<double,1>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm2, QWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2
	movaps	xmm5, xmm1
	mulsd	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [eax+16]
	movaps	xmm3, xmm0
	movsd	QWORD PTR _qyy$1$[ebp], xmm5
	mulsd	xmm3, xmm2
	movaps	xmm6, xmm0
	mulsd	xmm6, xmm0
	movsd	QWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm1
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [eax+24]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulsd	xmm7, xmm2
	movaps	xmm2, xmm3
	mulsd	xmm3, xmm0
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm6
	addsd	xmm1, xmm5
	movsd	xmm5, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm6, QWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addsd	xmm1, xmm1
	addsd	xmm6, xmm6
	subsd	xmm0, xmm1
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm3, QWORD PTR _qyz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR _qxz$1$[ebp]
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, QWORD PTR _qxz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm5
	subsd	xmm0, xmm6
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm7
	addsd	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm3, xmm7
	addsd	xmm0, xmm0
	addsd	xmm3, xmm3
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm3
	addsd	xmm0, xmm0
	subsd	xmm5, xmm0
	movsd	QWORD PTR [eax+64], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@N$00@glm@@YA?AU?$mat@$02$02N$00@0@ABU?$tquat@N$00@0@@Z ENDP ; glm::mat3_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@N$00@glm@@YA?AU?$tquat@N$00@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@N$00@glm@@YA?AU?$tquat@N$00@0@ABU10@@Z PROC ; glm::normalize<double,1>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movsd	xmm1, QWORD PTR [esi+16]
	movsd	xmm0, QWORD PTR [esi+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise

; 406  : 		T len = length(q);
; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
	comisd	xmm1, xmm0
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR [eax], xmm1
	movsd	QWORD PTR [eax+16], xmm1
	movsd	QWORD PTR [eax+24], xmm0

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	mov	ecx, eax
	divsd	xmm1, xmm0
	sub	esi, eax
	mov	edx, 2
	unpcklpd xmm1, xmm1
	npad	2
$LL16@normalize:

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	lea	ecx, DWORD PTR [ecx+16]
	movups	xmm0, XMMWORD PTR [esi+ecx-16]
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx-16], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	sub	edx, 1
	jne	SHORT $LL16@normalize

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@N$00@glm@@YA?AU?$tquat@N$00@0@ABU10@@Z ENDP ; glm::normalize<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z PROC	; glm::cross<double,1>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@0@Z ENDP	; glm::cross<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02N$00@glm@@YANABU?$vec@$02N$00@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02N$00@glm@@YANABU?$vec@$02N$00@0@0@Z PROC	; glm::dot<3,double,1>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02N$00@glm@@YANABU?$vec@$02N$00@0@0@Z ENDP	; glm::dot<3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z PROC	; glm::sin<3,double,1>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	esi

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$sin@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z ENDP	; glm::sin<3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z PROC	; glm::cos<3,double,1>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	esi

; 56   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$cos@$02N$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@@Z ENDP	; glm::cos<3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 8
??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@N@Z PROC	; glm::operator*<double,1>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movsd	xmm1, QWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	unpcklpd xmm1, xmm1
	movups	xmm0, XMMWORD PTR [ecx]
	mulpd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movups	XMMWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [ecx+16]
	mulsd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DN$00@glm@@YA?AU?$vec@$02N$00@0@ABU10@N@Z ENDP	; glm::operator*<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z PROC ; glm::quat_cast<double,1>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];
; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];
; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];
; 659  : 
; 660  : 		int biggestIndex = 0;

	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR _m$[ebp]
	movsd	xmm0, QWORD PTR [edi+64]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm4, xmm0
	movsd	xmm2, QWORD PTR [edi+32]
	subsd	xmm4, xmm1
	movaps	xmm5, xmm1
	movaps	xmm3, xmm2
	subsd	xmm5, xmm2
	subsd	xmm3, xmm1
	subsd	xmm4, xmm2
	addsd	xmm2, xmm1
	subsd	xmm5, xmm0
	subsd	xmm3, xmm0
	addsd	xmm2, xmm0

; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm5, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm5

; 665  : 			biggestIndex = 1;

	mov	ebx, 1
$LN4@quat_cast:

; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm3, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm3

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 676  : 		}
; 677  : 
; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movsd	xmm1, QWORD PTR __real@3fd0000000000000
	movaps	xmm2, xmm0
	mulsd	xmm2, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN170@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subsd	xmm0, QWORD PTR [edi+56]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+24], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	addsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]
	subsd	xmm0, QWORD PTR [edi+56]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+48]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+16]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN170@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z ENDP ; glm::quat_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$03$03N$00@0@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$03$03N$00@0@@Z PROC ; glm::quat_cast<double,1>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T1[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T1[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T1[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T1[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T1[ebp+48], xmm2
	movq	QWORD PTR $T1[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z ; glm::quat_cast<double,1>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$03$03N$00@0@@Z ENDP ; glm::quat_cast<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@N$01@glm@@YA?AU?$mat@$03$03N$01@0@ABU?$tquat@N$01@0@@Z
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@N$01@glm@@YA?AU?$mat@$03$03N$01@0@ABU?$tquat@N$01@0@@Z PROC ; glm::mat4_cast<double,2>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [eax+8]
	movsd	xmm3, QWORD PTR [eax]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [eax+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [eax+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm7, xmm7
	addsd	xmm5, xmm5
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm3
	movups	XMMWORD PTR [ecx+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	movups	XMMWORD PTR [ecx+64], xmm0
	unpcklpd xmm4, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm4

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@N$01@glm@@YA?AU?$mat@$03$03N$01@0@ABU?$tquat@N$01@0@@Z ENDP ; glm::mat4_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@N$01@glm@@YA?AU?$mat@$02$02N$01@0@ABU?$tquat@N$01@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -32						; size = 8
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qxz$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat3_cast@N$01@glm@@YA?AU?$mat@$02$02N$01@0@ABU?$tquat@N$01@0@@Z PROC ; glm::mat3_cast<double,2>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movsd	xmm2, QWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2
	movaps	xmm5, xmm1
	mulsd	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [eax+16]
	movaps	xmm3, xmm0
	movsd	QWORD PTR _qyy$1$[ebp], xmm5
	mulsd	xmm3, xmm2
	movaps	xmm6, xmm0
	mulsd	xmm6, xmm0
	movsd	QWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm1
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [eax+24]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulsd	xmm7, xmm2
	movaps	xmm2, xmm3
	mulsd	xmm3, xmm0
	mulsd	xmm2, xmm1
	movaps	xmm1, xmm6
	addsd	xmm1, xmm5
	movsd	xmm5, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm6, QWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addsd	xmm1, xmm1
	addsd	xmm6, xmm6
	subsd	xmm0, xmm1
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm3, QWORD PTR _qyz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR _qxz$1$[ebp]
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, QWORD PTR _qxz$1$[ebp]
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm5
	subsd	xmm0, xmm6
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm7
	addsd	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm3, xmm7
	addsd	xmm0, xmm0
	addsd	xmm3, xmm3
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm3
	addsd	xmm0, xmm0
	subsd	xmm5, xmm0
	movsd	QWORD PTR [eax+64], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@N$01@glm@@YA?AU?$mat@$02$02N$01@0@ABU?$tquat@N$01@0@@Z ENDP ; glm::mat3_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@N$01@glm@@YA?AU?$tquat@N$01@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@N$01@glm@@YA?AU?$tquat@N$01@0@ABU10@@Z PROC ; glm::normalize<double,2>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movsd	xmm3, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movsd	xmm1, QWORD PTR [esi+16]
	movsd	xmm0, QWORD PTR [esi+24]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm1
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm3
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise

; 406  : 		T len = length(q);
; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
	comisd	xmm1, xmm0
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR [eax], xmm1
	movsd	QWORD PTR [eax+16], xmm1
	movsd	QWORD PTR [eax+24], xmm0

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	mov	ecx, eax
	divsd	xmm1, xmm0
	sub	esi, eax
	mov	edx, 2
	unpcklpd xmm1, xmm1
	npad	2
$LL16@normalize:

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	lea	ecx, DWORD PTR [ecx+16]
	movups	xmm0, XMMWORD PTR [esi+ecx-16]
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx-16], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	sub	edx, 1
	jne	SHORT $LL16@normalize

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@N$01@glm@@YA?AU?$tquat@N$01@0@ABU10@@Z ENDP ; glm::normalize<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z PROC	; glm::cross<double,2>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [eax+16]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm0, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [eax]
	movsd	xmm2, QWORD PTR [edx]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR [eax+16]
	mulsd	xmm2, QWORD PTR [eax+8]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR [edx+16]
	mulsd	xmm3, QWORD PTR [edx+8]
	subsd	xmm1, xmm0
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [ecx+8], xmm1
	movsd	QWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@0@Z ENDP	; glm::cross<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02N$01@glm@@YANABU?$vec@$02N$01@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02N$01@glm@@YANABU?$vec@$02N$01@0@0@Z PROC	; glm::dot<3,double,2>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	QWORD PTR [ecx+8]
	fmul	QWORD PTR [eax+8]
	fld	QWORD PTR [ecx]
	fmul	QWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	QWORD PTR [ecx+16]
	fmul	QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02N$01@glm@@YANABU?$vec@$02N$01@0@0@Z ENDP	; glm::dot<3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z PROC	; glm::sin<3,double,2>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	esi

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$sin@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z ENDP	; glm::sin<3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z
_TEXT	SEGMENT
__z$ = -24						; size = 8
__y$ = -16						; size = 8
__x$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z PROC	; glm::cos<3,double,2>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	mov	esi, DWORD PTR _v$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [esi]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+8]
	fstp	QWORD PTR __x$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR [esi+16]
	fstp	QWORD PTR __y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	fstp	QWORD PTR __z$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [eax+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	esi

; 56   : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$cos@$02N$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@@Z ENDP	; glm::cos<3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@N@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 8
??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@N@Z PROC	; glm::operator*<double,2>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movsd	xmm1, QWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	unpcklpd xmm1, xmm1
	movups	xmm0, XMMWORD PTR [ecx]
	mulpd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movups	XMMWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [ecx+16]
	mulsd	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR [eax+16], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DN$01@glm@@YA?AU?$vec@$02N$01@0@ABU10@N@Z ENDP	; glm::operator*<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z PROC ; glm::quat_cast<double,2>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];
; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];
; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];
; 659  : 
; 660  : 		int biggestIndex = 0;

	xor	ebx, ebx
	push	edi
	mov	edi, DWORD PTR _m$[ebp]
	movsd	xmm0, QWORD PTR [edi+64]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm4, xmm0
	movsd	xmm2, QWORD PTR [edi+32]
	subsd	xmm4, xmm1
	movaps	xmm5, xmm1
	movaps	xmm3, xmm2
	subsd	xmm5, xmm2
	subsd	xmm3, xmm1
	subsd	xmm4, xmm2
	addsd	xmm2, xmm1
	subsd	xmm5, xmm0
	subsd	xmm3, xmm0
	addsd	xmm2, xmm0

; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm5, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm5

; 665  : 			biggestIndex = 1;

	mov	ebx, 1
$LN4@quat_cast:

; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm3, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm3

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comisd	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 676  : 		}
; 677  : 
; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movsd	xmm1, QWORD PTR __real@3fd0000000000000
	movaps	xmm2, xmm0
	mulsd	xmm2, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN170@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subsd	xmm0, QWORD PTR [edi+56]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+24], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	addsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movsd	xmm0, QWORD PTR [edi+40]
	subsd	xmm0, QWORD PTR [edi+56]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movsd	xmm0, QWORD PTR [edi+48]
	subsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+48]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addsd	xmm0, QWORD PTR [edi+16]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+16], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+56]
	addsd	xmm0, QWORD PTR [edi+40]
	mulsd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [esi+8], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movsd	xmm0, QWORD PTR [edi+8]
	subsd	xmm0, QWORD PTR [edi+24]
	mulsd	xmm0, xmm1

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	movsd	QWORD PTR [esi+24], xmm0
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN170@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z ENDP ; glm::quat_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$03$03N$01@0@@Z
_TEXT	SEGMENT
$T1 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$03$03N$01@0@@Z PROC ; glm::quat_cast<double,2>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T1[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T1[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T1[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T1[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T1[ebp+48], xmm2
	movq	QWORD PTR $T1[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z ; glm::quat_cast<double,2>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$03$03N$01@0@@Z ENDP ; glm::quat_cast<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@ABU?$tquat@M$0A@@0@@Z
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@ABU?$tquat@M$0A@@0@@Z PROC ; glm::mat4_cast<float,0>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [eax+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	movss	xmm3, DWORD PTR [eax]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [eax+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@M$0A@@glm@@YA?AU?$mat@$03$03M$0A@@0@ABU?$tquat@M$0A@@0@@Z ENDP ; glm::mat4_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@ABU?$tquat@M$0A@@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -12						; size = 4
_qyz$1$ = -8						; size = 4
_qxx$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_qxz$1$ = 12						; size = 4
_q$ = 12						; size = 4
??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@ABU?$tquat@M$0A@@0@@Z PROC ; glm::mat3_cast<float,0>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm2, DWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [eax+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	movaps	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm5, xmm1
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm0
	mulss	xmm4, xmm2
	mulss	xmm3, xmm2
	movaps	xmm6, xmm0
	mulss	xmm6, xmm0
	movss	DWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulss	xmm3, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm5
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [eax+12]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulss	xmm7, xmm2
	movaps	xmm2, xmm3
	mulss	xmm3, xmm0
	mulss	xmm2, xmm1
	movaps	xmm1, xmm6
	addss	xmm1, xmm5
	movss	xmm5, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm6, DWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addss	xmm1, xmm1
	addss	xmm6, xmm6
	subss	xmm0, xmm1
	movss	DWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm3, DWORD PTR _qyz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR _qxz$1$[ebp]
	subss	xmm0, xmm2
	movss	DWORD PTR [eax+12], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, DWORD PTR _qxz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm5
	subss	xmm0, xmm6
	movss	DWORD PTR [eax+24], xmm2
	movss	DWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm7
	addss	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm3, xmm7
	addss	xmm0, xmm0
	addss	xmm3, xmm3
	movss	DWORD PTR [eax+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [eax+28], xmm3
	addss	xmm0, xmm0
	subss	xmm5, xmm0
	movss	DWORD PTR [eax+32], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@M$0A@@glm@@YA?AU?$mat@$02$02M$0A@@0@ABU?$tquat@M$0A@@0@@Z ENDP ; glm::mat3_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU10@@Z PROC ; glm::normalize<float,0>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movss	xmm3, DWORD PTR [esi]
	movss	xmm2, DWORD PTR [esi+4]
	movss	xmm0, DWORD PTR [esi+8]
	movss	xmm1, DWORD PTR [esi+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm2
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm2

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR [esi]

; 411  : 	}

	pop	esi
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [eax], xmm1

; 411  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU10@@Z ENDP ; glm::normalize<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z PROC ; glm::cross<float,0>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@0@Z ENDP ; glm::cross<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02M$0A@@glm@@YAMABU?$vec@$02M$0A@@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02M$0A@@glm@@YAMABU?$vec@$02M$0A@@0@0@Z PROC	; glm::dot<3,float,0>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02M$0A@@glm@@YAMABU?$vec@$02M$0A@@0@0@Z ENDP	; glm::dot<3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z PROC ; glm::sin<3,float,0>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 45   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	edi
	pop	esi

; 47   : 	}

	pop	ebp
	ret	0
??$sin@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z ENDP ; glm::sin<3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z PROC ; glm::cos<3,float,0>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 54   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	edi
	pop	esi

; 56   : 	}

	pop	ebp
	ret	0
??$cos@$02M$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@@Z ENDP ; glm::cos<3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 4
??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@M@Z PROC	; glm::operator*<float,0>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DM$0A@@glm@@YA?AU?$vec@$02M$0A@@0@ABU10@M@Z ENDP	; glm::operator*<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z PROC ; glm::quat_cast<float,0>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];

	mov	edi, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edi+32]
	movss	xmm1, DWORD PTR [edi]

; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];

	movaps	xmm4, xmm0
	movss	xmm2, DWORD PTR [edi+16]
	subss	xmm4, xmm1
	movaps	xmm3, xmm1
	movaps	xmm5, xmm2
	subss	xmm3, xmm2
	subss	xmm5, xmm1
	subss	xmm4, xmm2

; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];

	addss	xmm2, xmm1
	subss	xmm3, xmm0
	subss	xmm5, xmm0
	addss	xmm2, xmm0

; 659  : 
; 660  : 		int biggestIndex = 0;
; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm3, xmm2
	movaps	xmm0, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm3
$LN4@quat_cast:

; 665  : 			biggestIndex = 1;
; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	xor	ebx, ebx
	comiss	xmm3, xmm0
	seta	bl
	comiss	xmm5, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm5

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addss	xmm2, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movss	xmm1, DWORD PTR __real@3e800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	mulss	xmm2, DWORD PTR __real@3f000000

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	divss	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN173@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+20]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subss	xmm0, DWORD PTR [edi+28]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	addss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+20]
	subss	xmm0, DWORD PTR [edi+28]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN173@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z ENDP ; glm::quat_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$03$03M$0A@@0@@Z
_TEXT	SEGMENT
$T1 = -52						; size = 12
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$03$03M$0A@@0@@Z PROC ; glm::quat_cast<float,0>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	movq	QWORD PTR $T4[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T4[ebp+8], eax

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR $T4[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T4[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T1[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T4[ebp+24], xmm2
	mov	DWORD PTR $T4[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z ; glm::quat_cast<float,0>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$03$03M$0A@@0@@Z ENDP ; glm::quat_cast<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@M$00@glm@@YA?AU?$mat@$03$03M$00@0@ABU?$tquat@M$00@0@@Z
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@M$00@glm@@YA?AU?$mat@$03$03M$00@0@ABU?$tquat@M$00@0@@Z PROC ; glm::mat4_cast<float,1>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [eax+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	movss	xmm3, DWORD PTR [eax]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [eax+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@M$00@glm@@YA?AU?$mat@$03$03M$00@0@ABU?$tquat@M$00@0@@Z ENDP ; glm::mat4_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@M$00@glm@@YA?AU?$mat@$02$02M$00@0@ABU?$tquat@M$00@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -12						; size = 4
_qyz$1$ = -8						; size = 4
_qxx$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_qxz$1$ = 12						; size = 4
_q$ = 12						; size = 4
??$mat3_cast@M$00@glm@@YA?AU?$mat@$02$02M$00@0@ABU?$tquat@M$00@0@@Z PROC ; glm::mat3_cast<float,1>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm2, DWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [eax+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	movaps	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm5, xmm1
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm0
	mulss	xmm4, xmm2
	mulss	xmm3, xmm2
	movaps	xmm6, xmm0
	mulss	xmm6, xmm0
	movss	DWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulss	xmm3, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm5
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [eax+12]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulss	xmm7, xmm2
	movaps	xmm2, xmm3
	mulss	xmm3, xmm0
	mulss	xmm2, xmm1
	movaps	xmm1, xmm6
	addss	xmm1, xmm5
	movss	xmm5, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm6, DWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addss	xmm1, xmm1
	addss	xmm6, xmm6
	subss	xmm0, xmm1
	movss	DWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm3, DWORD PTR _qyz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR _qxz$1$[ebp]
	subss	xmm0, xmm2
	movss	DWORD PTR [eax+12], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, DWORD PTR _qxz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm5
	subss	xmm0, xmm6
	movss	DWORD PTR [eax+24], xmm2
	movss	DWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm7
	addss	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm3, xmm7
	addss	xmm0, xmm0
	addss	xmm3, xmm3
	movss	DWORD PTR [eax+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [eax+28], xmm3
	addss	xmm0, xmm0
	subss	xmm5, xmm0
	movss	DWORD PTR [eax+32], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@M$00@glm@@YA?AU?$mat@$02$02M$00@0@ABU?$tquat@M$00@0@@Z ENDP ; glm::mat3_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@M$00@glm@@YA?AU?$tquat@M$00@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@M$00@glm@@YA?AU?$tquat@M$00@0@ABU10@@Z PROC ; glm::normalize<float,1>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movss	xmm3, DWORD PTR [esi]
	movss	xmm2, DWORD PTR [esi+4]
	movss	xmm0, DWORD PTR [esi+8]
	movss	xmm1, DWORD PTR [esi+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm2
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm2

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR [esi]

; 411  : 	}

	pop	esi
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [eax], xmm1

; 411  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@M$00@glm@@YA?AU?$tquat@M$00@0@ABU10@@Z ENDP ; glm::normalize<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z PROC	; glm::cross<float,1>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@0@Z ENDP	; glm::cross<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02M$00@glm@@YAMABU?$vec@$02M$00@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02M$00@glm@@YAMABU?$vec@$02M$00@0@0@Z PROC	; glm::dot<3,float,1>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02M$00@glm@@YAMABU?$vec@$02M$00@0@0@Z ENDP	; glm::dot<3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z PROC	; glm::sin<3,float,1>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 45   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	edi
	pop	esi

; 47   : 	}

	pop	ebp
	ret	0
??$sin@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z ENDP	; glm::sin<3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z PROC	; glm::cos<3,float,1>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 54   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	edi
	pop	esi

; 56   : 	}

	pop	ebp
	ret	0
??$cos@$02M$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@@Z ENDP	; glm::cos<3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 4
??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@M@Z PROC	; glm::operator*<float,1>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DM$00@glm@@YA?AU?$vec@$02M$00@0@ABU10@M@Z ENDP	; glm::operator*<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z PROC ; glm::quat_cast<float,1>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];

	mov	edi, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edi+32]
	movss	xmm1, DWORD PTR [edi]

; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];

	movaps	xmm4, xmm0
	movss	xmm2, DWORD PTR [edi+16]
	subss	xmm4, xmm1
	movaps	xmm3, xmm1
	movaps	xmm5, xmm2
	subss	xmm3, xmm2
	subss	xmm5, xmm1
	subss	xmm4, xmm2

; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];

	addss	xmm2, xmm1
	subss	xmm3, xmm0
	subss	xmm5, xmm0
	addss	xmm2, xmm0

; 659  : 
; 660  : 		int biggestIndex = 0;
; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm3, xmm2
	movaps	xmm0, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm3
$LN4@quat_cast:

; 665  : 			biggestIndex = 1;
; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	xor	ebx, ebx
	comiss	xmm3, xmm0
	seta	bl
	comiss	xmm5, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm5

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addss	xmm2, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movss	xmm1, DWORD PTR __real@3e800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	mulss	xmm2, DWORD PTR __real@3f000000

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	divss	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN173@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+20]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subss	xmm0, DWORD PTR [edi+28]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	addss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+20]
	subss	xmm0, DWORD PTR [edi+28]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN173@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z ENDP ; glm::quat_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$03$03M$00@0@@Z
_TEXT	SEGMENT
$T1 = -52						; size = 12
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$03$03M$00@0@@Z PROC ; glm::quat_cast<float,1>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	movq	QWORD PTR $T4[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T4[ebp+8], eax

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR $T4[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T4[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T1[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T4[ebp+24], xmm2
	mov	DWORD PTR $T4[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z ; glm::quat_cast<float,1>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$03$03M$00@0@@Z ENDP ; glm::quat_cast<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat4_cast@M$01@glm@@YA?AU?$mat@$03$03M$01@0@ABU?$tquat@M$01@0@@Z
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$mat4_cast@M$01@glm@@YA?AU?$mat@$03$03M$01@0@ABU?$tquat@M$01@0@@Z PROC ; glm::mat4_cast<float,2>, COMDAT

; 648  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]

; 648  : 	{

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [eax+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [eax+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1
	movss	xmm3, DWORD PTR [eax]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [eax+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 649  : 		return mat<4, 4, T, Q>(mat3_cast(q));

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 650  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat4_cast@M$01@glm@@YA?AU?$mat@$03$03M$01@0@ABU?$tquat@M$01@0@@Z ENDP ; glm::mat4_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$mat3_cast@M$01@glm@@YA?AU?$mat@$02$02M$01@0@ABU?$tquat@M$01@0@@Z
_TEXT	SEGMENT
_qyy$1$ = -12						; size = 4
_qyz$1$ = -8						; size = 4
_qxx$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_qxz$1$ = 12						; size = 4
_q$ = 12						; size = 4
??$mat3_cast@M$01@glm@@YA?AU?$mat@$02$02M$01@0@ABU?$tquat@M$01@0@@Z PROC ; glm::mat3_cast<float,2>, COMDAT

; 620  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 621  : 		mat<3, 3, T, Q> Result(T(1));
; 622  : 		T qxx(q.x * q.x);

	mov	eax, DWORD PTR _q$[ebp]
	movss	xmm2, DWORD PTR [eax]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [eax+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2
	movaps	xmm5, xmm1

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm5, xmm1
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movaps	xmm3, xmm0
	mulss	xmm4, xmm2
	mulss	xmm3, xmm2
	movaps	xmm6, xmm0
	mulss	xmm6, xmm0
	movss	DWORD PTR _qxz$1$[ebp], xmm3

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	mulss	xmm3, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm5
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [eax+12]

; 629  : 		T qwy(q.w * q.y);
; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm7, xmm3
	mulss	xmm7, xmm2
	movaps	xmm2, xmm3
	mulss	xmm3, xmm0
	mulss	xmm2, xmm1
	movaps	xmm1, xmm6
	addss	xmm1, xmm5
	movss	xmm5, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm6, DWORD PTR _qxx$1$[ebp]
	movaps	xmm0, xmm5
	addss	xmm1, xmm1
	addss	xmm6, xmm6
	subss	xmm0, xmm1
	movss	DWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm3, DWORD PTR _qyz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [eax+4], xmm0
	movss	xmm0, DWORD PTR _qxz$1$[ebp]
	subss	xmm0, xmm2
	movss	DWORD PTR [eax+12], xmm4

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, DWORD PTR _qxz$1$[ebp]
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm5
	subss	xmm0, xmm6
	movss	DWORD PTR [eax+24], xmm2
	movss	DWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm7
	addss	xmm0, xmm3

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm3, xmm7
	addss	xmm0, xmm0
	addss	xmm3, xmm3
	movss	DWORD PTR [eax+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [eax+28], xmm3
	addss	xmm0, xmm0
	subss	xmm5, xmm0
	movss	DWORD PTR [eax+32], xmm5

; 643  : 		return Result;
; 644  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$mat3_cast@M$01@glm@@YA?AU?$mat@$02$02M$01@0@ABU?$tquat@M$01@0@@Z ENDP ; glm::mat3_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$normalize@M$01@glm@@YA?AU?$tquat@M$01@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_q$ = 12						; size = 4
??$normalize@M$01@glm@@YA?AU?$tquat@M$01@0@ABU10@@Z PROC ; glm::normalize<float,2>, COMDAT

; 405  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	esi

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mov	esi, DWORD PTR _q$[ebp]
	movss	xmm3, DWORD PTR [esi]
	movss	xmm2, DWORD PTR [esi+4]
	movss	xmm0, DWORD PTR [esi+8]
	movss	xmm1, DWORD PTR [esi+12]
	mulss	xmm1, xmm1
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm3
	addss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm2
	jb	SHORT $LN2@normalize

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [eax], 0
	mov	DWORD PTR [eax+4], 0
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 1065353216		; 3f800000H

; 411  : 	}

	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@normalize:

; 408  : 			return tquat<T, Q>(static_cast<T>(1), static_cast<T>(0), static_cast<T>(0), static_cast<T>(0));
; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm1, DWORD PTR __real@3f800000
	divss	xmm1, xmm2

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR [esi]

; 411  : 	}

	pop	esi
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [eax], xmm1

; 411  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$normalize@M$01@glm@@YA?AU?$tquat@M$01@0@ABU10@@Z ENDP ; glm::normalize<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$cross@M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
??$cross@M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z PROC	; glm::cross<float,2>, COMDAT

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 80   : 			return vec<3, T, Q>(

	mov	eax, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [eax+8]
	movss	xmm0, DWORD PTR [eax+4]
	mulss	xmm1, DWORD PTR [edx+4]
	mulss	xmm0, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [eax]
	movss	xmm2, DWORD PTR [edx]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR [eax+8]
	mulss	xmm2, DWORD PTR [eax+4]

; 181  : 		return detail::compute_cross<T, Q, detail::is_aligned<Q>::value>::call(x, y);

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR [edx+8]
	mulss	xmm3, DWORD PTR [edx+4]
	subss	xmm1, xmm0
	subss	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [ecx+4], xmm1
	movss	DWORD PTR [ecx+8], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 182  : 	}

	pop	ebp
	ret	0
??$cross@M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@0@Z ENDP	; glm::cross<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
;	COMDAT ??$dot@$02M$01@glm@@YAMABU?$vec@$02M$01@0@0@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??$dot@$02M$01@glm@@YAMABU?$vec@$02M$01@0@0@Z PROC	; glm::dot<3,float,2>, COMDAT

; 172  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	fld	DWORD PTR [ecx+4]
	fmul	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx]
	fmul	DWORD PTR [eax]

; 39   : 		: x(_x), y(_y), z(_z)

	faddp	ST(1), ST(0)

; 635  : 		return vec<3, T, Q>(

	fld	DWORD PTR [ecx+8]
	fmul	DWORD PTR [eax+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	faddp	ST(1), ST(0)

; 173  : 		GLM_STATIC_ASSERT(std::numeric_limits<T>::is_iec559, "'dot' accepts only floating-point inputs");
; 174  : 		return detail::compute_dot<vec<L, T, Q>, T, detail::is_aligned<Q>::value>::call(x, y);
; 175  : 	}

	pop	ebp
	ret	0
??$dot@$02M$01@glm@@YAMABU?$vec@$02M$01@0@0@Z ENDP	; glm::dot<3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$sin@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$sin@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z PROC	; glm::sin<3,float,2>, COMDAT

; 45   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 45   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 46   : 		return detail::functor1<L, T, T, Q>::call(sin, v);

	pop	edi
	pop	esi

; 47   : 	}

	pop	ebp
	ret	0
??$sin@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z ENDP	; glm::sin<3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl
;	COMDAT ??$cos@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??$cos@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z PROC	; glm::cos<3,float,2>, COMDAT

; 54   : 	{

	push	ebp
	mov	ebp, esp
	push	esi
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	mov	esi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 54   : 	{

	push	edi
	movss	xmm0, DWORD PTR [esi]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi], xmm0
	movss	xmm0, DWORD PTR [esi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+4], xmm0
	movss	xmm0, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	mov	eax, edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [edi+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_trigonometric.inl

; 55   : 		return detail::functor1<L, T, T, Q>::call(cos, v);

	pop	edi
	pop	esi

; 56   : 	}

	pop	ebp
	ret	0
??$cos@$02M$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@@Z ENDP	; glm::cos<3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
_scalar$ = 16						; size = 4
??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@M@Z PROC	; glm::operator*<float,2>, COMDAT

; 598  : 	{

	push	ebp
	mov	ebp, esp

; 599  : 		return vec<3, T, Q>(

	mov	ecx, DWORD PTR _v$[ebp]
	movss	xmm1, DWORD PTR _scalar$[ebp]

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+4]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+4], xmm0

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [ecx+8]
	mulss	xmm0, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR [eax+8], xmm0

; 600  : 			v.x * scalar,
; 601  : 			v.y * scalar,
; 602  : 			v.z * scalar);
; 603  : 	}

	pop	ebp
	ret	0
??$?DM$01@glm@@YA?AU?$vec@$02M$01@0@ABU10@M@Z ENDP	; glm::operator*<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_m$ = 12						; size = 4
??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z PROC ; glm::quat_cast<float,2>, COMDAT

; 654  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi

; 655  : 		T fourXSquaredMinus1 = m[0][0] - m[1][1] - m[2][2];

	mov	edi, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edi+32]
	movss	xmm1, DWORD PTR [edi]

; 656  : 		T fourYSquaredMinus1 = m[1][1] - m[0][0] - m[2][2];
; 657  : 		T fourZSquaredMinus1 = m[2][2] - m[0][0] - m[1][1];

	movaps	xmm4, xmm0
	movss	xmm2, DWORD PTR [edi+16]
	subss	xmm4, xmm1
	movaps	xmm3, xmm1
	movaps	xmm5, xmm2
	subss	xmm3, xmm2
	subss	xmm5, xmm1
	subss	xmm4, xmm2

; 658  : 		T fourWSquaredMinus1 = m[0][0] + m[1][1] + m[2][2];

	addss	xmm2, xmm1
	subss	xmm3, xmm0
	subss	xmm5, xmm0
	addss	xmm2, xmm0

; 659  : 
; 660  : 		int biggestIndex = 0;
; 661  : 		T fourBiggestSquaredMinus1 = fourWSquaredMinus1;
; 662  : 		if(fourXSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm3, xmm2
	movaps	xmm0, xmm2
	jbe	SHORT $LN4@quat_cast

; 663  : 		{
; 664  : 			fourBiggestSquaredMinus1 = fourXSquaredMinus1;

	movaps	xmm2, xmm3
$LN4@quat_cast:

; 665  : 			biggestIndex = 1;
; 666  : 		}
; 667  : 		if(fourYSquaredMinus1 > fourBiggestSquaredMinus1)

	xor	ebx, ebx
	comiss	xmm3, xmm0
	seta	bl
	comiss	xmm5, xmm2
	jbe	SHORT $LN5@quat_cast

; 668  : 		{
; 669  : 			fourBiggestSquaredMinus1 = fourYSquaredMinus1;

	movaps	xmm2, xmm5

; 670  : 			biggestIndex = 2;

	mov	ebx, 2
$LN5@quat_cast:

; 671  : 		}
; 672  : 		if(fourZSquaredMinus1 > fourBiggestSquaredMinus1)

	comiss	xmm4, xmm2
	jbe	SHORT $LN6@quat_cast

; 673  : 		{
; 674  : 			fourBiggestSquaredMinus1 = fourZSquaredMinus1;

	movaps	xmm2, xmm4

; 675  : 			biggestIndex = 3;

	mov	ebx, 3
$LN6@quat_cast:

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	addss	xmm2, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	movss	xmm1, DWORD PTR __real@3e800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm2, xmm2
	cvtsd2ss xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 678  : 		T biggestVal = sqrt(fourBiggestSquaredMinus1 + static_cast<T>(1)) * static_cast<T>(0.5);

	mulss	xmm2, DWORD PTR __real@3f000000

; 679  : 		T mult = static_cast<T>(0.25) / biggestVal;

	divss	xmm1, xmm2

; 680  : 
; 681  : 		switch(biggestIndex)

	jmp	DWORD PTR $LN173@quat_cast[ebx*4]
$LN7@quat_cast:

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+20]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	subss	xmm0, DWORD PTR [edi+28]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm2

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 682  : 		{
; 683  : 		case 0:
; 684  : 			return tquat<T, Q>(biggestVal, (m[1][2] - m[2][1]) * mult, (m[2][0] - m[0][2]) * mult, (m[0][1] - m[1][0]) * mult);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@quat_cast:

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm2

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	addss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 685  : 		case 1:
; 686  : 			return tquat<T, Q>((m[1][2] - m[2][1]) * mult, biggestVal, (m[0][1] + m[1][0]) * mult, (m[2][0] + m[0][2]) * mult);

	movss	xmm0, DWORD PTR [edi+20]
	subss	xmm0, DWORD PTR [edi+28]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@quat_cast:

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+12]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+4]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm2

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm0

; 687  : 		case 2:
; 688  : 			return tquat<T, Q>((m[2][0] - m[0][2]) * mult, (m[0][1] + m[1][0]) * mult, biggestVal, (m[1][2] + m[2][1]) * mult);

	movss	xmm0, DWORD PTR [edi+24]
	subss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@quat_cast:

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+24]

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	mov	eax, esi
	addss	xmm0, DWORD PTR [edi+8]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+8], xmm2

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+28]
	addss	xmm0, DWORD PTR [edi+20]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+4], xmm0

; 689  : 		case 3:
; 690  : 			return tquat<T, Q>((m[0][1] - m[1][0]) * mult, (m[2][0] + m[0][2]) * mult, (m[1][2] + m[2][1]) * mult, biggestVal);

	movss	xmm0, DWORD PTR [edi+4]
	subss	xmm0, DWORD PTR [edi+12]
	mulss	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [esi+12], xmm0

; 691  : 		default: // Silence a -Wswitch-default warning in GCC. Should never actually get here. Assert is just for sanity.
; 692  : 			assert(false);
; 693  : 			return tquat<T, Q>(1, 0, 0, 0);
; 694  : 		}
; 695  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN173@quat_cast:
	DD	$LN7@quat_cast
	DD	$LN8@quat_cast
	DD	$LN9@quat_cast
	DD	$LN10@quat_cast
??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z ENDP ; glm::quat_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$03$03M$01@0@@Z
_TEXT	SEGMENT
$T1 = -52						; size = 12
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_m4$ = 12						; size = 4
??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$03$03M$01@0@@Z PROC ; glm::quat_cast<float,2>, COMDAT

; 699  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 52					; 00000034H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m4$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 699  : 	{

	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	movq	QWORD PTR $T4[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T4[ebp+8], eax

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR $T4[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T4[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T4[ebp]
	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T1[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T4[ebp+24], xmm2
	mov	DWORD PTR $T4[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z ; glm::quat_cast<float,2>

; 701  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	mov	eax, esi
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$03$03M$01@0@@Z ENDP ; glm::quat_cast<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHN@?$vec@$03N$0A@@glm@@QAE@HHHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 8
??$?0HHHN@?$vec@$03N$0A@@glm@@QAE@HHHN@Z PROC		; glm::vec<4,double,0>::vec<4,double,0><int,int,int,double>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHHN@?$vec@$03N$0A@@glm@@QAE@HHHN@Z ENDP		; glm::vec<4,double,0>::vec<4,double,0><int,int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHN@?$vec@$03N$00@glm@@QAE@HHHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 8
??$?0HHHN@?$vec@$03N$00@glm@@QAE@HHHN@Z PROC		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,double>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHHN@?$vec@$03N$00@glm@@QAE@HHHN@Z ENDP		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHN@?$vec@$03N$01@glm@@QAE@HHHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 8
??$?0HHHN@?$vec@$03N$01@glm@@QAE@HHHN@Z PROC		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,double>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHHN@?$vec@$03N$01@glm@@QAE@HHHN@Z ENDP		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHNH@?$vec@$03N$0A@@glm@@QAE@HHNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
__w$ = 24						; size = 4
??$?0HHNH@?$vec@$03N$0A@@glm@@QAE@HHNH@Z PROC		; glm::vec<4,double,0>::vec<4,double,0><int,int,double,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHNH@?$vec@$03N$0A@@glm@@QAE@HHNH@Z ENDP		; glm::vec<4,double,0>::vec<4,double,0><int,int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HNHH@?$vec@$03N$0A@@glm@@QAE@HNHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0HNHH@?$vec@$03N$0A@@glm@@QAE@HNHH@Z PROC		; glm::vec<4,double,0>::vec<4,double,0><int,double,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HNHH@?$vec@$03N$0A@@glm@@QAE@HNHH@Z ENDP		; glm::vec<4,double,0>::vec<4,double,0><int,double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHHH@?$vec@$03N$0A@@glm@@QAE@NHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0NHHH@?$vec@$03N$0A@@glm@@QAE@NHHH@Z PROC		; glm::vec<4,double,0>::vec<4,double,0><double,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0NHHH@?$vec@$03N$0A@@glm@@QAE@NHHH@Z ENDP		; glm::vec<4,double,0>::vec<4,double,0><double,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03N$0A@@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03N$0A@@glm@@QAE@HHHH@Z PROC		; glm::vec<4,double,0>::vec<4,double,0><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03N$0A@@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,double,0>::vec<4,double,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHNH@?$vec@$03N$00@glm@@QAE@HHNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
__w$ = 24						; size = 4
??$?0HHNH@?$vec@$03N$00@glm@@QAE@HHNH@Z PROC		; glm::vec<4,double,1>::vec<4,double,1><int,int,double,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHNH@?$vec@$03N$00@glm@@QAE@HHNH@Z ENDP		; glm::vec<4,double,1>::vec<4,double,1><int,int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HNHH@?$vec@$03N$00@glm@@QAE@HNHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0HNHH@?$vec@$03N$00@glm@@QAE@HNHH@Z PROC		; glm::vec<4,double,1>::vec<4,double,1><int,double,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HNHH@?$vec@$03N$00@glm@@QAE@HNHH@Z ENDP		; glm::vec<4,double,1>::vec<4,double,1><int,double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHHH@?$vec@$03N$00@glm@@QAE@NHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0NHHH@?$vec@$03N$00@glm@@QAE@NHHH@Z PROC		; glm::vec<4,double,1>::vec<4,double,1><double,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0NHHH@?$vec@$03N$00@glm@@QAE@NHHH@Z ENDP		; glm::vec<4,double,1>::vec<4,double,1><double,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03N$00@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03N$00@glm@@QAE@HHHH@Z PROC		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03N$00@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,double,1>::vec<4,double,1><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHNH@?$vec@$03N$01@glm@@QAE@HHNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
__w$ = 24						; size = 4
??$?0HHNH@?$vec@$03N$01@glm@@QAE@HHNH@Z PROC		; glm::vec<4,double,2>::vec<4,double,2><int,int,double,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HHNH@?$vec@$03N$01@glm@@QAE@HHNH@Z ENDP		; glm::vec<4,double,2>::vec<4,double,2><int,int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HNHH@?$vec@$03N$01@glm@@QAE@HNHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0HNHH@?$vec@$03N$01@glm@@QAE@HNHH@Z PROC		; glm::vec<4,double,2>::vec<4,double,2><int,double,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0HNHH@?$vec@$03N$01@glm@@QAE@HNHH@Z ENDP		; glm::vec<4,double,2>::vec<4,double,2><int,double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHHH@?$vec@$03N$01@glm@@QAE@NHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
__w$ = 24						; size = 4
??$?0NHHH@?$vec@$03N$01@glm@@QAE@NHHH@Z PROC		; glm::vec<4,double,2>::vec<4,double,2><double,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	20					; 00000014H
??$?0NHHH@?$vec@$03N$01@glm@@QAE@NHHH@Z ENDP		; glm::vec<4,double,2>::vec<4,double,2><double,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03N$01@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03N$01@glm@@QAE@HHHH@Z PROC		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03N$01@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,double,2>::vec<4,double,2><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHN@?$vec@$02N$01@glm@@QAE@HHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
??$?0HHN@?$vec@$02N$01@glm@@QAE@HHN@Z PROC		; glm::vec<3,double,2>::vec<3,double,2><int,int,double>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHN@?$vec@$02N$01@glm@@QAE@HHN@Z ENDP		; glm::vec<3,double,2>::vec<3,double,2><int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02N$01@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02N$01@glm@@QAE@HHH@Z PROC		; glm::vec<3,double,2>::vec<3,double,2><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02N$01@glm@@QAE@HHH@Z ENDP		; glm::vec<3,double,2>::vec<3,double,2><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHN@?$vec@$02N$0A@@glm@@QAE@HHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
??$?0HHN@?$vec@$02N$0A@@glm@@QAE@HHN@Z PROC		; glm::vec<3,double,0>::vec<3,double,0><int,int,double>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHN@?$vec@$02N$0A@@glm@@QAE@HHN@Z ENDP		; glm::vec<3,double,0>::vec<3,double,0><int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02N$0A@@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02N$0A@@glm@@QAE@HHH@Z PROC		; glm::vec<3,double,0>::vec<3,double,0><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02N$0A@@glm@@QAE@HHH@Z ENDP		; glm::vec<3,double,0>::vec<3,double,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHN@?$vec@$02N$00@glm@@QAE@HHN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 8
??$?0HHN@?$vec@$02N$00@glm@@QAE@HHN@Z PROC		; glm::vec<3,double,1>::vec<3,double,1><int,int,double>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHN@?$vec@$02N$00@glm@@QAE@HHN@Z ENDP		; glm::vec<3,double,1>::vec<3,double,1><int,int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02N$00@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02N$00@glm@@QAE@HHH@Z PROC		; glm::vec<3,double,1>::vec<3,double,1><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02N$00@glm@@QAE@HHH@Z ENDP		; glm::vec<3,double,1>::vec<3,double,1><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01N$0A@@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01N$0A@@glm@@QAE@HH@Z PROC		; glm::vec<2,double,0>::vec<2,double,0><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01N$0A@@glm@@QAE@HH@Z ENDP		; glm::vec<2,double,0>::vec<2,double,0><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01N$00@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01N$00@glm@@QAE@HH@Z PROC		; glm::vec<2,double,1>::vec<2,double,1><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01N$00@glm@@QAE@HH@Z ENDP		; glm::vec<2,double,1>::vec<2,double,1><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01N$01@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01N$01@glm@@QAE@HH@Z PROC		; glm::vec<2,double,2>::vec<2,double,2><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01N$01@glm@@QAE@HH@Z ENDP		; glm::vec<2,double,2>::vec<2,double,2><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0NHH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@HH@Z PROC ; glm::vec<4,double,0>::vec<4,double,0><double,int,int,0>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 224  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NHH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@HH@Z ENDP ; glm::vec<4,double,0>::vec<4,double,0><double,int,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0NH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@H@Z PROC ; glm::vec<4,double,0>::vec<4,double,0><double,int,0>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR __xyz$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 278  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	8
??$?0NH$0A@@?$vec@$03N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@H@Z ENDP ; glm::vec<4,double,0>::vec<4,double,0><double,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$01N$00@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0NHH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$01N$00@1@HH@Z PROC ; glm::vec<4,double,1>::vec<4,double,1><double,int,int,1>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 224  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NHH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$01N$00@1@HH@Z ENDP ; glm::vec<4,double,1>::vec<4,double,1><double,int,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0NH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$02N$00@1@H@Z PROC ; glm::vec<4,double,1>::vec<4,double,1><double,int,1>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR __xyz$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 278  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	8
??$?0NH$00@?$vec@$03N$00@glm@@QAE@ABU?$vec@$02N$00@1@H@Z ENDP ; glm::vec<4,double,1>::vec<4,double,1><double,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NHH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$01N$01@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0NHH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$01N$01@1@HH@Z PROC ; glm::vec<4,double,2>::vec<4,double,2><double,int,int,2>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 224  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NHH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$01N$01@1@HH@Z ENDP ; glm::vec<4,double,2>::vec<4,double,2><double,int,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0NH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0NH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$02N$01@1@H@Z PROC ; glm::vec<4,double,2>::vec<4,double,2><double,int,2>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR __xyz$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 278  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	8
??$?0NH$01@?$vec@$03N$01@glm@@QAE@ABU?$vec@$02N$01@1@H@Z ENDP ; glm::vec<4,double,2>::vec<4,double,2><double,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HNH@?$vec@$02N$0A@@glm@@QAE@HNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
??$?0HNH@?$vec@$02N$0A@@glm@@QAE@HNH@Z PROC		; glm::vec<3,double,0>::vec<3,double,0><int,double,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HNH@?$vec@$02N$0A@@glm@@QAE@HNH@Z ENDP		; glm::vec<3,double,0>::vec<3,double,0><int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NHH@?$vec@$02N$0A@@glm@@QAE@NHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??$?0NHH@?$vec@$02N$0A@@glm@@QAE@NHH@Z PROC		; glm::vec<3,double,0>::vec<3,double,0><double,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0NHH@?$vec@$02N$0A@@glm@@QAE@NHH@Z ENDP		; glm::vec<3,double,0>::vec<3,double,0><double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0N$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z PROC ; glm::vec<3,double,0>::vec<3,double,0><double,0>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 106  : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 108  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??$?0N$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z ENDP ; glm::vec<3,double,0>::vec<3,double,0><double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NH$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0NH$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@H@Z PROC ; glm::vec<3,double,0>::vec<3,double,0><double,int,0>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 66   : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 68   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??$?0NH$0A@@?$vec@$02N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@H@Z ENDP ; glm::vec<3,double,0>::vec<3,double,0><double,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HNH@?$vec@$02N$00@glm@@QAE@HNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
??$?0HNH@?$vec@$02N$00@glm@@QAE@HNH@Z PROC		; glm::vec<3,double,1>::vec<3,double,1><int,double,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HNH@?$vec@$02N$00@glm@@QAE@HNH@Z ENDP		; glm::vec<3,double,1>::vec<3,double,1><int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NHH@?$vec@$02N$00@glm@@QAE@NHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??$?0NHH@?$vec@$02N$00@glm@@QAE@NHH@Z PROC		; glm::vec<3,double,1>::vec<3,double,1><double,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0NHH@?$vec@$02N$00@glm@@QAE@NHH@Z ENDP		; glm::vec<3,double,1>::vec<3,double,1><double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0N$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z PROC ; glm::vec<3,double,1>::vec<3,double,1><double,1>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 106  : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 108  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??$?0N$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z ENDP ; glm::vec<3,double,1>::vec<3,double,1><double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NH$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0NH$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$01N$00@1@H@Z PROC ; glm::vec<3,double,1>::vec<3,double,1><double,int,1>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 66   : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 68   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??$?0NH$00@?$vec@$02N$00@glm@@QAE@ABU?$vec@$01N$00@1@H@Z ENDP ; glm::vec<3,double,1>::vec<3,double,1><double,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HNH@?$vec@$02N$01@glm@@QAE@HNH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
__z$ = 20						; size = 4
??$?0HNH@?$vec@$02N$01@glm@@QAE@HNH@Z PROC		; glm::vec<3,double,2>::vec<3,double,2><int,double,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HNH@?$vec@$02N$01@glm@@QAE@HNH@Z ENDP		; glm::vec<3,double,2>::vec<3,double,2><int,double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NHH@?$vec@$02N$01@glm@@QAE@NHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??$?0NHH@?$vec@$02N$01@glm@@QAE@NHH@Z PROC		; glm::vec<3,double,2>::vec<3,double,2><double,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0NHH@?$vec@$02N$01@glm@@QAE@NHH@Z ENDP		; glm::vec<3,double,2>::vec<3,double,2><double,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0N$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z PROC ; glm::vec<3,double,2>::vec<3,double,2><double,2>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 106  : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm0, QWORD PTR [eax+16]

; 108  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??$?0N$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z ENDP ; glm::vec<3,double,2>::vec<3,double,2><double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0NH$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0NH$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$01N$01@1@H@Z PROC ; glm::vec<3,double,2>::vec<3,double,2><double,int,2>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR __xy$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 66   : 		, y(static_cast<T>(_xy.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 68   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??$?0NH$01@?$vec@$02N$01@glm@@QAE@ABU?$vec@$01N$01@1@H@Z ENDP ; glm::vec<3,double,2>::vec<3,double,2><double,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HN@?$vec@$01N$0A@@glm@@QAE@HN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
??$?0HN@?$vec@$01N$0A@@glm@@QAE@HN@Z PROC		; glm::vec<2,double,0>::vec<2,double,0><int,double>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HN@?$vec@$01N$0A@@glm@@QAE@HN@Z ENDP		; glm::vec<2,double,0>::vec<2,double,0><int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0NH@?$vec@$01N$0A@@glm@@QAE@NH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
??$?0NH@?$vec@$01N$0A@@glm@@QAE@NH@Z PROC		; glm::vec<2,double,0>::vec<2,double,0><double,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NH@?$vec@$01N$0A@@glm@@QAE@NH@Z ENDP		; glm::vec<2,double,0>::vec<2,double,0><double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z PROC ; glm::vec<2,double,0>::vec<2,double,0><double,0>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 79   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@@Z ENDP ; glm::vec<2,double,0>::vec<2,double,0><double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z PROC ; glm::vec<2,double,0>::vec<2,double,0><double,0>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 72   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$0A@@?$vec@$01N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z ENDP ; glm::vec<2,double,0>::vec<2,double,0><double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HN@?$vec@$01N$00@glm@@QAE@HN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
??$?0HN@?$vec@$01N$00@glm@@QAE@HN@Z PROC		; glm::vec<2,double,1>::vec<2,double,1><int,double>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HN@?$vec@$01N$00@glm@@QAE@HN@Z ENDP		; glm::vec<2,double,1>::vec<2,double,1><int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0NH@?$vec@$01N$00@glm@@QAE@NH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
??$?0NH@?$vec@$01N$00@glm@@QAE@NH@Z PROC		; glm::vec<2,double,1>::vec<2,double,1><double,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NH@?$vec@$01N$00@glm@@QAE@NH@Z ENDP		; glm::vec<2,double,1>::vec<2,double,1><double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z PROC ; glm::vec<2,double,1>::vec<2,double,1><double,1>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 79   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$03N$00@1@@Z ENDP ; glm::vec<2,double,1>::vec<2,double,1><double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z PROC ; glm::vec<2,double,1>::vec<2,double,1><double,1>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 72   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$00@?$vec@$01N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z ENDP ; glm::vec<2,double,1>::vec<2,double,1><double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HN@?$vec@$01N$01@glm@@QAE@HN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 8
??$?0HN@?$vec@$01N$01@glm@@QAE@HN@Z PROC		; glm::vec<2,double,2>::vec<2,double,2><int,double>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HN@?$vec@$01N$01@glm@@QAE@HN@Z ENDP		; glm::vec<2,double,2>::vec<2,double,2><int,double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0NH@?$vec@$01N$01@glm@@QAE@NH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 4
??$?0NH@?$vec@$01N$01@glm@@QAE@NH@Z PROC		; glm::vec<2,double,2>::vec<2,double,2><double,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2pd xmm0, xmm0
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0NH@?$vec@$01N$01@glm@@QAE@NH@Z ENDP		; glm::vec<2,double,2>::vec<2,double,2><double,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z PROC ; glm::vec<2,double,2>::vec<2,double,2><double,2>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 79   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$03N$01@1@@Z ENDP ; glm::vec<2,double,2>::vec<2,double,2><double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z PROC ; glm::vec<2,double,2>::vec<2,double,2><double,2>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movsd	xmm0, QWORD PTR [eax+8]

; 72   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??$?0N$01@?$vec@$01N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z ENDP ; glm::vec<2,double,2>::vec<2,double,2><double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHM@?$vec@$03M$0A@@glm@@QAE@HHHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHM@?$vec@$03M$0A@@glm@@QAE@HHHM@Z PROC		; glm::vec<4,float,0>::vec<4,float,0><int,int,int,float>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHM@?$vec@$03M$0A@@glm@@QAE@HHHM@Z ENDP		; glm::vec<4,float,0>::vec<4,float,0><int,int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHM@?$vec@$03M$00@glm@@QAE@HHHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHM@?$vec@$03M$00@glm@@QAE@HHHM@Z PROC		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,float>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHM@?$vec@$03M$00@glm@@QAE@HHHM@Z ENDP		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHM@?$vec@$03M$01@glm@@QAE@HHHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHM@?$vec@$03M$01@glm@@QAE@HHHM@Z PROC		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,float>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHM@?$vec@$03M$01@glm@@QAE@HHHM@Z ENDP		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHMH@?$vec@$03M$0A@@glm@@QAE@HHMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHMH@?$vec@$03M$0A@@glm@@QAE@HHMH@Z PROC		; glm::vec<4,float,0>::vec<4,float,0><int,int,float,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHMH@?$vec@$03M$0A@@glm@@QAE@HHMH@Z ENDP		; glm::vec<4,float,0>::vec<4,float,0><int,int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HMHH@?$vec@$03M$0A@@glm@@QAE@HMHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HMHH@?$vec@$03M$0A@@glm@@QAE@HMHH@Z PROC		; glm::vec<4,float,0>::vec<4,float,0><int,float,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HMHH@?$vec@$03M$0A@@glm@@QAE@HMHH@Z ENDP		; glm::vec<4,float,0>::vec<4,float,0><int,float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHHH@?$vec@$03M$0A@@glm@@QAE@MHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0MHHH@?$vec@$03M$0A@@glm@@QAE@MHHH@Z PROC		; glm::vec<4,float,0>::vec<4,float,0><float,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0MHHH@?$vec@$03M$0A@@glm@@QAE@MHHH@Z ENDP		; glm::vec<4,float,0>::vec<4,float,0><float,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03M$0A@@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03M$0A@@glm@@QAE@HHHH@Z PROC		; glm::vec<4,float,0>::vec<4,float,0><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03M$0A@@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,float,0>::vec<4,float,0><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHMH@?$vec@$03M$00@glm@@QAE@HHMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHMH@?$vec@$03M$00@glm@@QAE@HHMH@Z PROC		; glm::vec<4,float,1>::vec<4,float,1><int,int,float,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHMH@?$vec@$03M$00@glm@@QAE@HHMH@Z ENDP		; glm::vec<4,float,1>::vec<4,float,1><int,int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HMHH@?$vec@$03M$00@glm@@QAE@HMHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HMHH@?$vec@$03M$00@glm@@QAE@HMHH@Z PROC		; glm::vec<4,float,1>::vec<4,float,1><int,float,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HMHH@?$vec@$03M$00@glm@@QAE@HMHH@Z ENDP		; glm::vec<4,float,1>::vec<4,float,1><int,float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHHH@?$vec@$03M$00@glm@@QAE@MHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0MHHH@?$vec@$03M$00@glm@@QAE@MHHH@Z PROC		; glm::vec<4,float,1>::vec<4,float,1><float,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0MHHH@?$vec@$03M$00@glm@@QAE@MHHH@Z ENDP		; glm::vec<4,float,1>::vec<4,float,1><float,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03M$00@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03M$00@glm@@QAE@HHHH@Z PROC		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03M$00@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,float,1>::vec<4,float,1><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHMH@?$vec@$03M$01@glm@@QAE@HHMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHMH@?$vec@$03M$01@glm@@QAE@HHMH@Z PROC		; glm::vec<4,float,2>::vec<4,float,2><int,int,float,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHMH@?$vec@$03M$01@glm@@QAE@HHMH@Z ENDP		; glm::vec<4,float,2>::vec<4,float,2><int,int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HMHH@?$vec@$03M$01@glm@@QAE@HMHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HMHH@?$vec@$03M$01@glm@@QAE@HMHH@Z PROC		; glm::vec<4,float,2>::vec<4,float,2><int,float,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HMHH@?$vec@$03M$01@glm@@QAE@HMHH@Z ENDP		; glm::vec<4,float,2>::vec<4,float,2><int,float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHHH@?$vec@$03M$01@glm@@QAE@MHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0MHHH@?$vec@$03M$01@glm@@QAE@MHHH@Z PROC		; glm::vec<4,float,2>::vec<4,float,2><float,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 204  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0MHHH@?$vec@$03M$01@glm@@QAE@MHHH@Z ENDP		; glm::vec<4,float,2>::vec<4,float,2><float,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0HHHH@?$vec@$03M$01@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??$?0HHHH@?$vec@$03M$01@glm@@QAE@HHHH@Z PROC		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,int>, COMDAT
; _this$ = ecx

; 204  : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??$?0HHHH@?$vec@$03M$01@glm@@QAE@HHHH@Z ENDP		; glm::vec<4,float,2>::vec<4,float,2><int,int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHM@?$vec@$02M$0A@@glm@@QAE@HHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHM@?$vec@$02M$0A@@glm@@QAE@HHM@Z PROC		; glm::vec<3,float,0>::vec<3,float,0><int,int,float>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHM@?$vec@$02M$0A@@glm@@QAE@HHM@Z ENDP		; glm::vec<3,float,0>::vec<3,float,0><int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02M$0A@@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02M$0A@@glm@@QAE@HHH@Z PROC		; glm::vec<3,float,0>::vec<3,float,0><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02M$0A@@glm@@QAE@HHH@Z ENDP		; glm::vec<3,float,0>::vec<3,float,0><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHM@?$vec@$02M$00@glm@@QAE@HHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHM@?$vec@$02M$00@glm@@QAE@HHM@Z PROC		; glm::vec<3,float,1>::vec<3,float,1><int,int,float>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHM@?$vec@$02M$00@glm@@QAE@HHM@Z ENDP		; glm::vec<3,float,1>::vec<3,float,1><int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02M$00@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02M$00@glm@@QAE@HHH@Z PROC		; glm::vec<3,float,1>::vec<3,float,1><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02M$00@glm@@QAE@HHH@Z ENDP		; glm::vec<3,float,1>::vec<3,float,1><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHM@?$vec@$02M$01@glm@@QAE@HHM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHM@?$vec@$02M$01@glm@@QAE@HHM@Z PROC		; glm::vec<3,float,2>::vec<3,float,2><int,int,float>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHM@?$vec@$02M$01@glm@@QAE@HHM@Z ENDP		; glm::vec<3,float,2>::vec<3,float,2><int,int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HHH@?$vec@$02M$01@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HHH@?$vec@$02M$01@glm@@QAE@HHH@Z PROC		; glm::vec<3,float,2>::vec<3,float,2><int,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HHH@?$vec@$02M$01@glm@@QAE@HHH@Z ENDP		; glm::vec<3,float,2>::vec<3,float,2><int,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01M$0A@@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01M$0A@@glm@@QAE@HH@Z PROC		; glm::vec<2,float,0>::vec<2,float,0><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01M$0A@@glm@@QAE@HH@Z ENDP		; glm::vec<2,float,0>::vec<2,float,0><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01M$00@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01M$00@glm@@QAE@HH@Z PROC		; glm::vec<2,float,1>::vec<2,float,1><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01M$00@glm@@QAE@HH@Z ENDP		; glm::vec<2,float,1>::vec<2,float,1><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HH@?$vec@$01M$01@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HH@?$vec@$01M$01@glm@@QAE@HH@Z PROC		; glm::vec<2,float,2>::vec<2,float,2><int,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HH@?$vec@$01M$01@glm@@QAE@HH@Z ENDP		; glm::vec<2,float,2>::vec<2,float,2><int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0MHH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@HH@Z PROC ; glm::vec<4,float,0>::vec<4,float,0><float,int,int,0>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 221  : 		, y(static_cast<T>(_xy.y))
; 222  : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 224  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@HH@Z ENDP ; glm::vec<4,float,0>::vec<4,float,0><float,int,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0MH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@H@Z PROC ; glm::vec<4,float,0>::vec<4,float,0><float,int,0>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	edx, DWORD PTR __xyz$[ebp]
	movd	xmm0, DWORD PTR __w$[ebp]

; 275  : 		, y(static_cast<T>(_xyz.y))
; 276  : 		, z(static_cast<T>(_xyz.z))
; 277  : 		, w(static_cast<T>(_w))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 278  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??$?0MH$0A@@?$vec@$03M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@H@Z ENDP ; glm::vec<4,float,0>::vec<4,float,0><float,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$01M$00@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0MHH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$01M$00@1@HH@Z PROC ; glm::vec<4,float,1>::vec<4,float,1><float,int,int,1>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 221  : 		, y(static_cast<T>(_xy.y))
; 222  : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 224  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$01M$00@1@HH@Z ENDP ; glm::vec<4,float,1>::vec<4,float,1><float,int,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0MH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$02M$00@1@H@Z PROC ; glm::vec<4,float,1>::vec<4,float,1><float,int,1>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	edx, DWORD PTR __xyz$[ebp]
	movd	xmm0, DWORD PTR __w$[ebp]

; 275  : 		, y(static_cast<T>(_xyz.y))
; 276  : 		, z(static_cast<T>(_xyz.z))
; 277  : 		, w(static_cast<T>(_w))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 278  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??$?0MH$00@?$vec@$03M$00@glm@@QAE@ABU?$vec@$02M$00@1@H@Z ENDP ; glm::vec<4,float,1>::vec<4,float,1><float,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MHH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$01M$01@1@HH@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
__w$ = 16						; size = 4
??$?0MHH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$01M$01@1@HH@Z PROC ; glm::vec<4,float,2>::vec<4,float,2><float,int,int,2>, COMDAT
; _this$ = ecx

; 224  : 	{}

	push	ebp
	mov	ebp, esp

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 221  : 		, y(static_cast<T>(_xy.y))
; 222  : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 224  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	movd	xmm0, DWORD PTR __w$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$01M$01@1@HH@Z ENDP ; glm::vec<4,float,2>::vec<4,float,2><float,int,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??$?0MH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
__xyz$ = 8						; size = 4
__w$ = 12						; size = 4
??$?0MH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$02M$01@1@H@Z PROC ; glm::vec<4,float,2>::vec<4,float,2><float,int,2>, COMDAT
; _this$ = ecx

; 278  : 	{}

	push	ebp
	mov	ebp, esp

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	edx, DWORD PTR __xyz$[ebp]
	movd	xmm0, DWORD PTR __w$[ebp]

; 275  : 		, y(static_cast<T>(_xyz.y))
; 276  : 		, z(static_cast<T>(_xyz.z))
; 277  : 		, w(static_cast<T>(_w))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 278  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??$?0MH$01@?$vec@$03M$01@glm@@QAE@ABU?$vec@$02M$01@1@H@Z ENDP ; glm::vec<4,float,2>::vec<4,float,2><float,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HMH@?$vec@$02M$0A@@glm@@QAE@HMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HMH@?$vec@$02M$0A@@glm@@QAE@HMH@Z PROC		; glm::vec<3,float,0>::vec<3,float,0><int,float,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HMH@?$vec@$02M$0A@@glm@@QAE@HMH@Z ENDP		; glm::vec<3,float,0>::vec<3,float,0><int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MHH@?$vec@$02M$0A@@glm@@QAE@MHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0MHH@?$vec@$02M$0A@@glm@@QAE@MHH@Z PROC		; glm::vec<3,float,0>::vec<3,float,0><float,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH@?$vec@$02M$0A@@glm@@QAE@MHH@Z ENDP		; glm::vec<3,float,0>::vec<3,float,0><float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0M$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z PROC ; glm::vec<3,float,0>::vec<3,float,0><float,0>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 106  : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 107  : 		, z(static_cast<T>(v.z))

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 108  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z ENDP ; glm::vec<3,float,0>::vec<3,float,0><float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MH$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0MH$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@H@Z PROC ; glm::vec<3,float,0>::vec<3,float,0><float,int,0>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 66   : 		, y(static_cast<T>(_xy.y))
; 67   : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 68   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0MH$0A@@?$vec@$02M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@H@Z ENDP ; glm::vec<3,float,0>::vec<3,float,0><float,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HMH@?$vec@$02M$00@glm@@QAE@HMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HMH@?$vec@$02M$00@glm@@QAE@HMH@Z PROC		; glm::vec<3,float,1>::vec<3,float,1><int,float,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HMH@?$vec@$02M$00@glm@@QAE@HMH@Z ENDP		; glm::vec<3,float,1>::vec<3,float,1><int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MHH@?$vec@$02M$00@glm@@QAE@MHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0MHH@?$vec@$02M$00@glm@@QAE@MHH@Z PROC		; glm::vec<3,float,1>::vec<3,float,1><float,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH@?$vec@$02M$00@glm@@QAE@MHH@Z ENDP		; glm::vec<3,float,1>::vec<3,float,1><float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0M$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z PROC ; glm::vec<3,float,1>::vec<3,float,1><float,1>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 106  : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 107  : 		, z(static_cast<T>(v.z))

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 108  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z ENDP ; glm::vec<3,float,1>::vec<3,float,1><float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MH$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0MH$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$01M$00@1@H@Z PROC ; glm::vec<3,float,1>::vec<3,float,1><float,int,1>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 66   : 		, y(static_cast<T>(_xy.y))
; 67   : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 68   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0MH$00@?$vec@$02M$00@glm@@QAE@ABU?$vec@$01M$00@1@H@Z ENDP ; glm::vec<3,float,1>::vec<3,float,1><float,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0HMH@?$vec@$02M$01@glm@@QAE@HMH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0HMH@?$vec@$02M$01@glm@@QAE@HMH@Z PROC		; glm::vec<3,float,2>::vec<3,float,2><int,float,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0HMH@?$vec@$02M$01@glm@@QAE@HMH@Z ENDP		; glm::vec<3,float,2>::vec<3,float,2><int,float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MHH@?$vec@$02M$01@glm@@QAE@MHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??$?0MHH@?$vec@$02M$01@glm@@QAE@MHH@Z PROC		; glm::vec<3,float,2>::vec<3,float,2><float,int,int>, COMDAT
; _this$ = ecx

; 50   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 50   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movd	xmm0, DWORD PTR __z$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??$?0MHH@?$vec@$02M$01@glm@@QAE@MHH@Z ENDP		; glm::vec<3,float,2>::vec<3,float,2><float,int,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0M$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z PROC ; glm::vec<3,float,2>::vec<3,float,2><float,2>, COMDAT
; _this$ = ecx

; 108  : 	{}

	push	ebp
	mov	ebp, esp

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 106  : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 107  : 		, z(static_cast<T>(v.z))

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 108  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z ENDP ; glm::vec<3,float,2>::vec<3,float,2><float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??$?0MH$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
__xy$ = 8						; size = 4
__z$ = 12						; size = 4
??$?0MH$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$01M$01@1@H@Z PROC ; glm::vec<3,float,2>::vec<3,float,2><float,int,2>, COMDAT
; _this$ = ecx

; 68   : 	{}

	push	ebp
	mov	ebp, esp

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR __xy$[ebp]
	movd	xmm0, DWORD PTR __z$[ebp]

; 66   : 		, y(static_cast<T>(_xy.y))
; 67   : 		, z(static_cast<T>(_z))

	cvtdq2ps xmm0, xmm0
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 68   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	8
??$?0MH$01@?$vec@$02M$01@glm@@QAE@ABU?$vec@$01M$01@1@H@Z ENDP ; glm::vec<3,float,2>::vec<3,float,2><float,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HM@?$vec@$01M$0A@@glm@@QAE@HM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HM@?$vec@$01M$0A@@glm@@QAE@HM@Z PROC		; glm::vec<2,float,0>::vec<2,float,0><int,float>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HM@?$vec@$01M$0A@@glm@@QAE@HM@Z ENDP		; glm::vec<2,float,0>::vec<2,float,0><int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0MH@?$vec@$01M$0A@@glm@@QAE@MH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0MH@?$vec@$01M$0A@@glm@@QAE@MH@Z PROC		; glm::vec<2,float,0>::vec<2,float,0><float,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0MH@?$vec@$01M$0A@@glm@@QAE@MH@Z ENDP		; glm::vec<2,float,0>::vec<2,float,0><float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z PROC ; glm::vec<2,float,0>::vec<2,float,0><float,0>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 78   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 79   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@@Z ENDP ; glm::vec<2,float,0>::vec<2,float,0><float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z PROC ; glm::vec<2,float,0>::vec<2,float,0><float,0>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 71   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 72   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$0A@@?$vec@$01M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z ENDP ; glm::vec<2,float,0>::vec<2,float,0><float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HM@?$vec@$01M$00@glm@@QAE@HM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HM@?$vec@$01M$00@glm@@QAE@HM@Z PROC		; glm::vec<2,float,1>::vec<2,float,1><int,float>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HM@?$vec@$01M$00@glm@@QAE@HM@Z ENDP		; glm::vec<2,float,1>::vec<2,float,1><int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0MH@?$vec@$01M$00@glm@@QAE@MH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0MH@?$vec@$01M$00@glm@@QAE@MH@Z PROC		; glm::vec<2,float,1>::vec<2,float,1><float,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0MH@?$vec@$01M$00@glm@@QAE@MH@Z ENDP		; glm::vec<2,float,1>::vec<2,float,1><float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z PROC ; glm::vec<2,float,1>::vec<2,float,1><float,1>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 78   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 79   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$03M$00@1@@Z ENDP ; glm::vec<2,float,1>::vec<2,float,1><float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z PROC ; glm::vec<2,float,1>::vec<2,float,1><float,1>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 71   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 72   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$00@?$vec@$01M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z ENDP ; glm::vec<2,float,1>::vec<2,float,1><float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0HM@?$vec@$01M$01@glm@@QAE@HM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0HM@?$vec@$01M$01@glm@@QAE@HM@Z PROC		; glm::vec<2,float,2>::vec<2,float,2><int,float>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp
	movd	xmm0, DWORD PTR __x$[ebp]
	mov	eax, ecx
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0HM@?$vec@$01M$01@glm@@QAE@HM@Z ENDP		; glm::vec<2,float,2>::vec<2,float,2><int,float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0MH@?$vec@$01M$01@glm@@QAE@MH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??$?0MH@?$vec@$01M$01@glm@@QAE@MH@Z PROC		; glm::vec<2,float,2>::vec<2,float,2><float,int>, COMDAT
; _this$ = ecx

; 49   : 	{}

	push	ebp
	mov	ebp, esp

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR __x$[ebp]

; 49   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movd	xmm0, DWORD PTR __y$[ebp]
	cvtdq2ps xmm0, xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??$?0MH@?$vec@$01M$01@glm@@QAE@MH@Z ENDP		; glm::vec<2,float,2>::vec<2,float,2><float,int>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z PROC ; glm::vec<2,float,2>::vec<2,float,2><float,2>, COMDAT
; _this$ = ecx

; 79   : 	{}

	push	ebp
	mov	ebp, esp

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 78   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 79   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$03M$01@1@@Z ENDP ; glm::vec<2,float,2>::vec<2,float,2><float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z
_TEXT	SEGMENT
_v$ = 8							; size = 4
??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z PROC ; glm::vec<2,float,2>::vec<2,float,2><float,2>, COMDAT
; _this$ = ecx

; 72   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _v$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 71   : 		, y(static_cast<T>(v.y))

	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 72   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??$?0M$01@?$vec@$01M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z ENDP ; glm::vec<2,float,2>::vec<2,float,2><float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::tdualquat<double,0>::tdualquat<double,0>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+72]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, QWORD PTR [esi+48]
	subsd	xmm3, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN121@tdualquat
$LN4@tdualquat:
	comisd	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comisd	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm3, QWORD PTR [esi+32]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm3, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN122@tdualquat
$LN6@tdualquat:
	comisd	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm4, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	mulsd	xmm4, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN123@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+64]
	movsd	xmm3, QWORD PTR [esi+72]
	addsd	xmm4, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN121@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm4, xmm1
$LN122@tdualquat:
	mulsd	xmm3, xmm1
$LN123@tdualquat:
	movsd	xmm2, QWORD PTR [esi+56]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movsd	xmm5, QWORD PTR [esi+24]
	movaps	xmm6, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm6, xmm7
	movsd	QWORD PTR _real$3$[esp+40], xmm3
	movups	XMMWORD PTR $T1[esp+40], xmm4
	addsd	xmm6, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm3, xmm2
	mulsd	xmm3, QWORD PTR _real$1$[esp+40]
	subsd	xmm6, xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, xmm7
	mulsd	xmm6, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm4, xmm5
	mulsd	xmm4, QWORD PTR _real$3$[esp+40]
	addsd	xmm3, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR $T1[esp+40]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm2, QWORD PTR _real$3$[esp+40]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm6, xmm3

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm4, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR $T1[esp+40]
	mulsd	xmm5, xmm0
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm5, xmm2
	addsd	xmm5, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+40]
	unpcklpd xmm0, xmm1
	movsd	xmm1, QWORD PTR _real$1$[esp+40]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm5, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm1

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm4, xmm5

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+32], xmm6
	movups	XMMWORD PTR [edi+48], xmm4

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::tdualquat<double,0>::tdualquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::tdualquat<double,0>::tdualquat<double,0>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm5, XMMWORD PTR [eax]
	movups	xmm4, XMMWORD PTR [eax+16]
	movups	xmm7, XMMWORD PTR [eax+32]
	movups	xmm6, XMMWORD PTR [eax+48]

; 85   : 		*this = dualquat_cast(m);
; 86   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm5
	movups	XMMWORD PTR [ecx+16], xmm4
	movups	XMMWORD PTR [ecx+32], xmm7
	movups	XMMWORD PTR [ecx+48], xmm6
	pop	ebp
	ret	4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::tdualquat<double,0>::tdualquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@0@Z PROC ; glm::tdualquat<double,0>::tdualquat<double,0>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@0@Z ENDP ; glm::tdualquat<double,0>::tdualquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@ABU?$vec@$02N$0A@@1@@Z
_TEXT	SEGMENT
tv276 = -16						; size = 8
tv265 = -8						; size = 8
_q$ = 8							; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@ABU?$vec@$02N$0A@@1@@Z PROC ; glm::tdualquat<double,0>::tdualquat<double,0>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR [edx+8]
	movsd	xmm5, QWORD PTR [eax]
	movsd	xmm6, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [edx+24]
	movsd	xmm2, QWORD PTR [eax+8]
	movaps	xmm1, xmm3
	movsd	xmm4, QWORD PTR [eax+16]

; 66   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR tv265[ebp], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm2
	movsd	xmm7, QWORD PTR [edx]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv276[ebp], xmm2
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm5
	mulsd	xmm6, xmm4
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR tv276[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm7
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm0, xmm7
	mulsd	xmm7, xmm5
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulsd	xmm1, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm3
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv265[ebp]
	mulsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm1, xmm2
	addsd	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addsd	xmm0, xmm6
	mulsd	xmm0, QWORD PTR __real@bfe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+56], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@ABU?$vec@$02N$0A@@1@@Z ENDP ; glm::tdualquat<double,0>::tdualquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@@Z PROC ; glm::tdualquat<double,0>::tdualquat<double,0>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@N$0A@@glm@@QAE@ABU?$tquat@N$0A@@1@@Z ENDP ; glm::tdualquat<double,0>::tdualquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$0A@@glm@@QBEABU?$tquat@N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$0A@@glm@@QBEABU?$tquat@N$0A@@1@H@Z PROC ; glm::tdualquat<double,0>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$0A@@glm@@QBEABU?$tquat@N$0A@@1@H@Z ENDP ; glm::tdualquat<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$0A@@glm@@QAEAAU?$tquat@N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$0A@@glm@@QAEAAU?$tquat@N$0A@@1@H@Z PROC ; glm::tdualquat<double,0>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$0A@@glm@@QAEAAU?$tquat@N$0A@@1@H@Z ENDP ; glm::tdualquat<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@N$0A@@glm@@SAHXZ PROC		; glm::tdualquat<double,0>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@N$0A@@glm@@SAHXZ ENDP		; glm::tdualquat<double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
_real$1$sroa$572$1$ = -52				; size = 4
_dual$2 = -48						; size = 16
$T3 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::tdualquat<float,0>::tdualquat<float,0>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 56					; 00000038H
	push	esi

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _m$[ebp]

; 90   : 	{

	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN148@tdualquat
$LN4@tdualquat:
	comiss	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comiss	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN149@tdualquat
$LN6@tdualquat:
	comiss	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+4]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN150@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN148@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN149@tdualquat:
	mulss	xmm5, xmm0
$LN150@tdualquat:
	movss	xmm3, DWORD PTR [esi+28]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	xmm4, DWORD PTR [esi+12]
	movaps	xmm0, xmm3
	movss	xmm2, DWORD PTR [esi+44]
	movss	DWORD PTR _real$1$sroa$572$1$[esp+64], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	mulss	xmm0, xmm6

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+64], xmm7
	movss	DWORD PTR $T3[esp+68], xmm5

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+72], xmm6

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+64], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm0, xmm3
	mulss	xmm0, xmm7

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+68], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	movss	DWORD PTR $T3[esp+76], xmm0

; 91   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T3[esp+64]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2
	mulss	xmm1, DWORD PTR __real@3f000000

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$2[esp+72], xmm1
	movss	DWORD PTR _dual$2[esp+76], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR _dual$2[esp+64]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm1

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::tdualquat<float,0>::tdualquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 32
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::tdualquat<float,0>::tdualquat<float,0>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR [eax]

; 86   : 	}

	mov	eax, ecx

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR $T1[ebp], xmm0

; 85   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 86   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::tdualquat<float,0>::tdualquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@0@Z PROC ; glm::tdualquat<float,0>::tdualquat<float,0>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@0@Z ENDP ; glm::tdualquat<float,0>::tdualquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@ABU?$vec@$02M$0A@@1@@Z
_TEXT	SEGMENT
tv266 = 8						; size = 4
_q$ = 8							; size = 4
tv277 = 12						; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@ABU?$vec@$02M$0A@@1@@Z PROC ; glm::tdualquat<float,0>::tdualquat<float,0>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [edx+4]
	movss	xmm5, DWORD PTR [eax]
	movss	xmm6, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [edx+12]
	movss	xmm2, DWORD PTR [eax+4]
	movaps	xmm1, xmm3
	movss	xmm4, DWORD PTR [eax+8]

; 66   : 	{}

	mov	eax, ecx
	movss	DWORD PTR tv266[ebp], xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm2
	movss	xmm7, DWORD PTR [edx]
	mulss	xmm1, xmm5
	movss	DWORD PTR tv277[ebp], xmm2
	movss	xmm2, DWORD PTR __real@3f000000
	addss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm5
	mulss	xmm6, xmm4
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR tv277[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv277[ebp]
	mulss	xmm0, xmm7
	mulss	xmm7, xmm5
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+20], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv266[ebp]
	mulss	xmm0, DWORD PTR tv277[ebp]
	addss	xmm0, xmm7
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addss	xmm0, xmm6
	mulss	xmm0, DWORD PTR __real@bf000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+28], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	pop	ebp
	ret	8
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@ABU?$vec@$02M$0A@@1@@Z ENDP ; glm::tdualquat<float,0>::tdualquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@@Z PROC ; glm::tdualquat<float,0>::tdualquat<float,0>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@M$0A@@glm@@QAE@ABU?$tquat@M$0A@@1@@Z ENDP ; glm::tdualquat<float,0>::tdualquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$0A@@glm@@QBEABU?$tquat@M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$0A@@glm@@QBEABU?$tquat@M$0A@@1@H@Z PROC ; glm::tdualquat<float,0>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$0A@@glm@@QBEABU?$tquat@M$0A@@1@H@Z ENDP ; glm::tdualquat<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$0A@@glm@@QAEAAU?$tquat@M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$0A@@glm@@QAEAAU?$tquat@M$0A@@1@H@Z PROC ; glm::tdualquat<float,0>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$0A@@glm@@QAEAAU?$tquat@M$0A@@1@H@Z ENDP ; glm::tdualquat<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@M$0A@@glm@@SAHXZ PROC		; glm::tdualquat<float,0>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@M$0A@@glm@@SAHXZ ENDP		; glm::tdualquat<float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::tdualquat<double,1>::tdualquat<double,1>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+72]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, QWORD PTR [esi+48]
	subsd	xmm3, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN121@tdualquat
$LN4@tdualquat:
	comisd	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comisd	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm3, QWORD PTR [esi+32]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm3, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN122@tdualquat
$LN6@tdualquat:
	comisd	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm4, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	mulsd	xmm4, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN123@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+64]
	movsd	xmm3, QWORD PTR [esi+72]
	addsd	xmm4, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN121@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm4, xmm1
$LN122@tdualquat:
	mulsd	xmm3, xmm1
$LN123@tdualquat:
	movsd	xmm2, QWORD PTR [esi+56]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movsd	xmm5, QWORD PTR [esi+24]
	movaps	xmm6, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm6, xmm7
	movsd	QWORD PTR _real$3$[esp+40], xmm3
	movups	XMMWORD PTR $T1[esp+40], xmm4
	addsd	xmm6, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm3, xmm2
	mulsd	xmm3, QWORD PTR _real$1$[esp+40]
	subsd	xmm6, xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, xmm7
	mulsd	xmm6, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm4, xmm5
	mulsd	xmm4, QWORD PTR _real$3$[esp+40]
	addsd	xmm3, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR $T1[esp+40]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm2, QWORD PTR _real$3$[esp+40]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm6, xmm3

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm4, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR $T1[esp+40]
	mulsd	xmm5, xmm0
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm5, xmm2
	addsd	xmm5, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+40]
	unpcklpd xmm0, xmm1
	movsd	xmm1, QWORD PTR _real$1$[esp+40]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm5, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm1

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm4, xmm5

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+32], xmm6
	movups	XMMWORD PTR [edi+48], xmm4

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::tdualquat<double,1>::tdualquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::tdualquat<double,1>::tdualquat<double,1>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm5, XMMWORD PTR [eax]
	movups	xmm4, XMMWORD PTR [eax+16]
	movups	xmm7, XMMWORD PTR [eax+32]
	movups	xmm6, XMMWORD PTR [eax+48]

; 85   : 		*this = dualquat_cast(m);
; 86   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm5
	movups	XMMWORD PTR [ecx+16], xmm4
	movups	XMMWORD PTR [ecx+32], xmm7
	movups	XMMWORD PTR [ecx+48], xmm6
	pop	ebp
	ret	4
??0?$tdualquat@N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::tdualquat<double,1>::tdualquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@0@Z PROC	; glm::tdualquat<double,1>::tdualquat<double,1>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@0@Z ENDP	; glm::tdualquat<double,1>::tdualquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@ABU?$vec@$02N$00@1@@Z
_TEXT	SEGMENT
tv276 = -16						; size = 8
tv265 = -8						; size = 8
_q$ = 8							; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@ABU?$vec@$02N$00@1@@Z PROC ; glm::tdualquat<double,1>::tdualquat<double,1>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR [edx+8]
	movsd	xmm5, QWORD PTR [eax]
	movsd	xmm6, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [edx+24]
	movsd	xmm2, QWORD PTR [eax+8]
	movaps	xmm1, xmm3
	movsd	xmm4, QWORD PTR [eax+16]

; 66   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR tv265[ebp], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm2
	movsd	xmm7, QWORD PTR [edx]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv276[ebp], xmm2
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm5
	mulsd	xmm6, xmm4
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR tv276[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm7
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm0, xmm7
	mulsd	xmm7, xmm5
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulsd	xmm1, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm3
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv265[ebp]
	mulsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm1, xmm2
	addsd	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addsd	xmm0, xmm6
	mulsd	xmm0, QWORD PTR __real@bfe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+56], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@ABU?$vec@$02N$00@1@@Z ENDP ; glm::tdualquat<double,1>::tdualquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@@Z PROC	; glm::tdualquat<double,1>::tdualquat<double,1>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@N$00@glm@@QAE@ABU?$tquat@N$00@1@@Z ENDP	; glm::tdualquat<double,1>::tdualquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$00@glm@@QBEABU?$tquat@N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$00@glm@@QBEABU?$tquat@N$00@1@H@Z PROC	; glm::tdualquat<double,1>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$00@glm@@QBEABU?$tquat@N$00@1@H@Z ENDP	; glm::tdualquat<double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$00@glm@@QAEAAU?$tquat@N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$00@glm@@QAEAAU?$tquat@N$00@1@H@Z PROC	; glm::tdualquat<double,1>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$00@glm@@QAEAAU?$tquat@N$00@1@H@Z ENDP	; glm::tdualquat<double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@N$00@glm@@SAHXZ PROC		; glm::tdualquat<double,1>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@N$00@glm@@SAHXZ ENDP		; glm::tdualquat<double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
_real$1$sroa$572$1$ = -52				; size = 4
_dual$2 = -48						; size = 16
$T3 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::tdualquat<float,1>::tdualquat<float,1>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 56					; 00000038H
	push	esi

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _m$[ebp]

; 90   : 	{

	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN148@tdualquat
$LN4@tdualquat:
	comiss	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comiss	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN149@tdualquat
$LN6@tdualquat:
	comiss	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+4]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN150@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN148@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN149@tdualquat:
	mulss	xmm5, xmm0
$LN150@tdualquat:
	movss	xmm3, DWORD PTR [esi+28]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	xmm4, DWORD PTR [esi+12]
	movaps	xmm0, xmm3
	movss	xmm2, DWORD PTR [esi+44]
	movss	DWORD PTR _real$1$sroa$572$1$[esp+64], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	mulss	xmm0, xmm6

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+64], xmm7
	movss	DWORD PTR $T3[esp+68], xmm5

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+72], xmm6

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+64], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm0, xmm3
	mulss	xmm0, xmm7

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+68], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	movss	DWORD PTR $T3[esp+76], xmm0

; 91   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T3[esp+64]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2
	mulss	xmm1, DWORD PTR __real@3f000000

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$2[esp+72], xmm1
	movss	DWORD PTR _dual$2[esp+76], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR _dual$2[esp+64]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm1

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::tdualquat<float,1>::tdualquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 32
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::tdualquat<float,1>::tdualquat<float,1>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR [eax]

; 86   : 	}

	mov	eax, ecx

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR $T1[ebp], xmm0

; 85   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 86   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::tdualquat<float,1>::tdualquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@0@Z PROC	; glm::tdualquat<float,1>::tdualquat<float,1>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@0@Z ENDP	; glm::tdualquat<float,1>::tdualquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@ABU?$vec@$02M$00@1@@Z
_TEXT	SEGMENT
tv266 = 8						; size = 4
_q$ = 8							; size = 4
tv277 = 12						; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@ABU?$vec@$02M$00@1@@Z PROC ; glm::tdualquat<float,1>::tdualquat<float,1>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [edx+4]
	movss	xmm5, DWORD PTR [eax]
	movss	xmm6, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [edx+12]
	movss	xmm2, DWORD PTR [eax+4]
	movaps	xmm1, xmm3
	movss	xmm4, DWORD PTR [eax+8]

; 66   : 	{}

	mov	eax, ecx
	movss	DWORD PTR tv266[ebp], xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm2
	movss	xmm7, DWORD PTR [edx]
	mulss	xmm1, xmm5
	movss	DWORD PTR tv277[ebp], xmm2
	movss	xmm2, DWORD PTR __real@3f000000
	addss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm5
	mulss	xmm6, xmm4
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR tv277[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv277[ebp]
	mulss	xmm0, xmm7
	mulss	xmm7, xmm5
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+20], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv266[ebp]
	mulss	xmm0, DWORD PTR tv277[ebp]
	addss	xmm0, xmm7
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addss	xmm0, xmm6
	mulss	xmm0, DWORD PTR __real@bf000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+28], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	pop	ebp
	ret	8
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@ABU?$vec@$02M$00@1@@Z ENDP ; glm::tdualquat<float,1>::tdualquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@@Z PROC	; glm::tdualquat<float,1>::tdualquat<float,1>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@M$00@glm@@QAE@ABU?$tquat@M$00@1@@Z ENDP	; glm::tdualquat<float,1>::tdualquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$00@glm@@QBEABU?$tquat@M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$00@glm@@QBEABU?$tquat@M$00@1@H@Z PROC	; glm::tdualquat<float,1>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$00@glm@@QBEABU?$tquat@M$00@1@H@Z ENDP	; glm::tdualquat<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$00@glm@@QAEAAU?$tquat@M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$00@glm@@QAEAAU?$tquat@M$00@1@H@Z PROC	; glm::tdualquat<float,1>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$00@glm@@QAEAAU?$tquat@M$00@1@H@Z ENDP	; glm::tdualquat<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@M$00@glm@@SAHXZ PROC		; glm::tdualquat<float,1>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@M$00@glm@@SAHXZ ENDP		; glm::tdualquat<float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_real$1$ = -32						; size = 8
_real$3$ = -24						; size = 8
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::tdualquat<double,2>::tdualquat<double,2>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movsd	xmm0, QWORD PTR [esi]
	movsd	xmm1, QWORD PTR [esi+40]
	movaps	xmm3, xmm0
	movsd	xmm2, QWORD PTR [esi+80]
	addsd	xmm3, xmm1
	addsd	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comisd	xmm3, QWORD PTR __real@0000000000000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addsd	xmm3, QWORD PTR __real@3ff0000000000000
	movaps	xmm0, xmm3
	call	__libm_sse2_sqrt_precise

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	divsd	xmm1, xmm0

; 315  : 			real.w = static_cast<T>(0.5) * r;
; 316  : 			real.x = (x[2].y - x[1].z) * invr;
; 317  : 			real.y = (x[0].z - x[2].x) * invr;
; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movsd	xmm7, QWORD PTR [esi+32]
	subsd	xmm7, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+72]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, QWORD PTR [esi+48]
	subsd	xmm3, QWORD PTR [esi+64]
	mulsd	xmm7, xmm1

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN121@tdualquat
$LN4@tdualquat:
	comisd	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comisd	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	subsd	xmm0, xmm1
	subsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm4, xmm0
	divsd	xmm1, xmm4

; 324  : 			real.x = static_cast<T>(0.5)*r;
; 325  : 			real.y = (x[1].x + x[0].y) * invr;
; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movsd	xmm7, QWORD PTR [esi+64]

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movsd	xmm0, QWORD PTR [esi+72]
	addsd	xmm7, QWORD PTR [esi+16]
	subsd	xmm0, QWORD PTR [esi+48]
	movsd	xmm3, QWORD PTR [esi+32]
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm3, QWORD PTR [esi+8]
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN122@tdualquat
$LN6@tdualquat:
	comisd	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addsd	xmm1, QWORD PTR __real@3ff0000000000000
	subsd	xmm1, xmm0
	subsd	xmm1, xmm2
	movaps	xmm0, xmm1
	call	__libm_sse2_sqrt_precise

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm3, xmm0
	divsd	xmm1, xmm3

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movsd	xmm4, QWORD PTR [esi+32]

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movsd	xmm7, QWORD PTR [esi+72]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movsd	xmm0, QWORD PTR [esi+16]
	addsd	xmm4, QWORD PTR [esi+8]
	addsd	xmm7, QWORD PTR [esi+48]
	subsd	xmm0, QWORD PTR [esi+64]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	mulsd	xmm4, xmm1
	mulsd	xmm7, xmm1
	mulsd	xmm0, xmm1

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN123@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addsd	xmm2, QWORD PTR __real@3ff0000000000000
	subsd	xmm2, xmm0
	subsd	xmm2, xmm1
	movaps	xmm0, xmm2
	call	__libm_sse2_sqrt_precise

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	movaps	xmm7, xmm0
	divsd	xmm1, xmm7

; 342  : 			real.x = (x[0].z + x[2].x) * invr;
; 343  : 			real.y = (x[2].y + x[1].z) * invr;
; 344  : 			real.z = static_cast<T>(0.5) * r;
; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movsd	xmm0, QWORD PTR [esi+32]
	subsd	xmm0, QWORD PTR [esi+8]
	movsd	xmm4, QWORD PTR [esi+64]
	movsd	xmm3, QWORD PTR [esi+72]
	addsd	xmm4, QWORD PTR [esi+16]
	addsd	xmm3, QWORD PTR [esi+48]
	mulsd	xmm7, QWORD PTR __real@3fe0000000000000
	mulsd	xmm0, xmm1
$LN121@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulsd	xmm4, xmm1
$LN122@tdualquat:
	mulsd	xmm3, xmm1
$LN123@tdualquat:
	movsd	xmm2, QWORD PTR [esi+56]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movsd	xmm5, QWORD PTR [esi+24]
	movaps	xmm6, xmm2
	movsd	xmm1, QWORD PTR [esi+88]
	movsd	QWORD PTR _real$1$[esp+40], xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm6, xmm7
	movsd	QWORD PTR _real$3$[esp+40], xmm3
	movups	XMMWORD PTR $T1[esp+40], xmm4
	addsd	xmm6, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm3

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm3, xmm2
	mulsd	xmm3, QWORD PTR _real$1$[esp+40]
	subsd	xmm6, xmm0
	movaps	xmm0, xmm5
	mulsd	xmm0, xmm7
	mulsd	xmm6, QWORD PTR __real@3fe0000000000000
	subsd	xmm3, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm4

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm4, xmm5
	mulsd	xmm4, QWORD PTR _real$3$[esp+40]
	addsd	xmm3, xmm0
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR $T1[esp+40]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm2, QWORD PTR _real$3$[esp+40]
	mulsd	xmm3, QWORD PTR __real@3fe0000000000000
	subsd	xmm4, xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, QWORD PTR _real$1$[esp+40]
	mulsd	xmm1, xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm6, xmm3

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	addsd	xmm4, xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	movups	xmm0, XMMWORD PTR $T1[esp+40]
	mulsd	xmm5, xmm0
	mulsd	xmm4, QWORD PTR __real@3fe0000000000000
	addsd	xmm5, xmm2
	addsd	xmm5, xmm1

; 70   : 		: real(r), dual(d)

	movsd	xmm1, QWORD PTR _real$3$[esp+40]
	unpcklpd xmm0, xmm1
	movsd	xmm1, QWORD PTR _real$1$[esp+40]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulsd	xmm5, QWORD PTR __real@bfe0000000000000

; 70   : 		: real(r), dual(d)

	unpcklpd xmm7, xmm1

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm7

; 70   : 		: real(r), dual(d)

	unpcklpd xmm4, xmm5

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+32], xmm6
	movups	XMMWORD PTR [edi+48], xmm4

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::tdualquat<double,2>::tdualquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::tdualquat<double,2>::tdualquat<double,2>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm5, XMMWORD PTR [eax]
	movups	xmm4, XMMWORD PTR [eax+16]
	movups	xmm7, XMMWORD PTR [eax+32]
	movups	xmm6, XMMWORD PTR [eax+48]

; 85   : 		*this = dualquat_cast(m);
; 86   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm5
	movups	XMMWORD PTR [ecx+16], xmm4
	movups	XMMWORD PTR [ecx+32], xmm7
	movups	XMMWORD PTR [ecx+48], xmm6
	pop	ebp
	ret	4
??0?$tdualquat@N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::tdualquat<double,2>::tdualquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@0@Z PROC	; glm::tdualquat<double,2>::tdualquat<double,2>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@0@Z ENDP	; glm::tdualquat<double,2>::tdualquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@ABU?$vec@$02N$01@1@@Z
_TEXT	SEGMENT
tv276 = -16						; size = 8
tv265 = -8						; size = 8
_q$ = 8							; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@ABU?$vec@$02N$01@1@@Z PROC ; glm::tdualquat<double,2>::tdualquat<double,2>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR [edx+8]
	movsd	xmm5, QWORD PTR [eax]
	movsd	xmm6, QWORD PTR [edx+16]
	movsd	xmm3, QWORD PTR [edx+24]
	movsd	xmm2, QWORD PTR [eax+8]
	movaps	xmm1, xmm3
	movsd	xmm4, QWORD PTR [eax+16]

; 66   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR tv265[ebp], xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm2
	movsd	xmm7, QWORD PTR [edx]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv276[ebp], xmm2
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm6
	mulsd	xmm0, xmm5
	mulsd	xmm6, xmm4
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulsd	xmm1, QWORD PTR tv276[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm7
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm0, xmm7
	mulsd	xmm7, xmm5
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulsd	xmm1, QWORD PTR tv265[ebp]
	subsd	xmm1, xmm0
	movaps	xmm0, xmm4
	mulsd	xmm0, xmm3
	addsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv265[ebp]
	mulsd	xmm0, QWORD PTR tv276[ebp]
	mulsd	xmm1, xmm2
	addsd	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addsd	xmm0, xmm6
	mulsd	xmm0, QWORD PTR __real@bfe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR [ecx+56], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@ABU?$vec@$02N$01@1@@Z ENDP ; glm::tdualquat<double,2>::tdualquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@@Z PROC	; glm::tdualquat<double,2>::tdualquat<double,2>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@N$01@glm@@QAE@ABU?$tquat@N$01@1@@Z ENDP	; glm::tdualquat<double,2>::tdualquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$01@glm@@QBEABU?$tquat@N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$01@glm@@QBEABU?$tquat@N$01@1@H@Z PROC	; glm::tdualquat<double,2>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$01@glm@@QBEABU?$tquat@N$01@1@H@Z ENDP	; glm::tdualquat<double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@N$01@glm@@QAEAAU?$tquat@N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@N$01@glm@@QAEAAU?$tquat@N$01@1@H@Z PROC	; glm::tdualquat<double,2>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@N$01@glm@@QAEAAU?$tquat@N$01@1@H@Z ENDP	; glm::tdualquat<double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@N$01@glm@@SAHXZ PROC		; glm::tdualquat<double,2>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@N$01@glm@@SAHXZ ENDP		; glm::tdualquat<double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
_real$1$sroa$572$1$ = -52				; size = 4
_dual$2 = -48						; size = 16
$T3 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::tdualquat<float,2>::tdualquat<float,2>, COMDAT
; _this$ = ecx

; 90   : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 56					; 00000038H
	push	esi

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	mov	esi, DWORD PTR _m$[ebp]

; 90   : 	{

	push	edi
	mov	edi, ecx

; 310  : 		T const trace = x[0].x + x[1].y + x[2].z;

	movss	xmm0, DWORD PTR [esi]
	movss	xmm1, DWORD PTR [esi+20]
	movaps	xmm3, xmm0
	movss	xmm2, DWORD PTR [esi+40]
	addss	xmm3, xmm1
	addss	xmm3, xmm2

; 311  : 		if(trace > static_cast<T>(0))

	comiss	xmm3, DWORD PTR __real@00000000
	jbe	SHORT $LN4@tdualquat

; 312  : 		{
; 313  : 			T const r = sqrt(T(1) + trace);

	addss	xmm3, DWORD PTR __real@3f800000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	movss	xmm6, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 314  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 318  : 			real.z = (x[1].x - x[0].y) * invr;

	subss	xmm6, DWORD PTR [esi+4]
	divss	xmm0, xmm1
	movss	xmm7, DWORD PTR [esi+36]
	movss	xmm5, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm7, DWORD PTR [esi+24]
	subss	xmm5, DWORD PTR [esi+32]
	mulss	xmm6, xmm0

; 319  : 		}
; 320  : 		else if(x[0].x > x[1].y && x[0].x > x[2].z)

	jmp	$LN148@tdualquat
$LN4@tdualquat:
	comiss	xmm0, xmm1
	jbe	SHORT $LN6@tdualquat
	comiss	xmm0, xmm2
	jbe	SHORT $LN6@tdualquat

; 321  : 		{
; 322  : 			T const r = sqrt(T(1) + x[0].x - x[1].y - x[2].z);

	addss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	subss	xmm0, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	xorps	xmm7, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 326  : 			real.z = (x[0].z + x[2].x) * invr;

	movss	xmm6, DWORD PTR [esi+32]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm7, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 323  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 327  : 			real.w = (x[2].y - x[1].z) * invr;

	movss	xmm1, DWORD PTR [esi+36]
	addss	xmm6, DWORD PTR [esi+8]
	subss	xmm1, DWORD PTR [esi+24]
	divss	xmm0, xmm7
	movss	xmm5, DWORD PTR [esi+16]
	mulss	xmm7, DWORD PTR __real@3f000000
	addss	xmm5, DWORD PTR [esi+4]
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 328  : 		}
; 329  : 		else if(x[1].y > x[2].z)

	jmp	$LN149@tdualquat
$LN6@tdualquat:
	comiss	xmm1, xmm2
	jbe	SHORT $LN8@tdualquat

; 330  : 		{
; 331  : 			T const r = sqrt(T(1) + x[1].y - x[0].x - x[2].z);

	addss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	subss	xmm1, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm1
	call	__libm_sse2_sqrt_precise
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 333  : 			real.x = (x[1].x + x[0].y) * invr;

	movss	xmm7, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm5, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 332  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 334  : 			real.y = static_cast<T>(0.5) * r;
; 335  : 			real.z = (x[2].y + x[1].z) * invr;

	movss	xmm6, DWORD PTR [esi+36]

; 336  : 			real.w = (x[0].z - x[2].x) * invr;

	movss	xmm1, DWORD PTR [esi+8]
	divss	xmm0, xmm5
	addss	xmm7, DWORD PTR [esi+4]
	addss	xmm6, DWORD PTR [esi+24]
	subss	xmm1, DWORD PTR [esi+32]
	mulss	xmm5, DWORD PTR __real@3f000000
	mulss	xmm7, xmm0
	mulss	xmm6, xmm0
	mulss	xmm1, xmm0

; 337  : 		}
; 338  : 		else

	jmp	SHORT $LN150@tdualquat
$LN8@tdualquat:

; 339  : 		{
; 340  : 			T const r = sqrt(T(1) + x[2].z - x[0].x - x[1].y);

	addss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm0
	subss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
	xorps	xmm6, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	movss	xmm1, DWORD PTR [esi+16]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm6, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 341  : 			T const invr = static_cast<T>(0.5) / r;

	movss	xmm0, DWORD PTR __real@3f000000

; 345  : 			real.w = (x[1].x - x[0].y) * invr;

	subss	xmm1, DWORD PTR [esi+4]
	divss	xmm0, xmm6
	movss	xmm7, DWORD PTR [esi+32]
	movss	xmm5, DWORD PTR [esi+36]
	addss	xmm7, DWORD PTR [esi+8]
	addss	xmm5, DWORD PTR [esi+24]
	mulss	xmm6, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
$LN148@tdualquat:

; 346  : 		}
; 347  : 
; 348  : 		tquat<T, Q> dual;
; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	mulss	xmm7, xmm0
$LN149@tdualquat:
	mulss	xmm5, xmm0
$LN150@tdualquat:
	movss	xmm3, DWORD PTR [esi+28]

; 92   : 	}

	mov	eax, edi

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movss	xmm4, DWORD PTR [esi+12]
	movaps	xmm0, xmm3
	movss	xmm2, DWORD PTR [esi+44]
	movss	DWORD PTR _real$1$sroa$572$1$[esp+64], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	mulss	xmm0, xmm6

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+64], xmm7
	movss	DWORD PTR $T3[esp+68], xmm5

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	DWORD PTR $T3[esp+72], xmm6

; 349  : 		dual.x =  static_cast<T>(0.5) * ( x[0].w * real.w + x[1].w * real.z - x[2].w * real.y);

	movaps	xmm0, xmm2
	mulss	xmm0, xmm5
	subss	xmm1, xmm0

; 350  : 		dual.y =  static_cast<T>(0.5) * (-x[0].w * real.z + x[1].w * real.w + x[2].w * real.x);

	movaps	xmm0, xmm4
	mulss	xmm0, xmm6
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+64], xmm1
	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR _real$1$sroa$572$1$[esp+64]
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, xmm7
	addss	xmm1, xmm0

; 351  : 		dual.z =  static_cast<T>(0.5) * ( x[0].w * real.y - x[1].w * real.x + x[2].w * real.w);

	movaps	xmm0, xmm3
	mulss	xmm0, xmm7

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm3, xmm5
	mulss	xmm1, DWORD PTR __real@3f000000
	movss	DWORD PTR _dual$2[esp+68], xmm1
	movaps	xmm1, xmm4
	mulss	xmm1, xmm5
	mulss	xmm4, xmm7
	subss	xmm1, xmm0
	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	addss	xmm4, xmm3
	mulss	xmm2, xmm6
	addss	xmm1, xmm0

; 70   : 		: real(r), dual(d)

	movss	xmm0, DWORD PTR _real$1$sroa$572$1$[esp+64]
	movss	DWORD PTR $T3[esp+76], xmm0

; 91   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T3[esp+64]

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	addss	xmm4, xmm2
	mulss	xmm1, DWORD PTR __real@3f000000

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi], xmm0

; 352  : 		dual.w = -static_cast<T>(0.5) * ( x[0].w * real.x + x[1].w * real.y + x[2].w * real.z);

	mulss	xmm4, DWORD PTR __real@bf000000
	movss	DWORD PTR _dual$2[esp+72], xmm1
	movss	DWORD PTR _dual$2[esp+76], xmm4

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR _dual$2[esp+64]

; 91   : 		*this = dualquat_cast(m);

	movups	XMMWORD PTR [edi+16], xmm1

; 92   : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::tdualquat<float,2>::tdualquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -48						; size = 32
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::tdualquat<float,2>::tdualquat<float,2>, COMDAT
; _this$ = ecx

; 84   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 70   : 		: real(r), dual(d)

	movups	xmm0, XMMWORD PTR [eax]

; 86   : 	}

	mov	eax, ecx

; 70   : 		: real(r), dual(d)

	movups	xmm1, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR $T1[ebp], xmm0

; 85   : 		*this = dualquat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 86   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tdualquat@M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::tdualquat<float,2>::tdualquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_d$ = 12						; size = 4
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@0@Z PROC	; glm::tdualquat<float,2>::tdualquat<float,2>, COMDAT
; _this$ = ecx

; 71   : 	{}

	push	ebp
	mov	ebp, esp

; 70   : 		: real(r), dual(d)

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	mov	eax, DWORD PTR _d$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@0@Z ENDP	; glm::tdualquat<float,2>::tdualquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@ABU?$vec@$02M$01@1@@Z
_TEXT	SEGMENT
tv266 = 8						; size = 4
_q$ = 8							; size = 4
tv277 = 12						; size = 4
_p$ = 12						; size = 4
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@ABU?$vec@$02M$01@1@@Z PROC ; glm::tdualquat<float,2>::tdualquat<float,2>, COMDAT
; _this$ = ecx

; 66   : 	{}

	push	ebp
	mov	ebp, esp

; 61   : 		: real(q), dual(

	mov	edx, DWORD PTR _q$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [edx+4]
	movss	xmm5, DWORD PTR [eax]
	movss	xmm6, DWORD PTR [edx+8]
	movss	xmm3, DWORD PTR [edx+12]
	movss	xmm2, DWORD PTR [eax+4]
	movaps	xmm1, xmm3
	movss	xmm4, DWORD PTR [eax+8]

; 66   : 	{}

	mov	eax, ecx
	movss	DWORD PTR tv266[ebp], xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm2
	movss	xmm7, DWORD PTR [edx]
	mulss	xmm1, xmm5
	movss	DWORD PTR tv277[ebp], xmm2
	movss	xmm2, DWORD PTR __real@3f000000
	addss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm6
	mulss	xmm0, xmm5
	mulss	xmm6, xmm4
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm3
	mulss	xmm1, DWORD PTR tv277[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm7
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv277[ebp]
	mulss	xmm0, xmm7
	mulss	xmm7, xmm5
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+20], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	movaps	xmm1, xmm5
	mulss	xmm1, DWORD PTR tv266[ebp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm4
	mulss	xmm0, xmm3
	addss	xmm1, xmm0
	movss	xmm0, DWORD PTR tv266[ebp]
	mulss	xmm0, DWORD PTR tv277[ebp]
	addss	xmm0, xmm7
	mulss	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 61   : 		: real(q), dual(

	addss	xmm0, xmm6
	mulss	xmm0, DWORD PTR __real@bf000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR [ecx+28], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 66   : 	{}

	pop	ebp
	ret	8
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@ABU?$vec@$02M$01@1@@Z ENDP ; glm::tdualquat<float,2>::tdualquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@@Z PROC	; glm::tdualquat<float,2>::tdualquat<float,2>, COMDAT
; _this$ = ecx

; 57   : 	{}

	push	ebp
	mov	ebp, esp

; 56   : 		: real(r), dual(tquat<T, Q>(0, 0, 0, 0))

	mov	eax, DWORD PTR _r$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 57   : 	{}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR [ecx+16], 0
	mov	DWORD PTR [ecx+20], 0
	mov	DWORD PTR [ecx+24], 0
	mov	DWORD PTR [ecx+28], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl

; 57   : 	{}

	pop	ebp
	ret	4
??0?$tdualquat@M$01@glm@@QAE@ABU?$tquat@M$01@1@@Z ENDP	; glm::tdualquat<float,2>::tdualquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$01@glm@@QBEABU?$tquat@M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$01@glm@@QBEABU?$tquat@M$01@1@H@Z PROC	; glm::tdualquat<float,2>::operator[], COMDAT
; _this$ = ecx

; 20   : 	{

	push	ebp
	mov	ebp, esp

; 21   : 		assert(i >= 0 && i < this->length());
; 22   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 23   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$01@glm@@QBEABU?$tquat@M$01@1@H@Z ENDP	; glm::tdualquat<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.inl
;	COMDAT ??A?$tdualquat@M$01@glm@@QAEAAU?$tquat@M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tdualquat@M$01@glm@@QAEAAU?$tquat@M$01@1@H@Z PROC	; glm::tdualquat<float,2>::operator[], COMDAT
; _this$ = ecx

; 13   : 	{

	push	ebp
	mov	ebp, esp

; 14   : 		assert(i >= 0 && i < this->length());
; 15   : 		return (&real)[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 16   : 	}

	pop	ebp
	ret	4
??A?$tdualquat@M$01@glm@@QAEAAU?$tquat@M$01@1@H@Z ENDP	; glm::tdualquat<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtx\dual_quaternion.hpp
;	COMDAT ?length@?$tdualquat@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tdualquat@M$01@glm@@SAHXZ PROC		; glm::tdualquat<float,2>::length, COMDAT

; 52   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$tdualquat@M$01@glm@@SAHXZ ENDP		; glm::tdualquat<float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -108						; size = 32
$T2 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 195  : 	{

	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T2[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T2[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T2[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T2[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T2[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T2[ebp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z ; glm::quat_cast<double,0>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@N$0A@@glm@@YA?AU?$tquat@N$0A@@0@ABU?$mat@$02$02N$0A@@0@@Z ; glm::quat_cast<double,0>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z
_TEXT	SEGMENT
_c$$sroa$144$ = -48					; size = 8
tv245 = -40						; size = 8
_c$$sroa$148$ = -40					; size = 8
_c$$sroa$152$ = -32					; size = 8
tv243 = -24						; size = 8
_s$$sroa$133$ = -24					; size = 8
$T2$sroa$142$1$ = -16					; size = 8
$T1$sroa$155$1$ = -16					; size = 8
_s$$sroa$132$ = -16					; size = 8
$T2$sroa$136$1$ = -8					; size = 8
$T1$sroa$156$1$ = -8					; size = 8
_s$$sroa$71$ = -8					; size = 8
_eulerAngle$ = 8					; size = 4
??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z PROC	; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T1$sroa$156$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T1$sroa$155$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$156$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$152$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$155$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$148$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$144$[ebp]

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$142$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$136$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$142$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$136$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$132$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm2, QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm7, QWORD PTR _c$$sroa$152$[ebp]
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _s$$sroa$132$[ebp]
	movaps	xmm1, xmm7

; 185  : 	}

	mov	eax, edi
	movsd	xmm5, QWORD PTR _c$$sroa$148$[ebp]
	movsd	xmm6, QWORD PTR _c$$sroa$144$[ebp]
	mulsd	xmm7, QWORD PTR _s$$sroa$132$[ebp]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv243[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$71$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm4, QWORD PTR _s$$sroa$71$[ebp]
	movsd	QWORD PTR tv245[ebp], xmm1
	mulsd	xmm1, xmm6
	mulsd	xmm0, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;

	mulsd	xmm5, xmm2
	addsd	xmm1, xmm0
	movaps	xmm0, xmm7
	mulsd	xmm0, xmm4

; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;

	mulsd	xmm7, xmm6
	movsd	QWORD PTR [edi+24], xmm1
	movaps	xmm1, xmm5
	mulsd	xmm1, xmm6
	mulsd	xmm5, xmm4
	subsd	xmm1, xmm0

; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	movsd	xmm0, QWORD PTR tv245[ebp]
	mulsd	xmm0, xmm4
	addsd	xmm7, xmm5
	movsd	QWORD PTR [edi], xmm1
	movsd	xmm1, QWORD PTR tv243[ebp]
	mulsd	xmm1, xmm6
	movsd	QWORD PTR [edi+8], xmm7
	subsd	xmm0, xmm1
	movsd	QWORD PTR [edi+16], xmm0

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@@Z ENDP	; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z
_TEXT	SEGMENT
_this$1$ = -76						; size = 4
_t$1$ = -72						; size = 8
_real_part$1$ = -64					; size = 8
_t$ = -56						; size = 24
$T2 = -32						; size = 32
$T3 = -32						; size = 24
$T4 = -32						; size = 24
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z PROC	; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 80					; 00000050H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+88], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm5, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movaps	xmm1, xmm5
	movsd	xmm3, QWORD PTR [edi+8]
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm5
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	addsd	xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm2, xmm1
	addsd	xmm0, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR [edi+8]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm5, xmm2
	movsd	xmm4, QWORD PTR [esi+8]
	movsd	xmm7, QWORD PTR [esi]
	movsd	xmm6, QWORD PTR [edi+16]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm5, xmm4
	mulsd	xmm1, xmm7

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm5, xmm1

; 635  : 		return vec<3, T, Q>(

	movaps	xmm1, xmm6
	mulsd	xmm1, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm5, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addsd	xmm5, xmm0

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulsd	xmm0, QWORD PTR __real@3eb0c6f7a0000000
	comisd	xmm0, xmm5
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	movaps	xmm0, xmm3
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comisd	xmm2, xmm0
	xorps	xmm6, xmm6
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN5@tquat
	xorps	xmm4, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T4[esp+88], xmm4
	movsd	QWORD PTR $T4[esp+96], xmm7
	movsd	QWORD PTR $T4[esp+104], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm3, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T3[esp+88], xmm6
	movsd	QWORD PTR $T3[esp+96], xmm3
	movsd	QWORD PTR $T3[esp+104], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm6
	mulsd	xmm0, xmm3
	mulsd	xmm1, xmm4
	mulsd	xmm6, xmm7
	mulsd	xmm2, xmm7
	subsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm3
	movsd	xmm3, QWORD PTR [edi]
	mulsd	xmm3, xmm4
	subsd	xmm0, xmm6
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR _t$[esp+88], xmm1
$LN66@tquat:

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR _t$1$[esp+88], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm2, QWORD PTR _t$[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm1, QWORD PTR _t$[esp+96]
	mulsd	xmm1, xmm1

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm1
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1

; 407  : 		if(len <= T(0)) // Problem

	comisd	xmm1, xmm0
	jb	SHORT $LN52@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]
	xorps	xmm0, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN52@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]

; 173  : 	}

	pop	edi
	pop	esi

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR _t$[esp+80]
	unpcklpd xmm1, xmm1
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[esp+80], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movaps	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm1, QWORD PTR _real_part$1$[esp+80]

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	mulsd	xmm0, QWORD PTR _t$1$[esp+80]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T2[esp+104], xmm1
	movsd	QWORD PTR $T2[esp+96], xmm0
	movups	xmm0, XMMWORD PTR $T2[esp+80]
	movups	xmm1, XMMWORD PTR $T2[esp+96]

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z ENDP	; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$03$03N$0A@@1@XZ
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$03$03N$0A@@1@XZ PROC	; glm::tquat<double,0>::operator glm::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [ecx+8]
	movsd	xmm3, QWORD PTR [ecx]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [ecx+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 625  : 		T qxz(q.x * q.z);

	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [ecx+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm5, xmm5
	addsd	xmm7, xmm7
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+32], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	unpcklpd xmm4, xmm1
	movups	XMMWORD PTR [eax+64], xmm0
	movups	XMMWORD PTR [eax+80], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+96], xmm0
	movups	XMMWORD PTR [eax+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$03$03N$0A@@1@XZ ENDP	; glm::tquat<double,0>::operator glm::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$02$02N$0A@@1@XZ
_TEXT	SEGMENT
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$02$02N$0A@@1@XZ PROC	; glm::tquat<double,0>::operator glm::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	movups	XMMWORD PTR [eax+24], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movq	QWORD PTR [eax+16], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [eax+48], xmm0
	movq	QWORD PTR [eax+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movq	QWORD PTR [eax+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movsd	xmm2, QWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm1
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulsd	xmm5, xmm0
	movaps	xmm7, xmm0
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm2
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [ecx+24]
	movaps	xmm6, xmm3
	mulsd	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulsd	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	mulsd	xmm3, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm5, QWORD PTR _qxx$1$[ebp]
	addsd	xmm1, xmm1
	addsd	xmm5, xmm5
	subsd	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm1, QWORD PTR _qyz$1$[ebp]
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm7
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, xmm7
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm5
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm6
	addsd	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm1, xmm6
	addsd	xmm0, xmm0
	addsd	xmm1, xmm1
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm1
	addsd	xmm0, xmm0
	subsd	xmm4, xmm0
	movsd	QWORD PTR [eax+64], xmm4

; 203  : 		return mat3_cast(*this);
; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$0A@@glm@@QAE?AU?$mat@$02$02N$0A@@1@XZ ENDP	; glm::tquat<double,0>::operator glm::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__w$ = 8						; size = 8
__x$ = 16						; size = 8
__y$ = 24						; size = 8
__z$ = 32						; size = 8
??0?$tquat@N$0A@@glm@@QAE@NNNN@Z PROC			; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$tquat@N$0A@@glm@@QAE@NNNN@Z ENDP			; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$0A@@glm@@QAE@NABU?$vec@$02N$0A@@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 8
_v$ = 16						; size = 4
??0?$tquat@N$0A@@glm@@QAE@NABU?$vec@$02N$0A@@1@@Z PROC	; glm::tquat<double,0>::tquat<double,0>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR [eax+16]

; 115  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$tquat@N$0A@@glm@@QAE@NABU?$vec@$02N$0A@@1@@Z ENDP	; glm::tquat<double,0>::tquat<double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$0A@@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$0A@@glm@@QBEABNH@Z PROC			; glm::tquat<double,0>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$0A@@glm@@QBEABNH@Z ENDP			; glm::tquat<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$0A@@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$0A@@glm@@QAEAANH@Z PROC			; glm::tquat<double,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$0A@@glm@@QAEAANH@Z ENDP			; glm::tquat<double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@N$0A@@glm@@SAHXZ PROC			; glm::tquat<double,0>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@N$0A@@glm@@SAHXZ ENDP			; glm::tquat<double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -56						; size = 16
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -52						; size = 12
$T5 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movq	QWORD PTR $T5[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T5[ebp+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T5[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T5[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movq	QWORD PTR $T5[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T5[ebp+24], xmm2
	mov	DWORD PTR $T5[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z ; glm::quat_cast<float,0>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@M$0A@@glm@@YA?AU?$tquat@M$0A@@0@ABU?$mat@$02$02M$0A@@0@@Z ; glm::quat_cast<float,0>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z
_TEXT	SEGMENT
tv574 = -32						; size = 8
tv575 = -24						; size = 4
tv560 = -20						; size = 8
tv557 = -16						; size = 4
tv573 = -12						; size = 8
tv556 = -8						; size = 4
tv571 = -4						; size = 4
tv572 = 8						; size = 4
_eulerAngle$ = 8					; size = 4
??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z PROC	; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv560[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv572[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+4]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv573[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv575[ebp], xmm0
	cvtps2pd xmm0, xmm1
	movsd	QWORD PTR tv574[ebp], xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv571[ebp], xmm0

; 750  :             return (float)sin(_X);

	movsd	xmm0, QWORD PTR tv560[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv557[ebp], xmm0
	movsd	xmm0, QWORD PTR tv573[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv556[ebp], xmm0
	movsd	xmm0, QWORD PTR tv574[ebp]
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm5, DWORD PTR tv556[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	xorps	xmm4, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm7, DWORD PTR tv557[ebp]
	movaps	xmm3, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movss	xmm2, DWORD PTR tv575[ebp]

; 185  : 	}

	mov	eax, edi
	mulss	xmm2, DWORD PTR tv572[ebp]
	mulss	xmm5, DWORD PTR tv572[ebp]
	movss	xmm6, DWORD PTR tv571[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mulss	xmm3, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR tv571[ebp]
	mulss	xmm7, DWORD PTR tv575[ebp]
	movaps	xmm1, xmm3
	mulss	xmm1, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;
; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;
; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	mulss	xmm2, xmm4
	addss	xmm1, xmm0
	mulss	xmm3, xmm6
	movaps	xmm0, xmm5
	mulss	xmm5, xmm6
	mulss	xmm0, xmm4
	subss	xmm2, xmm3
	movss	DWORD PTR [edi+12], xmm1
	movaps	xmm1, xmm7
	mulss	xmm1, xmm6
	mulss	xmm7, xmm4
	subss	xmm1, xmm0
	movss	DWORD PTR [edi+8], xmm2
	addss	xmm7, xmm5
	movss	DWORD PTR [edi], xmm1
	movss	DWORD PTR [edi+4], xmm7

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@@Z ENDP	; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
_t$ = -28						; size = 12
$T1 = -16						; size = 16
$T2 = -16						; size = 12
$T3 = -16						; size = 12
$T4 = -16						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z PROC	; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+40], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm3
	movss	xmm2, DWORD PTR [edi+4]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm3

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm2, xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm2, DWORD PTR [edi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm4, DWORD PTR [esi+4]
	movaps	xmm3, xmm2
	movss	xmm6, DWORD PTR [esi]
	movss	xmm7, DWORD PTR [edi+8]
	movss	xmm5, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi]
	mulss	xmm3, xmm4
	mulss	xmm0, xmm6

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movaps	xmm0, xmm7
	mulss	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addss	xmm3, xmm1

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulss	xmm1, DWORD PTR __real@358637bd
	comiss	xmm1, xmm3
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movaps	xmm0, xmm5
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comiss	xmm2, xmm0
	jbe	SHORT $LN5@tquat
	xorps	xmm4, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[esp+40], xmm4
	movss	DWORD PTR $T4[esp+44], xmm6
	mov	DWORD PTR $T4[esp+48], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm5, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	DWORD PTR $T3[esp+40], 0
	movss	DWORD PTR $T3[esp+44], xmm5
	movss	DWORD PTR $T3[esp+48], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm7
	mulss	xmm0, xmm5
	mulss	xmm1, xmm4
	mulss	xmm7, xmm6
	subss	xmm1, xmm0
	mulss	xmm2, xmm6
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR [edi]
	mulss	xmm5, xmm4
	subss	xmm0, xmm7
	subss	xmm2, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklps xmm1, xmm0
	movq	QWORD PTR _t$[esp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[esp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	mov	eax, DWORD PTR $T2[esp+48]
$LN87@tquat:

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm2, DWORD PTR _t$[esp+40]
	movss	xmm1, DWORD PTR _t$[esp+44]
	mov	DWORD PTR _t$[esp+48], eax
	movss	xmm0, DWORD PTR _t$[esp+48]
	movss	DWORD PTR $T1[esp+52], xmm3
	movss	DWORD PTR $T1[esp+40], xmm2
	movss	DWORD PTR $T1[esp+48], xmm0
	movss	DWORD PTR $T1[esp+44], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm1
	addss	xmm3, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
	cvtsd2ss xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm1
	jb	SHORT $LN56@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN56@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, xmm1

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 173  : 	}

	pop	edi
	pop	esi

; 409  : 		T oneOverLen = T(1) / len;

	movaps	xmm1, xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR $T1[esp+32]
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z ENDP	; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$03$03M$0A@@1@XZ
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$03$03M$0A@@1@XZ PROC	; glm::tquat<float,0>::operator glm::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [ecx+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 622  : 		T qxx(q.x * q.x);

	movss	xmm3, DWORD PTR [ecx]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	DWORD PTR _qyy$1$[ebp], xmm0

; 624  : 		T qzz(q.z * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm1

; 625  : 		T qxz(q.x * q.z);

	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [ecx+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$03$03M$0A@@1@XZ ENDP	; glm::tquat<float,0>::operator glm::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$02$02M$0A@@1@XZ
_TEXT	SEGMENT
$T1 = -24						; size = 12
$T2 = -24						; size = 12
$T3 = -24						; size = 12
_qyz$1$ = -12						; size = 4
_qxx$1$ = -8						; size = 4
_qyy$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$02$02M$0A@@1@XZ PROC	; glm::tquat<float,0>::operator glm::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm2, DWORD PTR __real@3f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [edx], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR $T3[ebp+8]

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [edx+12], xmm0
	mov	DWORD PTR [edx+8], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm1, xmm1
	movq	QWORD PTR [edx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [edx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [edx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movss	xmm2, DWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [ecx+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm4, xmm2
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [ecx+8]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulss	xmm5, xmm0
	movaps	xmm7, xmm0
	mulss	xmm3, xmm1
	mulss	xmm7, xmm2
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [ecx+12]
	movaps	xmm6, xmm3
	mulss	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulss	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm0
	movss	xmm0, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm5, DWORD PTR _qxx$1$[ebp]
	addss	xmm1, xmm1
	addss	xmm5, xmm5
	subss	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm1, DWORD PTR _qyz$1$[ebp]
	movss	DWORD PTR [edx], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [edx+4], xmm0
	movaps	xmm0, xmm7
	subss	xmm0, xmm2
	movss	DWORD PTR [edx+12], xmm4
	movss	xmm4, DWORD PTR __real@3f800000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, xmm7
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [edx+8], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm5
	movss	DWORD PTR [edx+24], xmm2
	movss	DWORD PTR [edx+16], xmm0
	movaps	xmm0, xmm6
	addss	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm1, xmm6
	addss	xmm0, xmm0
	addss	xmm1, xmm1
	movss	DWORD PTR [edx+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [edx+28], xmm1
	addss	xmm0, xmm0
	subss	xmm4, xmm0

; 203  : 		return mat3_cast(*this);

	mov	eax, edx

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR [edx+32], xmm4

; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$0A@@glm@@QAE?AU?$mat@$02$02M$0A@@1@XZ ENDP	; glm::tquat<float,0>::operator glm::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__w$ = 8						; size = 4
__x$ = 12						; size = 4
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??0?$tquat@M$0A@@glm@@QAE@MMMM@Z PROC			; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$tquat@M$0A@@glm@@QAE@MMMM@Z ENDP			; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$0A@@glm@@QAE@MABU?$vec@$02M$0A@@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$0A@@glm@@QAE@MABU?$vec@$02M$0A@@1@@Z PROC	; glm::tquat<float,0>::tquat<float,0>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 115  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??0?$tquat@M$0A@@glm@@QAE@MABU?$vec@$02M$0A@@1@@Z ENDP	; glm::tquat<float,0>::tquat<float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$0A@@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$0A@@glm@@QBEABMH@Z PROC			; glm::tquat<float,0>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$0A@@glm@@QBEABMH@Z ENDP			; glm::tquat<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$0A@@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$0A@@glm@@QAEAAMH@Z PROC			; glm::tquat<float,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$0A@@glm@@QAEAAMH@Z ENDP			; glm::tquat<float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@M$0A@@glm@@SAHXZ PROC			; glm::tquat<float,0>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@M$0A@@glm@@SAHXZ ENDP			; glm::tquat<float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
$T1 = -108						; size = 32
$T2 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC	; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 195  : 	{

	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T2[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T2[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T2[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T2[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T2[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T2[ebp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z ; glm::quat_cast<double,1>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP	; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tquat@N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC	; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@N$00@glm@@YA?AU?$tquat@N$00@0@ABU?$mat@$02$02N$00@0@@Z ; glm::quat_cast<double,1>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP	; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z
_TEXT	SEGMENT
_c$$sroa$144$ = -48					; size = 8
tv245 = -40						; size = 8
_c$$sroa$148$ = -40					; size = 8
_c$$sroa$152$ = -32					; size = 8
tv243 = -24						; size = 8
_s$$sroa$133$ = -24					; size = 8
$T2$sroa$142$1$ = -16					; size = 8
$T1$sroa$155$1$ = -16					; size = 8
_s$$sroa$132$ = -16					; size = 8
$T2$sroa$136$1$ = -8					; size = 8
$T1$sroa$156$1$ = -8					; size = 8
_s$$sroa$71$ = -8					; size = 8
_eulerAngle$ = 8					; size = 4
??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z PROC	; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T1$sroa$156$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T1$sroa$155$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$156$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$152$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$155$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$148$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$144$[ebp]

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$142$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$136$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$142$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$136$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$132$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm2, QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm7, QWORD PTR _c$$sroa$152$[ebp]
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _s$$sroa$132$[ebp]
	movaps	xmm1, xmm7

; 185  : 	}

	mov	eax, edi
	movsd	xmm5, QWORD PTR _c$$sroa$148$[ebp]
	movsd	xmm6, QWORD PTR _c$$sroa$144$[ebp]
	mulsd	xmm7, QWORD PTR _s$$sroa$132$[ebp]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv243[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$71$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm4, QWORD PTR _s$$sroa$71$[ebp]
	movsd	QWORD PTR tv245[ebp], xmm1
	mulsd	xmm1, xmm6
	mulsd	xmm0, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;

	mulsd	xmm5, xmm2
	addsd	xmm1, xmm0
	movaps	xmm0, xmm7
	mulsd	xmm0, xmm4

; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;

	mulsd	xmm7, xmm6
	movsd	QWORD PTR [edi+24], xmm1
	movaps	xmm1, xmm5
	mulsd	xmm1, xmm6
	mulsd	xmm5, xmm4
	subsd	xmm1, xmm0

; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	movsd	xmm0, QWORD PTR tv245[ebp]
	mulsd	xmm0, xmm4
	addsd	xmm7, xmm5
	movsd	QWORD PTR [edi], xmm1
	movsd	xmm1, QWORD PTR tv243[ebp]
	mulsd	xmm1, xmm6
	movsd	QWORD PTR [edi+8], xmm7
	subsd	xmm0, xmm1
	movsd	QWORD PTR [edi+16], xmm0

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@@Z ENDP	; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z
_TEXT	SEGMENT
_this$1$ = -76						; size = 4
_t$1$ = -72						; size = 8
_real_part$1$ = -64					; size = 8
_t$ = -56						; size = 24
$T2 = -32						; size = 32
$T3 = -32						; size = 24
$T4 = -32						; size = 24
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z PROC	; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 80					; 00000050H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+88], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm5, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movaps	xmm1, xmm5
	movsd	xmm3, QWORD PTR [edi+8]
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm5
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	addsd	xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm2, xmm1
	addsd	xmm0, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR [edi+8]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm5, xmm2
	movsd	xmm4, QWORD PTR [esi+8]
	movsd	xmm7, QWORD PTR [esi]
	movsd	xmm6, QWORD PTR [edi+16]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm5, xmm4
	mulsd	xmm1, xmm7

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm5, xmm1

; 635  : 		return vec<3, T, Q>(

	movaps	xmm1, xmm6
	mulsd	xmm1, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm5, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addsd	xmm5, xmm0

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulsd	xmm0, QWORD PTR __real@3eb0c6f7a0000000
	comisd	xmm0, xmm5
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	movaps	xmm0, xmm3
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comisd	xmm2, xmm0
	xorps	xmm6, xmm6
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN5@tquat
	xorps	xmm4, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T4[esp+88], xmm4
	movsd	QWORD PTR $T4[esp+96], xmm7
	movsd	QWORD PTR $T4[esp+104], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm3, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T3[esp+88], xmm6
	movsd	QWORD PTR $T3[esp+96], xmm3
	movsd	QWORD PTR $T3[esp+104], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm6
	mulsd	xmm0, xmm3
	mulsd	xmm1, xmm4
	mulsd	xmm6, xmm7
	mulsd	xmm2, xmm7
	subsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm3
	movsd	xmm3, QWORD PTR [edi]
	mulsd	xmm3, xmm4
	subsd	xmm0, xmm6
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR _t$[esp+88], xmm1
$LN66@tquat:

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR _t$1$[esp+88], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm2, QWORD PTR _t$[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm1, QWORD PTR _t$[esp+96]
	mulsd	xmm1, xmm1

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm1
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1

; 407  : 		if(len <= T(0)) // Problem

	comisd	xmm1, xmm0
	jb	SHORT $LN52@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]
	xorps	xmm0, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN52@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]

; 173  : 	}

	pop	edi
	pop	esi

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR _t$[esp+80]
	unpcklpd xmm1, xmm1
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[esp+80], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movaps	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm1, QWORD PTR _real_part$1$[esp+80]

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	mulsd	xmm0, QWORD PTR _t$1$[esp+80]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T2[esp+104], xmm1
	movsd	QWORD PTR $T2[esp+96], xmm0
	movups	xmm0, XMMWORD PTR $T2[esp+80]
	movups	xmm1, XMMWORD PTR $T2[esp+96]

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z ENDP	; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$00@glm@@QAE?AU?$mat@$03$03N$00@1@XZ
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$00@glm@@QAE?AU?$mat@$03$03N$00@1@XZ PROC	; glm::tquat<double,1>::operator glm::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [ecx+8]
	movsd	xmm3, QWORD PTR [ecx]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [ecx+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 625  : 		T qxz(q.x * q.z);

	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [ecx+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm5, xmm5
	addsd	xmm7, xmm7
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+32], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	unpcklpd xmm4, xmm1
	movups	XMMWORD PTR [eax+64], xmm0
	movups	XMMWORD PTR [eax+80], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+96], xmm0
	movups	XMMWORD PTR [eax+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$00@glm@@QAE?AU?$mat@$03$03N$00@1@XZ ENDP	; glm::tquat<double,1>::operator glm::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$00@glm@@QAE?AU?$mat@$02$02N$00@1@XZ
_TEXT	SEGMENT
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$00@glm@@QAE?AU?$mat@$02$02N$00@1@XZ PROC	; glm::tquat<double,1>::operator glm::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	movups	XMMWORD PTR [eax+24], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movq	QWORD PTR [eax+16], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [eax+48], xmm0
	movq	QWORD PTR [eax+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movq	QWORD PTR [eax+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movsd	xmm2, QWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm1
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulsd	xmm5, xmm0
	movaps	xmm7, xmm0
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm2
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [ecx+24]
	movaps	xmm6, xmm3
	mulsd	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulsd	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	mulsd	xmm3, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm5, QWORD PTR _qxx$1$[ebp]
	addsd	xmm1, xmm1
	addsd	xmm5, xmm5
	subsd	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm1, QWORD PTR _qyz$1$[ebp]
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm7
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, xmm7
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm5
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm6
	addsd	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm1, xmm6
	addsd	xmm0, xmm0
	addsd	xmm1, xmm1
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm1
	addsd	xmm0, xmm0
	subsd	xmm4, xmm0
	movsd	QWORD PTR [eax+64], xmm4

; 203  : 		return mat3_cast(*this);
; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$00@glm@@QAE?AU?$mat@$02$02N$00@1@XZ ENDP	; glm::tquat<double,1>::operator glm::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__w$ = 8						; size = 8
__x$ = 16						; size = 8
__y$ = 24						; size = 8
__z$ = 32						; size = 8
??0?$tquat@N$00@glm@@QAE@NNNN@Z PROC			; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$tquat@N$00@glm@@QAE@NNNN@Z ENDP			; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$00@glm@@QAE@NABU?$vec@$02N$00@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 8
_v$ = 16						; size = 4
??0?$tquat@N$00@glm@@QAE@NABU?$vec@$02N$00@1@@Z PROC	; glm::tquat<double,1>::tquat<double,1>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR [eax+16]

; 115  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$tquat@N$00@glm@@QAE@NABU?$vec@$02N$00@1@@Z ENDP	; glm::tquat<double,1>::tquat<double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$00@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$00@glm@@QBEABNH@Z PROC			; glm::tquat<double,1>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$00@glm@@QBEABNH@Z ENDP			; glm::tquat<double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$00@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$00@glm@@QAEAANH@Z PROC			; glm::tquat<double,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$00@glm@@QAEAANH@Z ENDP			; glm::tquat<double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@N$00@glm@@SAHXZ PROC			; glm::tquat<double,1>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@N$00@glm@@SAHXZ ENDP			; glm::tquat<double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -56						; size = 16
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -52						; size = 12
$T5 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC	; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movq	QWORD PTR $T5[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T5[ebp+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T5[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T5[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movq	QWORD PTR $T5[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T5[ebp+24], xmm2
	mov	DWORD PTR $T5[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z ; glm::quat_cast<float,1>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP	; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tquat@M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC	; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@M$00@glm@@YA?AU?$tquat@M$00@0@ABU?$mat@$02$02M$00@0@@Z ; glm::quat_cast<float,1>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP	; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z
_TEXT	SEGMENT
tv574 = -32						; size = 8
tv575 = -24						; size = 4
tv560 = -20						; size = 8
tv557 = -16						; size = 4
tv573 = -12						; size = 8
tv556 = -8						; size = 4
tv571 = -4						; size = 4
tv572 = 8						; size = 4
_eulerAngle$ = 8					; size = 4
??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z PROC	; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv560[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv572[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+4]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv573[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv575[ebp], xmm0
	cvtps2pd xmm0, xmm1
	movsd	QWORD PTR tv574[ebp], xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv571[ebp], xmm0

; 750  :             return (float)sin(_X);

	movsd	xmm0, QWORD PTR tv560[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv557[ebp], xmm0
	movsd	xmm0, QWORD PTR tv573[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv556[ebp], xmm0
	movsd	xmm0, QWORD PTR tv574[ebp]
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm5, DWORD PTR tv556[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	xorps	xmm4, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm7, DWORD PTR tv557[ebp]
	movaps	xmm3, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movss	xmm2, DWORD PTR tv575[ebp]

; 185  : 	}

	mov	eax, edi
	mulss	xmm2, DWORD PTR tv572[ebp]
	mulss	xmm5, DWORD PTR tv572[ebp]
	movss	xmm6, DWORD PTR tv571[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mulss	xmm3, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR tv571[ebp]
	mulss	xmm7, DWORD PTR tv575[ebp]
	movaps	xmm1, xmm3
	mulss	xmm1, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;
; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;
; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	mulss	xmm2, xmm4
	addss	xmm1, xmm0
	mulss	xmm3, xmm6
	movaps	xmm0, xmm5
	mulss	xmm5, xmm6
	mulss	xmm0, xmm4
	subss	xmm2, xmm3
	movss	DWORD PTR [edi+12], xmm1
	movaps	xmm1, xmm7
	mulss	xmm1, xmm6
	mulss	xmm7, xmm4
	subss	xmm1, xmm0
	movss	DWORD PTR [edi+8], xmm2
	addss	xmm7, xmm5
	movss	DWORD PTR [edi], xmm1
	movss	DWORD PTR [edi+4], xmm7

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@@Z ENDP	; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
_t$ = -28						; size = 12
$T1 = -16						; size = 16
$T2 = -16						; size = 12
$T3 = -16						; size = 12
$T4 = -16						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z PROC	; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+40], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm3
	movss	xmm2, DWORD PTR [edi+4]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm3

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm2, xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm2, DWORD PTR [edi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm4, DWORD PTR [esi+4]
	movaps	xmm3, xmm2
	movss	xmm6, DWORD PTR [esi]
	movss	xmm7, DWORD PTR [edi+8]
	movss	xmm5, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi]
	mulss	xmm3, xmm4
	mulss	xmm0, xmm6

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movaps	xmm0, xmm7
	mulss	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addss	xmm3, xmm1

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulss	xmm1, DWORD PTR __real@358637bd
	comiss	xmm1, xmm3
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movaps	xmm0, xmm5
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comiss	xmm2, xmm0
	jbe	SHORT $LN5@tquat
	xorps	xmm4, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[esp+40], xmm4
	movss	DWORD PTR $T4[esp+44], xmm6
	mov	DWORD PTR $T4[esp+48], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm5, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	DWORD PTR $T3[esp+40], 0
	movss	DWORD PTR $T3[esp+44], xmm5
	movss	DWORD PTR $T3[esp+48], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm7
	mulss	xmm0, xmm5
	mulss	xmm1, xmm4
	mulss	xmm7, xmm6
	subss	xmm1, xmm0
	mulss	xmm2, xmm6
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR [edi]
	mulss	xmm5, xmm4
	subss	xmm0, xmm7
	subss	xmm2, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklps xmm1, xmm0
	movq	QWORD PTR _t$[esp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[esp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	mov	eax, DWORD PTR $T2[esp+48]
$LN87@tquat:

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm2, DWORD PTR _t$[esp+40]
	movss	xmm1, DWORD PTR _t$[esp+44]
	mov	DWORD PTR _t$[esp+48], eax
	movss	xmm0, DWORD PTR _t$[esp+48]
	movss	DWORD PTR $T1[esp+52], xmm3
	movss	DWORD PTR $T1[esp+40], xmm2
	movss	DWORD PTR $T1[esp+48], xmm0
	movss	DWORD PTR $T1[esp+44], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm1
	addss	xmm3, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
	cvtsd2ss xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm1
	jb	SHORT $LN56@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN56@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, xmm1

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 173  : 	}

	pop	edi
	pop	esi

; 409  : 		T oneOverLen = T(1) / len;

	movaps	xmm1, xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR $T1[esp+32]
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z ENDP	; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$00@glm@@QAE?AU?$mat@$03$03M$00@1@XZ
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$00@glm@@QAE?AU?$mat@$03$03M$00@1@XZ PROC	; glm::tquat<float,1>::operator glm::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [ecx+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 622  : 		T qxx(q.x * q.x);

	movss	xmm3, DWORD PTR [ecx]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	DWORD PTR _qyy$1$[ebp], xmm0

; 624  : 		T qzz(q.z * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm1

; 625  : 		T qxz(q.x * q.z);

	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [ecx+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$00@glm@@QAE?AU?$mat@$03$03M$00@1@XZ ENDP	; glm::tquat<float,1>::operator glm::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$00@glm@@QAE?AU?$mat@$02$02M$00@1@XZ
_TEXT	SEGMENT
$T1 = -24						; size = 12
$T2 = -24						; size = 12
$T3 = -24						; size = 12
_qyz$1$ = -12						; size = 4
_qxx$1$ = -8						; size = 4
_qyy$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$00@glm@@QAE?AU?$mat@$02$02M$00@1@XZ PROC	; glm::tquat<float,1>::operator glm::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm2, DWORD PTR __real@3f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [edx], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR $T3[ebp+8]

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [edx+12], xmm0
	mov	DWORD PTR [edx+8], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm1, xmm1
	movq	QWORD PTR [edx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [edx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [edx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movss	xmm2, DWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [ecx+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm4, xmm2
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [ecx+8]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulss	xmm5, xmm0
	movaps	xmm7, xmm0
	mulss	xmm3, xmm1
	mulss	xmm7, xmm2
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [ecx+12]
	movaps	xmm6, xmm3
	mulss	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulss	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm0
	movss	xmm0, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm5, DWORD PTR _qxx$1$[ebp]
	addss	xmm1, xmm1
	addss	xmm5, xmm5
	subss	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm1, DWORD PTR _qyz$1$[ebp]
	movss	DWORD PTR [edx], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [edx+4], xmm0
	movaps	xmm0, xmm7
	subss	xmm0, xmm2
	movss	DWORD PTR [edx+12], xmm4
	movss	xmm4, DWORD PTR __real@3f800000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, xmm7
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [edx+8], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm5
	movss	DWORD PTR [edx+24], xmm2
	movss	DWORD PTR [edx+16], xmm0
	movaps	xmm0, xmm6
	addss	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm1, xmm6
	addss	xmm0, xmm0
	addss	xmm1, xmm1
	movss	DWORD PTR [edx+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [edx+28], xmm1
	addss	xmm0, xmm0
	subss	xmm4, xmm0

; 203  : 		return mat3_cast(*this);

	mov	eax, edx

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR [edx+32], xmm4

; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$00@glm@@QAE?AU?$mat@$02$02M$00@1@XZ ENDP	; glm::tquat<float,1>::operator glm::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__w$ = 8						; size = 4
__x$ = 12						; size = 4
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??0?$tquat@M$00@glm@@QAE@MMMM@Z PROC			; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$tquat@M$00@glm@@QAE@MMMM@Z ENDP			; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$00@glm@@QAE@MABU?$vec@$02M$00@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$00@glm@@QAE@MABU?$vec@$02M$00@1@@Z PROC	; glm::tquat<float,1>::tquat<float,1>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 115  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??0?$tquat@M$00@glm@@QAE@MABU?$vec@$02M$00@1@@Z ENDP	; glm::tquat<float,1>::tquat<float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$00@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$00@glm@@QBEABMH@Z PROC			; glm::tquat<float,1>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$00@glm@@QBEABMH@Z ENDP			; glm::tquat<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$00@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$00@glm@@QAEAAMH@Z PROC			; glm::tquat<float,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$00@glm@@QAEAAMH@Z ENDP			; glm::tquat<float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@M$00@glm@@SAHXZ PROC			; glm::tquat<float,1>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@M$00@glm@@SAHXZ ENDP			; glm::tquat<float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
$T1 = -108						; size = 32
$T2 = -76						; size = 72
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC	; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 195  : 	{

	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR $T2[ebp], xmm2

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
	movq	QWORD PTR $T2[ebp+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR $T2[ebp+24], xmm2

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
	movq	QWORD PTR $T2[ebp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T2[ebp+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR $T2[ebp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z ; glm::quat_cast<double,2>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP	; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_m$ = 8							; size = 4
??0?$tquat@N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC	; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@N$01@glm@@YA?AU?$tquat@N$01@0@ABU?$mat@$02$02N$01@0@@Z ; glm::quat_cast<double,2>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi+16], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP	; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z
_TEXT	SEGMENT
_c$$sroa$144$ = -48					; size = 8
tv245 = -40						; size = 8
_c$$sroa$148$ = -40					; size = 8
_c$$sroa$152$ = -32					; size = 8
tv243 = -24						; size = 8
_s$$sroa$133$ = -24					; size = 8
$T2$sroa$142$1$ = -16					; size = 8
$T1$sroa$155$1$ = -16					; size = 8
_s$$sroa$132$ = -16					; size = 8
$T2$sroa$136$1$ = -8					; size = 8
$T1$sroa$156$1$ = -8					; size = 8
_s$$sroa$71$ = -8					; size = 8
_eulerAngle$ = 8					; size = 4
??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z PROC	; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T1$sroa$156$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T1$sroa$155$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$156$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$152$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
	movsd	xmm0, QWORD PTR $T1$sroa$155$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$148$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_cos
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movsd	xmm1, QWORD PTR [esi+8]
	movsd	xmm0, QWORD PTR [esi]
	mulsd	xmm1, xmm2
	mulsd	xmm0, xmm2

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _c$$sroa$144$[ebp]

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$142$1$[ebp], xmm1
	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movsd	QWORD PTR $T2$sroa$136$1$[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$142$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
	movsd	xmm0, QWORD PTR $T2$sroa$136$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$132$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	movsd	QWORD PTR [esp], xmm0
	call	_sin
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm2, QWORD PTR _s$$sroa$133$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\_vectorize.hpp

; 40   : 			return vec<3, R, Q>(Func(v.x), Func(v.y), Func(v.z));

	add	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm7, QWORD PTR _c$$sroa$152$[ebp]
	movaps	xmm0, xmm2
	mulsd	xmm0, QWORD PTR _s$$sroa$132$[ebp]
	movaps	xmm1, xmm7

; 185  : 	}

	mov	eax, edi
	movsd	xmm5, QWORD PTR _c$$sroa$148$[ebp]
	movsd	xmm6, QWORD PTR _c$$sroa$144$[ebp]
	mulsd	xmm7, QWORD PTR _s$$sroa$132$[ebp]
	mulsd	xmm1, xmm5
	movsd	QWORD PTR tv243[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	fstp	QWORD PTR _s$$sroa$71$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movsd	xmm4, QWORD PTR _s$$sroa$71$[ebp]
	movsd	QWORD PTR tv245[ebp], xmm1
	mulsd	xmm1, xmm6
	mulsd	xmm0, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;

	mulsd	xmm5, xmm2
	addsd	xmm1, xmm0
	movaps	xmm0, xmm7
	mulsd	xmm0, xmm4

; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;

	mulsd	xmm7, xmm6
	movsd	QWORD PTR [edi+24], xmm1
	movaps	xmm1, xmm5
	mulsd	xmm1, xmm6
	mulsd	xmm5, xmm4
	subsd	xmm1, xmm0

; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	movsd	xmm0, QWORD PTR tv245[ebp]
	mulsd	xmm0, xmm4
	addsd	xmm7, xmm5
	movsd	QWORD PTR [edi], xmm1
	movsd	xmm1, QWORD PTR tv243[ebp]
	mulsd	xmm1, xmm6
	movsd	QWORD PTR [edi+8], xmm7
	subsd	xmm0, xmm1
	movsd	QWORD PTR [edi+16], xmm0

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@@Z ENDP	; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z
_TEXT	SEGMENT
_this$1$ = -76						; size = 4
_t$1$ = -72						; size = 8
_real_part$1$ = -64					; size = 8
_t$ = -56						; size = 24
$T2 = -32						; size = 32
$T3 = -32						; size = 24
$T4 = -32						; size = 24
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z PROC	; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 80					; 00000050H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+88], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm5, QWORD PTR [esi]
	movsd	xmm2, QWORD PTR [esi+8]
	movaps	xmm1, xmm5
	movsd	xmm3, QWORD PTR [edi+8]
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm0
	mulsd	xmm1, xmm5
	mulsd	xmm2, xmm2
	mulsd	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	addsd	xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm1, QWORD PTR [esi+16]
	mulsd	xmm1, xmm1

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movsd	xmm0, QWORD PTR [edi+16]
	mulsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm2, xmm1
	addsd	xmm0, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulsd	xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movsd	xmm2, QWORD PTR [edi+8]
	movsd	xmm1, QWORD PTR [edi]
	movaps	xmm5, xmm2
	movsd	xmm4, QWORD PTR [esi+8]
	movsd	xmm7, QWORD PTR [esi]
	movsd	xmm6, QWORD PTR [edi+16]
	movsd	xmm3, QWORD PTR [esi+16]
	mulsd	xmm5, xmm4
	mulsd	xmm1, xmm7

; 39   : 		: x(_x), y(_y), z(_z)

	addsd	xmm5, xmm1

; 635  : 		return vec<3, T, Q>(

	movaps	xmm1, xmm6
	mulsd	xmm1, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addsd	xmm5, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addsd	xmm5, xmm0

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulsd	xmm0, QWORD PTR __real@3eb0c6f7a0000000
	comisd	xmm0, xmm5
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	movaps	xmm0, xmm3
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff
	xorps	xmm5, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comisd	xmm2, xmm0
	xorps	xmm6, xmm6
	movsd	QWORD PTR _real_part$1$[esp+88], xmm5
	jbe	SHORT $LN5@tquat
	xorps	xmm4, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T4[esp+88], xmm4
	movsd	QWORD PTR $T4[esp+96], xmm7
	movsd	QWORD PTR $T4[esp+104], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm3, QWORD PTR __xmm@80000000000000008000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	QWORD PTR $T3[esp+88], xmm6
	movsd	QWORD PTR $T3[esp+96], xmm3
	movsd	QWORD PTR $T3[esp+104], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm2, QWORD PTR [eax+16]
	movups	XMMWORD PTR _t$[esp+88], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN66@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm6
	mulsd	xmm0, xmm3
	mulsd	xmm1, xmm4
	mulsd	xmm6, xmm7
	mulsd	xmm2, xmm7
	subsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR [edi]
	mulsd	xmm0, xmm3
	movsd	xmm3, QWORD PTR [edi]
	mulsd	xmm3, xmm4
	subsd	xmm0, xmm6
	subsd	xmm2, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR _t$[esp+88], xmm1
$LN66@tquat:

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR _t$1$[esp+88], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm2, QWORD PTR _t$[esp+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addsd	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	movsd	xmm1, QWORD PTR _t$[esp+96]
	mulsd	xmm1, xmm1

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addsd	xmm2, xmm1
	addsd	xmm0, xmm2

; 400  : 		return glm::sqrt(dot(q, q));

	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1

; 407  : 		if(len <= T(0)) // Problem

	comisd	xmm1, xmm0
	jb	SHORT $LN52@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]
	xorps	xmm0, xmm0

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN52@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+88]

; 173  : 	}

	pop	edi
	pop	esi

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR _t$[esp+80]
	unpcklpd xmm1, xmm1
	mulpd	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movups	XMMWORD PTR $T2[esp+80], xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movaps	xmm0, xmm1

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	mulsd	xmm1, QWORD PTR _real_part$1$[esp+80]

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	mulsd	xmm0, QWORD PTR _t$1$[esp+80]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T2[esp+104], xmm1
	movsd	QWORD PTR $T2[esp+96], xmm0
	movups	xmm0, XMMWORD PTR $T2[esp+80]
	movups	xmm1, XMMWORD PTR $T2[esp+96]

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm0
	movups	XMMWORD PTR [eax+16], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z ENDP	; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$01@glm@@QAE?AU?$mat@$03$03N$01@1@XZ
_TEXT	SEGMENT
$T1 = -72						; size = 16
_qzz$1$ = -56						; size = 8
$T2 = -48						; size = 16
$T3 = -32						; size = 16
$T4 = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$01@glm@@QAE?AU?$mat@$03$03N$01@1@XZ PROC	; glm::tquat<double,2>::operator glm::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm2, QWORD PTR [ecx+8]
	movsd	xmm3, QWORD PTR [ecx]
	movaps	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);

	movsd	xmm1, QWORD PTR [ecx+16]
	movaps	xmm6, xmm3
	mulsd	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 625  : 		T qxz(q.x * q.z);

	mulsd	xmm5, xmm3
	movaps	xmm7, xmm1
	mulsd	xmm6, xmm3
	movsd	QWORD PTR _qyy$1$[ebp], xmm0

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm0, xmm2
	mulsd	xmm0, xmm3
	mulsd	xmm7, xmm1
	movups	XMMWORD PTR $T3[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulsd	xmm0, xmm2
	movsd	QWORD PTR $T4[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm0, QWORD PTR [ecx+24]
	movaps	xmm4, xmm0
	mulsd	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0
	mulsd	xmm3, xmm2

; 630  : 		T qwz(q.w * q.z);

	mulsd	xmm0, xmm1

; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm7
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	movups	XMMWORD PTR $T2[ebp], xmm3

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	movaps	xmm3, xmm5

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm7, xmm6
	subsd	xmm3, QWORD PTR $T2[ebp]
	movaps	xmm2, xmm0
	addsd	xmm1, xmm1
	addsd	xmm2, QWORD PTR $T3[ebp]
	movsd	QWORD PTR _qzz$1$[ebp], xmm7

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm7, xmm4
	movups	XMMWORD PTR $T1[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T3[ebp]
	addsd	xmm7, QWORD PTR $T4[ebp]
	subsd	xmm3, xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	addsd	xmm2, xmm2
	addsd	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movsd	xmm5, QWORD PTR $T4[ebp]
	movups	XMMWORD PTR $T3[ebp], xmm3
	movups	xmm3, XMMWORD PTR $T1[ebp]
	subsd	xmm5, xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000
	movups	XMMWORD PTR $T2[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm0, xmm6
	addsd	xmm5, xmm5
	addsd	xmm7, xmm7
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm1
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm3, xmm1

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm7, xmm1
	unpcklpd xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movsd	xmm2, QWORD PTR _qzz$1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm2, xmm2
	movaps	xmm0, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movups	xmm3, XMMWORD PTR $T3[ebp]

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	subsd	xmm0, xmm2

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm2, QWORD PTR _qyy$1$[ebp]
	addsd	xmm3, xmm3
	addsd	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movups	xmm0, XMMWORD PTR $T2[ebp]

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	subsd	xmm4, xmm2
	addsd	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+32], xmm3
	movups	XMMWORD PTR [eax+48], xmm7

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm0, xmm5
	unpcklpd xmm4, xmm1
	movups	XMMWORD PTR [eax+64], xmm0
	movups	XMMWORD PTR [eax+80], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+96], xmm0
	movups	XMMWORD PTR [eax+112], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$01@glm@@QAE?AU?$mat@$03$03N$01@1@XZ ENDP	; glm::tquat<double,2>::operator glm::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@N$01@glm@@QAE?AU?$mat@$02$02N$01@1@XZ
_TEXT	SEGMENT
_qyz$1$ = -24						; size = 8
_qxx$1$ = -16						; size = 8
_qyy$1$ = -8						; size = 8
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@N$01@glm@@QAE?AU?$mat@$02$02N$01@1@XZ PROC	; glm::tquat<double,2>::operator glm::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	movups	XMMWORD PTR [eax+24], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movq	QWORD PTR [eax+16], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [eax+48], xmm0
	movq	QWORD PTR [eax+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movq	QWORD PTR [eax+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movsd	xmm2, QWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movsd	xmm1, QWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulsd	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulsd	xmm4, xmm2
	movsd	QWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulsd	xmm0, xmm1
	movsd	QWORD PTR _qyy$1$[ebp], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulsd	xmm5, xmm0
	movaps	xmm7, xmm0
	mulsd	xmm3, xmm1
	mulsd	xmm7, xmm2
	movsd	QWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movsd	xmm3, QWORD PTR [ecx+24]
	movaps	xmm6, xmm3
	mulsd	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulsd	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addsd	xmm1, QWORD PTR _qyy$1$[ebp]
	mulsd	xmm3, xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addsd	xmm5, QWORD PTR _qxx$1$[ebp]
	addsd	xmm1, xmm1
	addsd	xmm5, xmm5
	subsd	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movsd	xmm1, QWORD PTR _qyz$1$[ebp]
	movsd	QWORD PTR [eax], xmm0
	movaps	xmm0, xmm3
	addsd	xmm0, xmm4
	subsd	xmm4, xmm3
	addsd	xmm0, xmm0
	addsd	xmm4, xmm4
	movsd	QWORD PTR [eax+8], xmm0
	movaps	xmm0, xmm7
	subsd	xmm0, xmm2
	movsd	QWORD PTR [eax+24], xmm4
	movsd	xmm4, QWORD PTR __real@3ff0000000000000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addsd	xmm2, xmm7
	addsd	xmm0, xmm0
	addsd	xmm2, xmm2
	movsd	QWORD PTR [eax+16], xmm0
	movaps	xmm0, xmm4
	subsd	xmm0, xmm5
	movsd	QWORD PTR [eax+48], xmm2
	movsd	QWORD PTR [eax+32], xmm0
	movaps	xmm0, xmm6
	addsd	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subsd	xmm1, xmm6
	addsd	xmm0, xmm0
	addsd	xmm1, xmm1
	movsd	QWORD PTR [eax+40], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movsd	xmm0, QWORD PTR _qyy$1$[ebp]
	addsd	xmm0, QWORD PTR _qxx$1$[ebp]
	movsd	QWORD PTR [eax+56], xmm1
	addsd	xmm0, xmm0
	subsd	xmm4, xmm0
	movsd	QWORD PTR [eax+64], xmm4

; 203  : 		return mat3_cast(*this);
; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@N$01@glm@@QAE?AU?$mat@$02$02N$01@1@XZ ENDP	; glm::tquat<double,2>::operator glm::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__w$ = 8						; size = 8
__x$ = 16						; size = 8
__y$ = 24						; size = 8
__z$ = 32						; size = 8
??0?$tquat@N$01@glm@@QAE@NNNN@Z PROC			; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$tquat@N$01@glm@@QAE@NNNN@Z ENDP			; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@N$01@glm@@QAE@NABU?$vec@$02N$01@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 8
_v$ = 16						; size = 4
??0?$tquat@N$01@glm@@QAE@NABU?$vec@$02N$01@1@@Z PROC	; glm::tquat<double,2>::tquat<double,2>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	eax, DWORD PTR _v$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR [eax+16]

; 115  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR _s$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$tquat@N$01@glm@@QAE@NABU?$vec@$02N$01@1@@Z ENDP	; glm::tquat<double,2>::tquat<double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$01@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$01@glm@@QBEABNH@Z PROC			; glm::tquat<double,2>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$01@glm@@QBEABNH@Z ENDP			; glm::tquat<double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@N$01@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@N$01@glm@@QAEAANH@Z PROC			; glm::tquat<double,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@N$01@glm@@QAEAANH@Z ENDP			; glm::tquat<double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@N$01@glm@@SAHXZ PROC			; glm::tquat<double,2>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@N$01@glm@@SAHXZ ENDP			; glm::tquat<double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -56						; size = 16
$T2 = -52						; size = 12
$T3 = -52						; size = 12
$T4 = -52						; size = 12
$T5 = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_m$ = 8							; size = 4
??0?$tquat@M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC	; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 195  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 56					; 00000038H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	ecx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [ecx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movq	QWORD PTR $T5[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	DWORD PTR $T5[ebp+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [ecx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [ecx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	DWORD PTR $T5[ebp+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	lea	eax, DWORD PTR $T5[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movq	QWORD PTR $T5[ebp+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [ecx+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
	lea	eax, DWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	ecx, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	push	eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	movq	QWORD PTR $T5[ebp+24], xmm2
	mov	DWORD PTR $T5[ebp+32], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	call	??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z ; glm::quat_cast<float,2>

; 196  : 		*this = quat_cast(m);

	movups	xmm0, XMMWORD PTR $T1[ebp]

; 197  : 	}

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]

; 700  : 		return quat_cast(mat<3, 3, T, Q>(m4));

	add	esp, 8

; 197  : 	}

	mov	eax, esi
	xor	ecx, ebp
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP	; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
_m$ = 8							; size = 4
??0?$tquat@M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC	; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 189  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 190  : 		*this = quat_cast(m);

	lea	eax, DWORD PTR $T1[ebp]
	push	esi
	push	DWORD PTR _m$[ebp]
	mov	esi, ecx
	push	eax
	call	??$quat_cast@M$01@glm@@YA?AU?$tquat@M$01@0@ABU?$mat@$02$02M$01@0@@Z ; glm::quat_cast<float,2>
	add	esp, 8
	movups	xmm0, XMMWORD PTR [eax]

; 191  : 	}

	mov	eax, esi
	movups	XMMWORD PTR [esi], xmm0
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP	; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z
_TEXT	SEGMENT
tv574 = -32						; size = 8
tv575 = -24						; size = 4
tv560 = -20						; size = 8
tv557 = -16						; size = 4
tv573 = -12						; size = 8
tv556 = -8						; size = 4
tv571 = -4						; size = 4
tv572 = 8						; size = 4
_eulerAngle$ = 8					; size = 4
??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z PROC	; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _eulerAngle$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 177  : 	{

	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv560[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv572[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+4]
	mulss	xmm0, DWORD PTR __real@3f000000

; 39   : 		: x(_x), y(_y), z(_z)

	cvtps2pd xmm0, xmm0
	movsd	QWORD PTR tv573[ebp], xmm0
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	call	__libm_sse2_cos_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 599  : 		return vec<3, T, Q>(

	movss	xmm1, DWORD PTR [esi+8]
	mulss	xmm1, DWORD PTR __real@3f000000
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv575[ebp], xmm0
	cvtps2pd xmm0, xmm1
	movsd	QWORD PTR tv574[ebp], xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv571[ebp], xmm0

; 750  :             return (float)sin(_X);

	movsd	xmm0, QWORD PTR tv560[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv557[ebp], xmm0
	movsd	xmm0, QWORD PTR tv573[ebp]
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv556[ebp], xmm0
	movsd	xmm0, QWORD PTR tv574[ebp]
	call	__libm_sse2_sin_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm5, DWORD PTR tv556[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	xorps	xmm4, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm7, DWORD PTR tv557[ebp]
	movaps	xmm3, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movss	xmm2, DWORD PTR tv575[ebp]

; 185  : 	}

	mov	eax, edi
	mulss	xmm2, DWORD PTR tv572[ebp]
	mulss	xmm5, DWORD PTR tv572[ebp]
	movss	xmm6, DWORD PTR tv571[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtsd2ss xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mulss	xmm3, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 181  : 		this->w = c.x * c.y * c.z + s.x * s.y * s.z;

	movaps	xmm0, xmm2
	mulss	xmm0, DWORD PTR tv571[ebp]
	mulss	xmm7, DWORD PTR tv575[ebp]
	movaps	xmm1, xmm3
	mulss	xmm1, xmm4

; 182  : 		this->x = s.x * c.y * c.z - c.x * s.y * s.z;
; 183  : 		this->y = c.x * s.y * c.z + s.x * c.y * s.z;
; 184  : 		this->z = c.x * c.y * s.z - s.x * s.y * c.z;

	mulss	xmm2, xmm4
	addss	xmm1, xmm0
	mulss	xmm3, xmm6
	movaps	xmm0, xmm5
	mulss	xmm5, xmm6
	mulss	xmm0, xmm4
	subss	xmm2, xmm3
	movss	DWORD PTR [edi+12], xmm1
	movaps	xmm1, xmm7
	mulss	xmm1, xmm6
	mulss	xmm7, xmm4
	subss	xmm1, xmm0
	movss	DWORD PTR [edi+8], xmm2
	addss	xmm7, xmm5
	movss	DWORD PTR [edi], xmm1
	movss	DWORD PTR [edi+4], xmm7

; 185  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@@Z ENDP	; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z
_TEXT	SEGMENT
_this$1$ = -32						; size = 4
_t$ = -28						; size = 12
$T1 = -16						; size = 16
$T2 = -16						; size = 12
$T3 = -16						; size = 12
$T4 = -16						; size = 12
_u$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z PROC	; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 32					; 00000020H
	push	esi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	esi, DWORD PTR _u$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	push	edi
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	mov	edi, DWORD PTR _v$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 153  : 	{

	mov	DWORD PTR _this$1$[esp+40], ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm3, DWORD PTR [esi+4]
	movaps	xmm1, xmm3
	movss	xmm2, DWORD PTR [edi+4]
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm3

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm2, xmm0

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [esi+8]
	mulss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 154  : 		T norm_u_norm_v = sqrt(dot(u, u) * dot(v, v));

	mulss	xmm2, xmm1
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm2
	call	__libm_sse2_sqrt_precise
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm2, DWORD PTR [edi+4]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm4, DWORD PTR [esi+4]
	movaps	xmm3, xmm2
	movss	xmm6, DWORD PTR [esi]
	movss	xmm7, DWORD PTR [edi+8]
	movss	xmm5, DWORD PTR [esi+8]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtsd2ss xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 635  : 		return vec<3, T, Q>(

	movss	xmm0, DWORD PTR [edi]
	mulss	xmm3, xmm4
	mulss	xmm0, xmm6

; 39   : 		: x(_x), y(_y), z(_z)

	addss	xmm3, xmm0

; 635  : 		return vec<3, T, Q>(

	movaps	xmm0, xmm7
	mulss	xmm0, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 59   : 			return tmp.x + tmp.y + tmp.z;

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 155  : 		T real_part = norm_u_norm_v + dot(u, v);

	addss	xmm3, xmm1

; 156  : 		vec<3, T, Q> t;
; 157  : 
; 158  : 		if(real_part < static_cast<T>(1.e-6f) * norm_u_norm_v)

	mulss	xmm1, DWORD PTR __real@358637bd
	comiss	xmm1, xmm3
	jbe	SHORT $LN2@tquat
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	movaps	xmm2, xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	lea	eax, DWORD PTR $T4[esp+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl

; 82   : 			return x >= genFIType(0) ? x : -x;

	andps	xmm2, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	movaps	xmm0, xmm5
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	comiss	xmm2, xmm0
	jbe	SHORT $LN5@tquat
	xorps	xmm4, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[esp+40], xmm4
	movss	DWORD PTR $T4[esp+44], xmm6
	mov	DWORD PTR $T4[esp+48], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN5@tquat:

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	xorps	xmm5, DWORD PTR __xmm@80000000800000008000000080000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	DWORD PTR $T3[esp+40], 0
	movss	DWORD PTR $T3[esp+44], xmm5
	movss	DWORD PTR $T3[esp+48], xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 164  : 			t = abs(u.x) > abs(u.z) ? vec<3, T, Q>(-u.y, u.x, static_cast<T>(0)) : vec<3, T, Q>(static_cast<T>(0), -u.z, u.y);

	movq	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR [eax+8]
	movq	QWORD PTR _t$[esp+40], xmm0

; 165  : 		}
; 166  : 		else

	jmp	SHORT $LN87@tquat
$LN2@tquat:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_geometric.inl

; 80   : 			return vec<3, T, Q>(

	movaps	xmm0, xmm2
	movaps	xmm1, xmm7
	mulss	xmm0, xmm5
	mulss	xmm1, xmm4
	mulss	xmm7, xmm6
	subss	xmm1, xmm0
	mulss	xmm2, xmm6
	movss	xmm0, DWORD PTR [edi]
	mulss	xmm0, xmm5
	movss	xmm5, DWORD PTR [edi]
	mulss	xmm5, xmm4
	subss	xmm0, xmm7
	subss	xmm2, xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	unpcklps xmm1, xmm0
	movq	QWORD PTR _t$[esp+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[esp+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 169  : 			t = cross(u, v);

	mov	eax, DWORD PTR $T2[esp+48]
$LN87@tquat:

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm2, DWORD PTR _t$[esp+40]
	movss	xmm1, DWORD PTR _t$[esp+44]
	mov	DWORD PTR _t$[esp+48], eax
	movss	xmm0, DWORD PTR _t$[esp+48]
	movss	DWORD PTR $T1[esp+52], xmm3
	movss	DWORD PTR $T1[esp+40], xmm2
	movss	DWORD PTR $T1[esp+48], xmm0
	movss	DWORD PTR $T1[esp+44], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mulss	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 19   : 			vec<4, T, Q> tmp(a.x * b.x, a.y * b.y, a.z * b.z, a.w * b.w);

	mulss	xmm0, xmm0
	mulss	xmm2, xmm2
	mulss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	addss	xmm3, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 20   : 			return (tmp.x + tmp.y) + (tmp.z + tmp.w);

	addss	xmm2, xmm1
	addss	xmm3, xmm2
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm3
	call	__libm_sse2_sqrt_precise
	xorps	xmm1, xmm1
	cvtsd2ss xmm1, xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 407  : 		if(len <= T(0)) // Problem

	comiss	xmm0, xmm1
	jb	SHORT $LN56@tquat

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movaps	xmm1, XMMWORD PTR __xmm@3f800000000000000000000000000000

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	8
$LN56@tquat:

; 409  : 		T oneOverLen = T(1) / len;

	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, xmm1

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	mov	eax, DWORD PTR _this$1$[esp+40]

; 173  : 	}

	pop	edi
	pop	esi

; 409  : 		T oneOverLen = T(1) / len;

	movaps	xmm1, xmm0

; 410  : 		return tquat<T, Q>(q.w * oneOverLen, q.x * oneOverLen, q.y * oneOverLen, q.z * oneOverLen);

	movups	xmm0, XMMWORD PTR $T1[esp+32]
	shufps	xmm1, xmm1, 0
	mulps	xmm1, xmm0

; 170  : 		}
; 171  : 
; 172  : 	    *this = normalize(tquat<T, Q>(real_part, t.x, t.y, t.z));

	movups	XMMWORD PTR [eax], xmm1

; 173  : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$tquat@M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z ENDP	; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$01@glm@@QAE?AU?$mat@$03$03M$01@1@XZ
_TEXT	SEGMENT
_qxy$1$ = -36						; size = 4
_qyz$1$ = -32						; size = 4
$T1 = -28						; size = 16
$T2 = -28						; size = 16
$T3 = -28						; size = 16
_qyy$1$ = -12						; size = 4
_qwy$1$ = -8						; size = 4
_qzz$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$01@glm@@QAE?AU?$mat@$03$03M$01@1@XZ PROC	; glm::tquat<float,2>::operator glm::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 208  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H

; 623  : 		T qyy(q.y * q.y);

	movss	xmm2, DWORD PTR [ecx+4]

; 624  : 		T qzz(q.z * q.z);

	movss	xmm1, DWORD PTR [ecx+8]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 625  : 		T qxz(q.x * q.z);

	movaps	xmm5, xmm1

; 208  : 	{

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 622  : 		T qxx(q.x * q.x);

	movss	xmm3, DWORD PTR [ecx]

; 626  : 		T qxy(q.x * q.y);

	movaps	xmm6, xmm2
	mulss	xmm6, xmm3
	movaps	xmm7, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 623  : 		T qyy(q.y * q.y);

	movss	DWORD PTR _qyy$1$[ebp], xmm0

; 624  : 		T qzz(q.z * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm1

; 625  : 		T qxz(q.x * q.z);

	mulss	xmm5, xmm3
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm0, xmm1
	mulss	xmm0, xmm2
	mulss	xmm7, xmm3
	movss	DWORD PTR _qyz$1$[ebp], xmm0

; 628  : 		T qwx(q.w * q.x);

	movss	xmm0, DWORD PTR [ecx+12]
	movaps	xmm4, xmm0
	mulss	xmm4, xmm3

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm3, xmm0

; 630  : 		T qwz(q.w * q.z);

	mulss	xmm0, xmm1

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm2

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);

	movaps	xmm2, xmm0
	addss	xmm2, xmm6

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	subss	xmm6, xmm0

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movss	xmm0, DWORD PTR _qzz$1$[ebp]
	addss	xmm0, xmm7
	movss	DWORD PTR _qwy$1$[ebp], xmm3
	movaps	xmm3, xmm5
	addss	xmm1, xmm1
	subss	xmm3, DWORD PTR _qwy$1$[ebp]
	addss	xmm2, xmm2
	movss	DWORD PTR _qxy$1$[ebp], xmm6

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movaps	xmm6, xmm4
	movss	DWORD PTR _qzz$1$[ebp], xmm0

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm5

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	movss	xmm5, DWORD PTR _qyz$1$[ebp]
	addss	xmm6, DWORD PTR _qyz$1$[ebp]
	subss	xmm5, xmm4
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T2[ebp+4], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movss	xmm4, DWORD PTR __real@3f800000

; 634  : 		Result[0][2] = T(2) * (qxz - qwy);

	addss	xmm3, xmm3

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	DWORD PTR _qwy$1$[ebp], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm6, xmm6
	addss	xmm0, xmm7
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T2[ebp+8], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	addss	xmm5, xmm5

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR _qzz$1$[ebp]
	addss	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T2[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	DWORD PTR $T3[ebp+8], xmm6
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 636  : 		Result[1][0] = T(2) * (qxy - qwz);

	movss	xmm0, DWORD PTR _qxy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T3[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	movaps	xmm0, xmm4
	subss	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	DWORD PTR $T1[ebp+4], xmm5
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	movss	xmm0, DWORD PTR _qwy$1$[ebp]
	addss	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	DWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, xmm0
	subss	xmm4, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm4

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$01@glm@@QAE?AU?$mat@$03$03M$01@1@XZ ENDP	; glm::tquat<float,2>::operator glm::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??B?$tquat@M$01@glm@@QAE?AU?$mat@$02$02M$01@1@XZ
_TEXT	SEGMENT
$T1 = -24						; size = 12
$T2 = -24						; size = 12
$T3 = -24						; size = 12
_qyz$1$ = -12						; size = 4
_qxx$1$ = -8						; size = 4
_qyy$1$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
??B?$tquat@M$01@glm@@QAE?AU?$mat@$02$02M$01@1@XZ PROC	; glm::tquat<float,2>::operator glm::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 202  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm2, DWORD PTR __real@3f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [edx], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR $T3[ebp+8]

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [edx+12], xmm0
	mov	DWORD PTR [edx+8], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm1, xmm1
	movq	QWORD PTR [edx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [edx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR [edx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl

; 622  : 		T qxx(q.x * q.x);

	movss	xmm2, DWORD PTR [ecx]

; 623  : 		T qyy(q.y * q.y);

	movss	xmm1, DWORD PTR [ecx+4]
	movaps	xmm0, xmm2
	mulss	xmm0, xmm2

; 624  : 		T qzz(q.z * q.z);
; 625  : 		T qxz(q.x * q.z);
; 626  : 		T qxy(q.x * q.y);

	movaps	xmm4, xmm1
	mulss	xmm4, xmm2
	movss	DWORD PTR _qxx$1$[ebp], xmm0
	movaps	xmm0, xmm1
	mulss	xmm0, xmm1
	movss	DWORD PTR _qyy$1$[ebp], xmm0
	movss	xmm0, DWORD PTR [ecx+8]

; 627  : 		T qyz(q.y * q.z);

	movaps	xmm3, xmm0
	movaps	xmm5, xmm0
	mulss	xmm5, xmm0
	movaps	xmm7, xmm0
	mulss	xmm3, xmm1
	mulss	xmm7, xmm2
	movss	DWORD PTR _qyz$1$[ebp], xmm3

; 628  : 		T qwx(q.w * q.x);

	movss	xmm3, DWORD PTR [ecx+12]
	movaps	xmm6, xmm3
	mulss	xmm6, xmm2

; 629  : 		T qwy(q.w * q.y);

	movaps	xmm2, xmm3
	mulss	xmm2, xmm1

; 630  : 		T qwz(q.w * q.z);
; 631  : 
; 632  : 		Result[0][0] = T(1) - T(2) * (qyy +  qzz);

	movaps	xmm1, xmm5
	addss	xmm1, DWORD PTR _qyy$1$[ebp]
	mulss	xmm3, xmm0
	movss	xmm0, DWORD PTR __real@3f800000

; 633  : 		Result[0][1] = T(2) * (qxy + qwz);
; 634  : 		Result[0][2] = T(2) * (qxz - qwy);
; 635  : 
; 636  : 		Result[1][0] = T(2) * (qxy - qwz);
; 637  : 		Result[1][1] = T(1) - T(2) * (qxx +  qzz);

	addss	xmm5, DWORD PTR _qxx$1$[ebp]
	addss	xmm1, xmm1
	addss	xmm5, xmm5
	subss	xmm0, xmm1

; 638  : 		Result[1][2] = T(2) * (qyz + qwx);

	movss	xmm1, DWORD PTR _qyz$1$[ebp]
	movss	DWORD PTR [edx], xmm0
	movaps	xmm0, xmm3
	addss	xmm0, xmm4
	subss	xmm4, xmm3
	addss	xmm0, xmm0
	addss	xmm4, xmm4
	movss	DWORD PTR [edx+4], xmm0
	movaps	xmm0, xmm7
	subss	xmm0, xmm2
	movss	DWORD PTR [edx+12], xmm4
	movss	xmm4, DWORD PTR __real@3f800000

; 639  : 
; 640  : 		Result[2][0] = T(2) * (qxz + qwy);

	addss	xmm2, xmm7
	addss	xmm0, xmm0
	addss	xmm2, xmm2
	movss	DWORD PTR [edx+8], xmm0
	movaps	xmm0, xmm4
	subss	xmm0, xmm5
	movss	DWORD PTR [edx+24], xmm2
	movss	DWORD PTR [edx+16], xmm0
	movaps	xmm0, xmm6
	addss	xmm0, xmm1

; 641  : 		Result[2][1] = T(2) * (qyz - qwx);

	subss	xmm1, xmm6
	addss	xmm0, xmm0
	addss	xmm1, xmm1
	movss	DWORD PTR [edx+20], xmm0

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	xmm0, DWORD PTR _qyy$1$[ebp]
	addss	xmm0, DWORD PTR _qxx$1$[ebp]
	movss	DWORD PTR [edx+28], xmm1
	addss	xmm0, xmm0
	subss	xmm4, xmm0

; 203  : 		return mat3_cast(*this);

	mov	eax, edx

; 642  : 		Result[2][2] = T(1) - T(2) * (qxx +  qyy);

	movss	DWORD PTR [edx+32], xmm4

; 204  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??B?$tquat@M$01@glm@@QAE?AU?$mat@$02$02M$01@1@XZ ENDP	; glm::tquat<float,2>::operator glm::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__w$ = 8						; size = 4
__x$ = 12						; size = 4
__y$ = 16						; size = 4
__z$ = 20						; size = 4
??0?$tquat@M$01@glm@@QAE@MMMM@Z PROC			; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 120  : 	{}

	push	ebp
	mov	ebp, esp

; 119  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 120  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$tquat@M$01@glm@@QAE@MMMM@Z ENDP			; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??0?$tquat@M$01@glm@@QAE@MABU?$vec@$02M$01@1@@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_v$ = 12						; size = 4
??0?$tquat@M$01@glm@@QAE@MABU?$vec@$02M$01@1@@Z PROC	; glm::tquat<float,2>::tquat<float,2>, COMDAT
; _this$ = ecx

; 115  : 	{}

	push	ebp
	mov	ebp, esp

; 114  : 		: x(v.x), y(v.y), z(v.z), w(s)

	mov	edx, DWORD PTR _v$[ebp]
	movss	xmm0, DWORD PTR _s$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 115  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	8
??0?$tquat@M$01@glm@@QAE@MABU?$vec@$02M$01@1@@Z ENDP	; glm::tquat<float,2>::tquat<float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$01@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$01@glm@@QBEABMH@Z PROC			; glm::tquat<float,2>::operator[], COMDAT
; _this$ = ecx

; 81   : 	{

	push	ebp
	mov	ebp, esp

; 82   : 		assert(i >= 0 && i < this->length());
; 83   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 84   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$01@glm@@QBEABMH@Z ENDP			; glm::tquat<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.inl
;	COMDAT ??A?$tquat@M$01@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$tquat@M$01@glm@@QAEAAMH@Z PROC			; glm::tquat<float,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$tquat@M$01@glm@@QAEAAMH@Z ENDP			; glm::tquat<float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\gtc\quaternion.hpp
;	COMDAT ?length@?$tquat@M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$tquat@M$01@glm@@SAHXZ PROC			; glm::tquat<float,2>::length, COMDAT

; 73   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$tquat@M$01@glm@@SAHXZ ENDP			; glm::tquat<float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 388  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+96], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 390  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 380  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+ecx*8+96], xmm1
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 382  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 369  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 370  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+96], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 359  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 360  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+96], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$03$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm3, QWORD PTR [eax+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm2, XMMWORD PTR [eax+72]

; 228  : 	}

	mov	eax, ecx
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+96], xmm2
	movups	XMMWORD PTR [ecx+112], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 215  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+80]

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);
; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 210  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 210  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 197  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 192  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+48], xmm2

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 174  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@000@Z PROC ; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+80], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+112], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@000@Z ENDP ; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABN000000000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABN000000000000000@Z PROC	; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	XMMWORD PTR [ecx+64], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+96], xmm3
	movups	XMMWORD PTR [ecx+112], xmm2
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03N$0A@@glm@@QAE@ABN000000000000000@Z ENDP	; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$0A@@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_s$ = 8							; size = 4
??0?$mat@$03$03N$0A@@glm@@QAE@ABN@Z PROC		; glm::mat<4,4,double,0>::mat<4,4,double,0>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm3, xmm3

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm3
	xorps	xmm2, xmm2

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 201  : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	unpcklpd xmm1, xmm3
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	xmm0, QWORD PTR [eax]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	unpcklpd xmm3, xmm0

; 51   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+96], xmm1
	movups	XMMWORD PTR [ecx+112], xmm3
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03N$0A@@glm@@QAE@ABN@Z ENDP		; glm::mat<4,4,double,0>::mat<4,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<4,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<4,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<4,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<4,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03N$0A@@glm@@SAHXZ PROC		; glm::mat<4,4,double,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03N$0A@@glm@@SAHXZ ENDP		; glm::mat<4,4,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,0>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp

; 388  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,0>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 374  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	ret	0
??F?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 364  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	ret	0
??E?$mat@$03$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T3[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+44]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 228  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 228  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 219  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 210  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 199  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 192  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 183  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 174  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 165  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 165  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@000@Z PROC ; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@000@Z ENDP ; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABM000000000000000@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABM000000000000000@Z PROC	; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T4[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T4[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 66   : 	}

	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03M$0A@@glm@@QAE@ABM000000000000000@Z ENDP	; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$0A@@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_s$ = 8							; size = 4
??0?$mat@$03$03M$0A@@glm@@QAE@ABM@Z PROC		; glm::mat<4,4,float,0>::mat<4,4,float,0>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 51   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 51   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$0A@@glm@@QAE@ABM@Z ENDP		; glm::mat<4,4,float,0>::mat<4,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<4,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<4,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<4,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<4,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03M$0A@@glm@@SAHXZ PROC		; glm::mat<4,4,float,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03M$0A@@glm@@SAHXZ ENDP		; glm::mat<4,4,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 388  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+96], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 390  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 380  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+ecx*8+96], xmm1
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 382  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 369  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 370  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+96], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$03$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 359  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 360  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+96], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$03$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm3, QWORD PTR [eax+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm2, XMMWORD PTR [eax+72]

; 228  : 	}

	mov	eax, ecx
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+96], xmm2
	movups	XMMWORD PTR [ecx+112], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 215  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+80]

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);
; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 210  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 210  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 197  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 192  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+48], xmm2

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 174  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@000@Z PROC ; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+80], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+112], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@000@Z ENDP ; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABN000000000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABN000000000000000@Z PROC	; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	XMMWORD PTR [ecx+64], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+96], xmm3
	movups	XMMWORD PTR [ecx+112], xmm2
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03N$00@glm@@QAE@ABN000000000000000@Z ENDP	; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$00@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_s$ = 8							; size = 4
??0?$mat@$03$03N$00@glm@@QAE@ABN@Z PROC			; glm::mat<4,4,double,1>::mat<4,4,double,1>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm3, xmm3

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm3
	xorps	xmm2, xmm2

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 201  : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	unpcklpd xmm1, xmm3
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	xmm0, QWORD PTR [eax]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	unpcklpd xmm3, xmm0

; 51   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+96], xmm1
	movups	XMMWORD PTR [ecx+112], xmm3
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03N$00@glm@@QAE@ABN@Z ENDP			; glm::mat<4,4,double,1>::mat<4,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z PROC	; glm::mat<4,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<4,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z PROC	; glm::mat<4,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<4,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03N$00@glm@@SAHXZ PROC		; glm::mat<4,4,double,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03N$00@glm@@SAHXZ ENDP		; glm::mat<4,4,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,1>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp

; 388  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,1>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 374  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	ret	0
??F?$mat@$03$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 364  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	ret	0
??E?$mat@$03$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T3[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+44]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 228  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 228  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 219  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 210  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 199  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 192  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 183  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 174  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 165  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 165  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@000@Z PROC ; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@000@Z ENDP ; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABM000000000000000@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABM000000000000000@Z PROC	; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T4[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T4[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 66   : 	}

	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03M$00@glm@@QAE@ABM000000000000000@Z ENDP	; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$00@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_s$ = 8							; size = 4
??0?$mat@$03$03M$00@glm@@QAE@ABM@Z PROC			; glm::mat<4,4,float,1>::mat<4,4,float,1>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 51   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 51   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$00@glm@@QAE@ABM@Z ENDP			; glm::mat<4,4,float,1>::mat<4,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z PROC	; glm::mat<4,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<4,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z PROC	; glm::mat<4,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<4,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03M$00@glm@@SAHXZ PROC		; glm::mat<4,4,float,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03M$00@glm@@SAHXZ ENDP		; glm::mat<4,4,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 388  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+96], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 390  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi
	push	edi

; 380  : 		mat<4, 4, T, Q> Result(*this);

	mov	edi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, 32					; 00000020H
	mov	esi, edx
	xor	eax, eax
	rep movsd
	pop	edi
	pop	esi
	npad	2
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [edx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	ecx, ecx
	npad	8
$LL19@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [edx+ecx*8+96], xmm1
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL19@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 382  : 		return Result;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 369  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 370  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 371  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 372  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 373  : 		--this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+96], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$03$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 359  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 360  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 361  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+32], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 362  : 		++this->value[2];

	xor	eax, eax
	npad	5
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 363  : 		++this->value[3];

	xor	eax, eax
	npad	8
$LL17@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+96]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8+96], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL17@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$03$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm3, QWORD PTR [eax+88]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm2, XMMWORD PTR [eax+72]

; 228  : 	}

	mov	eax, ecx
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+96], xmm2
	movups	XMMWORD PTR [ecx+112], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 215  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+80]

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);
; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 210  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 210  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 197  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 192  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+32], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+48], xmm2

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	unpcklpd xmm2, xmm3

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
	movups	XMMWORD PTR [ecx+112], xmm1

; 174  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+96], xmm0
	movups	XMMWORD PTR [ecx+112], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@000@Z PROC ; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+80], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+96], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+112], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@000@Z ENDP ; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABN000000000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABN000000000000000@Z PROC	; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	XMMWORD PTR [ecx+64], xmm3
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+80], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+96], xmm3
	movups	XMMWORD PTR [ecx+112], xmm2
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03N$01@glm@@QAE@ABN000000000000000@Z ENDP	; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03N$01@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_s$ = 8							; size = 4
??0?$mat@$03$03N$01@glm@@QAE@ABN@Z PROC			; glm::mat<4,4,double,2>::mat<4,4,double,2>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm3, xmm3

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm3
	xorps	xmm2, xmm2

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 201  : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	unpcklpd xmm1, xmm3
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	xmm0, QWORD PTR [eax]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	unpcklpd xmm3, xmm0

; 51   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+96], xmm1
	movups	XMMWORD PTR [ecx+112], xmm3
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03N$01@glm@@QAE@ABN@Z ENDP			; glm::mat<4,4,double,2>::mat<4,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z PROC	; glm::mat<4,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<4,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z PROC	; glm::mat<4,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<4,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03N$01@glm@@SAHXZ PROC		; glm::mat<4,4,double,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03N$01@glm@@SAHXZ ENDP		; glm::mat<4,4,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,2>::operator--, COMDAT
; _this$ = ecx

; 387  : 	{

	push	ebp
	mov	ebp, esp

; 388  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 391  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,4,float,2>::operator++, COMDAT
; _this$ = ecx

; 379  : 	{

	push	ebp
	mov	ebp, esp

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 380  : 		mat<4, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 383  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??F?$mat@$03$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 374  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 375  : 	}

	ret	0
??F?$mat@$03$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??E?$mat@$03$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,4,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 364  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	xmm0, XMMWORD PTR [ecx+48]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 365  : 	}

	ret	0
??E?$mat@$03$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 223  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 224  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T3[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 225  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 226  : 		this->value[2] = col_type(m[2], 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+40]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+44]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 228  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 227  : 		this->value[3] = col_type(m[3], 1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 228  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 216  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 217  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 219  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 218  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 219  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 205  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 206  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 210  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 207  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 208  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 209  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 210  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp

; 197  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 198  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 199  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 200  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 201  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 188  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 189  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 192  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 190  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 191  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 192  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 179  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 183  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 180  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 181  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 182  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 183  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 174  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 172  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 173  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 174  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 161  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 165  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 162  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 163  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@3f800000000000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 164  : 		this->value[3] = col_type(0, 0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0

; 165  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@000@Z PROC ; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 76   : 	{

	push	ebp
	mov	ebp, esp

; 77   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 80   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 81   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@000@Z ENDP ; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABM000000000000000@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
_x3$ = 56						; size = 4
_y3$ = 60						; size = 4
_z3$ = 64						; size = 4
_w3$ = 68						; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABM000000000000000@Z PROC	; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 61   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T4[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T4[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 62   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 63   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 64   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _w3$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 66   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 65   : 		this->value[3] = col_type(x3, y3, z3, w3);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 66   : 	}

	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$03M$01@glm@@QAE@ABM000000000000000@Z ENDP	; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??0?$mat@$03$03M$01@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
$T4 = -16						; size = 16
_s$ = 8							; size = 4
??0?$mat@$03$03M$01@glm@@QAE@ABM@Z PROC			; glm::mat<4,4,float,2>::mat<4,4,float,2>, COMDAT
; _this$ = ecx

; 46   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T4[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T4[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 47   : 		this->value[0] = col_type(s, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 48   : 		this->value[1] = col_type(0, s, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 49   : 		this->value[2] = col_type(0, 0, s, 0);

	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 51   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl

; 50   : 		this->value[3] = col_type(0, 0, 0, s);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0

; 51   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$03M$01@glm@@QAE@ABM@Z ENDP			; glm::mat<4,4,float,2>::mat<4,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z PROC	; glm::mat<4,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 241  : 	{

	push	ebp
	mov	ebp, esp

; 242  : 		assert(i < this->length());
; 243  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 244  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<4,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.inl
;	COMDAT ??A?$mat@$03$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z PROC	; glm::mat<4,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 234  : 	{

	push	ebp
	mov	ebp, esp

; 235  : 		assert(i < this->length());
; 236  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 237  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<4,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x4.hpp
;	COMDAT ?length@?$mat@$03$03M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$03M$01@glm@@SAHXZ PROC		; glm::mat<4,4,float,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$mat@$03$03M$01@glm@@SAHXZ ENDP		; glm::mat<4,4,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,0>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,0>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 189  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 190  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 191  : 		this->value[3] = col_type(m[3], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 182  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 172  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 163  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 164  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm2, XMMWORD PTR [eax+96]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+112]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+48]
	movq	xmm1, QWORD PTR [eax+64]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm0, xmm0
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 135  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+40], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2

; 138  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@000@Z PROC ; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	QWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 79   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+88], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@000@Z ENDP ; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABN00000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABN00000000000@Z PROC	; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 64   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02N$0A@@glm@@QAE@ABN00000000000@Z ENDP	; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$0A@@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_s$ = 8							; size = 4
??0?$mat@$03$02N$0A@@glm@@QAE@ABN@Z PROC		; glm::mat<4,3,double,0>::mat<4,3,double,0>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpckhpd xmm1, xmm1
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 49   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02N$0A@@glm@@QAE@ABN@Z ENDP		; glm::mat<4,3,double,0>::mat<4,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<4,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<4,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<4,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<4,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02N$0A@@glm@@SAHXZ PROC		; glm::mat<4,3,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02N$0A@@glm@@SAHXZ ENDP		; glm::mat<4,3,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,0>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,0>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
	movss	xmm2, DWORD PTR [edx+32]
	movss	xmm1, DWORD PTR [edx+36]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 200  : 		this->value[3] = col_type(0);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+24]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	xorps	xmm1, xmm1

; 181  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 182  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 172  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 173  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 174  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 161  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 162  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+20], eax

; 163  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 164  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+48]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+52]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+56]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 143  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 144  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 145  : 		this->value[2] = col_type(m[2]);

	movq	xmm0, QWORD PTR [edx+24]
	mov	eax, DWORD PTR [edx+32]
	movq	QWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+32], eax

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 135  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	xorps	xmm0, xmm0

; 136  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 136  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 137  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 138  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@000@Z PROC ; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+36], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+44], eax

; 79   : 	}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@000@Z ENDP ; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABM00000000000@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABM00000000000@Z PROC	; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x2$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x3$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02M$0A@@glm@@QAE@ABM00000000000@Z ENDP	; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$0A@@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_s$ = 8							; size = 4
??0?$mat@$03$02M$0A@@glm@@QAE@ABM@Z PROC		; glm::mat<4,3,float,0>::mat<4,3,float,0>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	edx, DWORD PTR _s$[ebp]
	xorps	xmm2, xmm2

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	xmm1, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 47   : 		this->value[2] = col_type(0, 0, s);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 48   : 		this->value[3] = col_type(0, 0, 0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 48   : 		this->value[3] = col_type(0, 0, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$0A@@glm@@QAE@ABM@Z ENDP		; glm::mat<4,3,float,0>::mat<4,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<4,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<4,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<4,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<4,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02M$0A@@glm@@SAHXZ PROC		; glm::mat<4,3,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02M$0A@@glm@@SAHXZ ENDP		; glm::mat<4,3,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,1>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,1>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 189  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 190  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 191  : 		this->value[3] = col_type(m[3], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 182  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 172  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 163  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 164  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm2, XMMWORD PTR [eax+96]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+112]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+48]
	movq	xmm1, QWORD PTR [eax+64]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm0, xmm0
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 135  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+40], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2

; 138  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@000@Z PROC ; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	QWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 79   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+88], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@000@Z ENDP ; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABN00000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABN00000000000@Z PROC	; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 64   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02N$00@glm@@QAE@ABN00000000000@Z ENDP	; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$00@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_s$ = 8							; size = 4
??0?$mat@$03$02N$00@glm@@QAE@ABN@Z PROC			; glm::mat<4,3,double,1>::mat<4,3,double,1>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpckhpd xmm1, xmm1
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 49   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02N$00@glm@@QAE@ABN@Z ENDP			; glm::mat<4,3,double,1>::mat<4,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z PROC	; glm::mat<4,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<4,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z PROC	; glm::mat<4,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<4,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02N$00@glm@@SAHXZ PROC		; glm::mat<4,3,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02N$00@glm@@SAHXZ ENDP		; glm::mat<4,3,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,1>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,1>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
	movss	xmm2, DWORD PTR [edx+32]
	movss	xmm1, DWORD PTR [edx+36]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 200  : 		this->value[3] = col_type(0);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+24]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	xorps	xmm1, xmm1

; 181  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 182  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 172  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 173  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 174  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 161  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 162  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+20], eax

; 163  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 164  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+48]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+52]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+56]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 143  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 144  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 145  : 		this->value[2] = col_type(m[2]);

	movq	xmm0, QWORD PTR [edx+24]
	mov	eax, DWORD PTR [edx+32]
	movq	QWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+32], eax

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 135  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	xorps	xmm0, xmm0

; 136  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 136  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 137  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 138  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@000@Z PROC ; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+36], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+44], eax

; 79   : 	}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@000@Z ENDP ; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABM00000000000@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABM00000000000@Z PROC	; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x2$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x3$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02M$00@glm@@QAE@ABM00000000000@Z ENDP	; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$00@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_s$ = 8							; size = 4
??0?$mat@$03$02M$00@glm@@QAE@ABM@Z PROC			; glm::mat<4,3,float,1>::mat<4,3,float,1>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	edx, DWORD PTR _s$[ebp]
	xorps	xmm2, xmm2

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	xmm1, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 47   : 		this->value[2] = col_type(0, 0, s);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 48   : 		this->value[3] = col_type(0, 0, 0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 48   : 		this->value[3] = col_type(0, 0, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$00@glm@@QAE@ABM@Z ENDP			; glm::mat<4,3,float,1>::mat<4,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z PROC	; glm::mat<4,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<4,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z PROC	; glm::mat<4,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<4,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02M$00@glm@@SAHXZ PROC		; glm::mat<4,3,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02M$00@glm@@SAHXZ ENDP		; glm::mat<4,3,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,2>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,double,2>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [eax+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [eax+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+64], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+80]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+80], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 189  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 190  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 191  : 		this->value[3] = col_type(m[3], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 182  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 183  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm3

; 171  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm3

; 172  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm3
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 163  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm1, xmm1

; 164  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1

; 165  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm2, XMMWORD PTR [eax+96]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+112]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+48]
	movq	xmm1, QWORD PTR [eax+64]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	xorps	xmm0, xmm0
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 135  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+40], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2

; 138  : 	}

	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@000@Z PROC ; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	QWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 79   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+88], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@000@Z ENDP ; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABN00000000000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABN00000000000@Z PROC	; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 64   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+72], xmm2
	movq	QWORD PTR [ecx+88], xmm1
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02N$01@glm@@QAE@ABN00000000000@Z ENDP	; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02N$01@glm@@QAE@ABN@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_s$ = 8							; size = 4
??0?$mat@$03$02N$01@glm@@QAE@ABN@Z PROC			; glm::mat<4,3,double,2>::mat<4,3,double,2>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	eax, DWORD PTR _s$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpckhpd xmm1, xmm1
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR $T1[ebp], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	unpcklpd xmm0, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 49   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+72], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	movq	QWORD PTR [ecx+88], xmm2
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02N$01@glm@@QAE@ABN@Z ENDP			; glm::mat<4,3,double,2>::mat<4,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z PROC	; glm::mat<4,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<4,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z PROC	; glm::mat<4,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<4,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02N$01@glm@@SAHXZ PROC		; glm::mat<4,3,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02N$01@glm@@SAHXZ ENDP		; glm::mat<4,3,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,2>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 343  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,3,float,2>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 335  : 		mat<4, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??F?$mat@$03$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 330  : 	}

	ret	0
??F?$mat@$03$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??E?$mat@$03$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,3,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 320  : 	}

	ret	0
??E?$mat@$03$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
	movss	xmm2, DWORD PTR [edx+32]
	movss	xmm1, DWORD PTR [edx+36]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 200  : 		this->value[3] = col_type(0);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 188  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 189  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 190  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+24]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 191  : 		this->value[3] = col_type(m[3], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	xorps	xmm1, xmm1

; 181  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 181  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 182  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 170  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 171  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 172  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 173  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 174  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 161  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 162  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+20], eax

; 163  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 164  : 		this->value[3] = col_type(0);

	unpcklps xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm1
	mov	DWORD PTR [ecx+44], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+48]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+52]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+56]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 143  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 144  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 145  : 		this->value[2] = col_type(m[2]);

	movq	xmm0, QWORD PTR [edx+24]
	mov	eax, DWORD PTR [edx+32]
	movq	QWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+32], eax

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+36], xmm0
	mov	DWORD PTR [ecx+44], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 134  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
	movss	xmm1, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 135  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm1, xmm0
	xorps	xmm0, xmm0

; 136  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 136  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T2[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 137  : 		this->value[3] = col_type(0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 138  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@000@Z PROC ; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+36], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+44], eax

; 79   : 	}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@000@Z ENDP ; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABM00000000000@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
_x3$ = 44						; size = 4
_y3$ = 48						; size = 4
_z3$ = 52						; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABM00000000000@Z PROC	; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T4[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 60   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 61   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x2$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y2$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	movq	QWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 62   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+32], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR _x3$[ebp]
	movss	xmm2, DWORD PTR [eax]
	mov	eax, DWORD PTR _y3$[ebp]
	movss	xmm1, DWORD PTR [eax]
	mov	eax, DWORD PTR _z3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 63   : 		this->value[3] = col_type(x3, y3, z3);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$03$02M$01@glm@@QAE@ABM00000000000@Z ENDP	; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??0?$mat@$03$02M$01@glm@@QAE@ABM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
$T4 = -12						; size = 12
_s$ = 8							; size = 4
??0?$mat@$03$02M$01@glm@@QAE@ABM@Z PROC			; glm::mat<4,3,float,2>::mat<4,3,float,2>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	edx, DWORD PTR _s$[ebp]
	xorps	xmm2, xmm2

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T4[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	mov	eax, DWORD PTR $T4[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm0, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 45   : 		this->value[0] = col_type(s, 0, 0);

	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	xmm1, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 46   : 		this->value[1] = col_type(0, s, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 47   : 		this->value[2] = col_type(0, 0, s);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 48   : 		this->value[3] = col_type(0, 0, 0);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl

; 48   : 		this->value[3] = col_type(0, 0, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+36], xmm2
	mov	DWORD PTR [ecx+44], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$02M$01@glm@@QAE@ABM@Z ENDP			; glm::mat<4,3,float,2>::mat<4,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z PROC	; glm::mat<4,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<4,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.inl
;	COMDAT ??A?$mat@$03$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z PROC	; glm::mat<4,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<4,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x3.hpp
;	COMDAT ?length@?$mat@$03$02M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$02M$01@glm@@SAHXZ PROC		; glm::mat<4,3,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$02M$01@glm@@SAHXZ ENDP		; glm::mat<4,3,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,0>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,0>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 200  : 		this->value[3] = col_type(0);
; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 189  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 190  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm1

; 191  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+72]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 181  : 		this->value[2] = col_type(0);
; 182  : 		this->value[3] = col_type(0);
; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 163  : 		this->value[2] = col_type(0);
; 164  : 		this->value[3] = col_type(0);
; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+32], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+96]

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 		this->value[2] = col_type(0);
; 137  : 		this->value[3] = col_type(0);
; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@000@Z PROC ; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@000@Z ENDP ; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
_x3$ = 56						; size = 8
_y3$ = 64						; size = 8
??0?$mat@$03$01N$0A@@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 64   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 64   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$01N$0A@@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$03$01N$0A@@glm@@QAE@N@Z PROC			; glm::mat<4,2,double,0>::mat<4,2,double,0>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 46   : 		this->value[1] = col_type(0, scalar);
; 47   : 		this->value[2] = col_type(0, 0);
; 48   : 		this->value[3] = col_type(0, 0);
; 49   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$03$01N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<4,2,double,0>::mat<4,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<4,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<4,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<4,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<4,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01N$0A@@glm@@SAHXZ PROC		; glm::mat<4,2,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01N$0A@@glm@@SAHXZ ENDP		; glm::mat<4,2,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,0>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,0>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 170  : 		this->value[0] = col_type(m[0]);

	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], edx

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [edi+16], eax

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edi+24], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [edi+28], eax

; 174  : 	}

	mov	eax, edi
	mov	DWORD PTR [edi+20], ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+48]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+52]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	ecx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edx

; 135  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi+8], eax

; 136  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [esi+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [esi+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [esi+28], eax

; 138  : 	}

	mov	eax, esi
	mov	DWORD PTR [esi+12], ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@000@Z PROC ; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 76   : 		this->value[1] = v1;
; 77   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]

; 78   : 		this->value[3] = v3;

	mov	ecx, DWORD PTR _v3$[ebp]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+24], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+28], eax

; 79   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@000@Z ENDP ; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
_x3$ = 32						; size = 4
_y3$ = 36						; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T4[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+12], eax

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$03$01M$0A@@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$03$01M$0A@@glm@@QAE@M@Z PROC			; glm::mat<4,2,float,0>::mat<4,2,float,0>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T4[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T3[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<4,2,float,0>::mat<4,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<4,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<4,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<4,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<4,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01M$0A@@glm@@SAHXZ PROC		; glm::mat<4,2,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01M$0A@@glm@@SAHXZ ENDP		; glm::mat<4,2,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,1>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,1>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 200  : 		this->value[3] = col_type(0);
; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 189  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 190  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm1

; 191  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+72]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 181  : 		this->value[2] = col_type(0);
; 182  : 		this->value[3] = col_type(0);
; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 163  : 		this->value[2] = col_type(0);
; 164  : 		this->value[3] = col_type(0);
; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+32], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+96]

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 		this->value[2] = col_type(0);
; 137  : 		this->value[3] = col_type(0);
; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@000@Z PROC ; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@000@Z ENDP ; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
_x3$ = 56						; size = 8
_y3$ = 64						; size = 8
??0?$mat@$03$01N$00@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 64   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 64   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$01N$00@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$03$01N$00@glm@@QAE@N@Z PROC			; glm::mat<4,2,double,1>::mat<4,2,double,1>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 46   : 		this->value[1] = col_type(0, scalar);
; 47   : 		this->value[2] = col_type(0, 0);
; 48   : 		this->value[3] = col_type(0, 0);
; 49   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$03$01N$00@glm@@QAE@N@Z ENDP			; glm::mat<4,2,double,1>::mat<4,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z PROC	; glm::mat<4,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<4,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z PROC	; glm::mat<4,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<4,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01N$00@glm@@SAHXZ PROC		; glm::mat<4,2,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01N$00@glm@@SAHXZ ENDP		; glm::mat<4,2,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,1>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,1>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 170  : 		this->value[0] = col_type(m[0]);

	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], edx

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [edi+16], eax

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edi+24], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [edi+28], eax

; 174  : 	}

	mov	eax, edi
	mov	DWORD PTR [edi+20], ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+48]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+52]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	ecx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edx

; 135  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi+8], eax

; 136  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [esi+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [esi+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [esi+28], eax

; 138  : 	}

	mov	eax, esi
	mov	DWORD PTR [esi+12], ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@000@Z PROC ; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 76   : 		this->value[1] = v1;
; 77   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]

; 78   : 		this->value[3] = v3;

	mov	ecx, DWORD PTR _v3$[ebp]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+24], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+28], eax

; 79   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@000@Z ENDP ; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
_x3$ = 32						; size = 4
_y3$ = 36						; size = 4
??0?$mat@$03$01M$00@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T4[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+12], eax

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$03$01M$00@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$03$01M$00@glm@@QAE@M@Z PROC			; glm::mat<4,2,float,1>::mat<4,2,float,1>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T4[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T3[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$00@glm@@QAE@M@Z ENDP			; glm::mat<4,2,float,1>::mat<4,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z PROC	; glm::mat<4,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<4,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z PROC	; glm::mat<4,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<4,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01M$00@glm@@SAHXZ PROC		; glm::mat<4,2,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01M$00@glm@@SAHXZ ENDP		; glm::mat<4,2,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,2>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,double,2>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 198  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 199  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 200  : 		this->value[3] = col_type(0);
; 201  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 189  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 190  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm1

; 191  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+72]

; 192  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 180  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 181  : 		this->value[2] = col_type(0);
; 182  : 		this->value[3] = col_type(0);
; 183  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 173  : 		this->value[3] = col_type(0);
; 174  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 162  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 163  : 		this->value[2] = col_type(0);
; 164  : 		this->value[3] = col_type(0);
; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 154  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]
	movups	XMMWORD PTR [ecx+32], xmm1

; 155  : 		this->value[3] = col_type(m[3]);

	movups	xmm1, XMMWORD PTR [eax+96]

; 156  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 144  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 145  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 146  : 		this->value[3] = col_type(0);
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 		this->value[2] = col_type(0);
; 137  : 		this->value[3] = col_type(0);
; 138  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@000@Z PROC ; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 76   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 77   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 78   : 		this->value[3] = v3;

	mov	eax, DWORD PTR _v3$[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 79   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@000@Z ENDP ; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
_x3$ = 56						; size = 8
_y3$ = 64						; size = 8
??0?$mat@$03$01N$01@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 64   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 64   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$03$01N$01@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$03$01N$01@glm@@QAE@N@Z PROC			; glm::mat<4,2,double,2>::mat<4,2,double,2>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 46   : 		this->value[1] = col_type(0, scalar);
; 47   : 		this->value[2] = col_type(0, 0);
; 48   : 		this->value[3] = col_type(0, 0);
; 49   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$03$01N$01@glm@@QAE@N@Z ENDP			; glm::mat<4,2,double,2>::mat<4,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z PROC	; glm::mat<4,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<4,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z PROC	; glm::mat<4,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<4,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01N$01@glm@@SAHXZ PROC		; glm::mat<4,2,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01N$01@glm@@SAHXZ ENDP		; glm::mat<4,2,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$03$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,2>::operator--, COMDAT
; _this$ = ecx

; 342  : 	{

	push	ebp
	mov	ebp, esp

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 343  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 346  : 	}

	pop	ebp
	ret	8
??F?$mat@$03$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$03$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<4,2,float,2>::operator++, COMDAT
; _this$ = ecx

; 334  : 	{

	push	ebp
	mov	ebp, esp

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 335  : 		mat<4, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 338  : 	}

	pop	ebp
	ret	8
??E?$mat@$03$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<4,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??F?$mat@$03$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$03$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 329  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 330  : 	}

	ret	0
??F?$mat@$03$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??E?$mat@$03$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$03$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<4,2,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 319  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 320  : 	}

	ret	0
??E?$mat@$03$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<4,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 196  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 197  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 198  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 199  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 200  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 201  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 188  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 189  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 190  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+36]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 191  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 192  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 178  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 179  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 180  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 181  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 182  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 183  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi

; 170  : 		this->value[0] = col_type(m[0]);

	mov	esi, DWORD PTR _m$[ebp]
	push	edi
	mov	edi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [esi+4]
	mov	DWORD PTR [edi], eax
	mov	DWORD PTR [edi+4], edx

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [esi+8]
	mov	ecx, DWORD PTR [esi+12]
	mov	DWORD PTR [edi+8], eax
	mov	DWORD PTR [edi+12], ecx

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR [esi+16]
	mov	ecx, DWORD PTR [esi+20]
	mov	DWORD PTR [edi+16], eax

; 173  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edi+24], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [edi+28], eax

; 174  : 	}

	mov	eax, edi
	mov	DWORD PTR [edi+20], ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 160  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 161  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 162  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 163  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 164  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 154  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+48]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+52]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 155  : 		this->value[3] = col_type(m[3]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 156  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 142  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T4[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T4[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 143  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 144  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 145  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 146  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	esi, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	ecx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 134  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], edx

; 135  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR [ecx+12]
	mov	DWORD PTR [esi+8], eax

; 136  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [esi+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [esi+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 137  : 		this->value[3] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [esi+28], eax

; 138  : 	}

	mov	eax, esi
	mov	DWORD PTR [esi+12], ecx
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@000@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
_v3$ = 20						; size = 4
??0?$mat@$03$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@000@Z PROC ; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 76   : 		this->value[1] = v1;
; 77   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]

; 78   : 		this->value[3] = v3;

	mov	ecx, DWORD PTR _v3$[ebp]
	mov	DWORD PTR [esi+20], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+24], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+28], eax

; 79   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$03$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@000@Z ENDP ; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
_x3$ = 32						; size = 4
_y3$ = 36						; size = 4
??0?$mat@$03$01M$01@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 59   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T4[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T4[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T4[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T4[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 60   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 61   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+12], eax

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 62   : 		this->value[2] = col_type(x2, y2);

	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y3$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 63   : 		this->value[3] = col_type(x3, y3);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 64   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$03$01M$01@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??0?$mat@$03$01M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
$T4 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$03$01M$01@glm@@QAE@M@Z PROC			; glm::mat<4,2,float,2>::mat<4,2,float,2>, COMDAT
; _this$ = ecx

; 44   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T4[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T4[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 45   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T3[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T3[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 46   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 47   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+24], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl

; 48   : 		this->value[3] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 49   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$03$01M$01@glm@@QAE@M@Z ENDP			; glm::mat<4,2,float,2>::mat<4,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z PROC	; glm::mat<4,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 214  : 	{

	push	ebp
	mov	ebp, esp

; 215  : 		assert(i < this->length());
; 216  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 217  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<4,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.inl
;	COMDAT ??A?$mat@$03$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$03$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z PROC	; glm::mat<4,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 207  : 	{

	push	ebp
	mov	ebp, esp

; 208  : 		assert(i < this->length());
; 209  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 210  : 	}

	pop	ebp
	ret	4
??A?$mat@$03$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<4,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat4x2.hpp
;	COMDAT ?length@?$mat@$03$01M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$03$01M$01@glm@@SAHXZ PROC		; glm::mat<4,2,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }

	mov	eax, 4
	ret	0
?length@?$mat@$03$01M$01@glm@@SAHXZ ENDP		; glm::mat<4,2,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 313  : 		return Result;

	mov	eax, esi
	pop	esi

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 305  : 		return Result;

	mov	eax, esi
	pop	esi

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 293  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 294  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 284  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 285  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$02$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 171  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 155  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 147  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	xmm1, XMMWORD PTR [eax+80]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1

; 123  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@00@Z PROC ; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@00@Z ENDP ; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@NNNNNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
_x2$ = 72						; size = 8
_y2$ = 80						; size = 8
_z2$ = 88						; size = 8
_w2$ = 96						; size = 8
??0?$mat@$02$03N$0A@@glm@@QAE@NNNNNNNNNNNN@Z PROC	; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+48], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm3

; 58   : 	}

	pop	ebp
	ret	96					; 00000060H
??0?$mat@$02$03N$0A@@glm@@QAE@NNNNNNNNNNNN@Z ENDP	; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$02$03N$0A@@glm@@QAE@N@Z PROC			; glm::mat<3,4,double,0>::mat<3,4,double,0>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm3, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm3
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	unpcklpd xmm0, xmm3
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	unpcklpd xmm3, xmm2
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	movups	XMMWORD PTR [ecx+80], xmm3

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$03N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<3,4,double,0>::mat<3,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<3,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<3,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<3,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<3,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03N$0A@@glm@@SAHXZ PROC		; glm::mat<3,4,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03N$0A@@glm@@SAHXZ ENDP		; glm::mat<3,4,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,0>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,0>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 297  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	ret	0
??F?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 288  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	ret	0
??E?$mat@$02$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 179  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 179  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 171  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 155  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 147  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 131  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 131  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 123  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 123  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@00@Z PROC ; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@00@Z ENDP ; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@MMMMMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@MMMMMMMMMMMM@Z PROC	; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 58   : 	}

	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$03M$0A@@glm@@QAE@MMMMMMMMMMMM@Z ENDP	; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$02$03M$0A@@glm@@QAE@M@Z PROC			; glm::mat<3,4,float,0>::mat<3,4,float,0>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	DWORD PTR $T3[ebp], xmm1

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<3,4,float,0>::mat<3,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<3,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<3,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<3,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<3,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03M$0A@@glm@@SAHXZ PROC		; glm::mat<3,4,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03M$0A@@glm@@SAHXZ ENDP		; glm::mat<3,4,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 313  : 		return Result;

	mov	eax, esi
	pop	esi

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 305  : 		return Result;

	mov	eax, esi
	pop	esi

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 293  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 294  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$02$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 284  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 285  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$02$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 171  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 155  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 147  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	xmm1, XMMWORD PTR [eax+80]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1

; 123  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@00@Z PROC ; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@00@Z ENDP ; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@NNNNNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
_x2$ = 72						; size = 8
_y2$ = 80						; size = 8
_z2$ = 88						; size = 8
_w2$ = 96						; size = 8
??0?$mat@$02$03N$00@glm@@QAE@NNNNNNNNNNNN@Z PROC	; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+48], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm3

; 58   : 	}

	pop	ebp
	ret	96					; 00000060H
??0?$mat@$02$03N$00@glm@@QAE@NNNNNNNNNNNN@Z ENDP	; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$02$03N$00@glm@@QAE@N@Z PROC			; glm::mat<3,4,double,1>::mat<3,4,double,1>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm3, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm3
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	unpcklpd xmm0, xmm3
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	unpcklpd xmm3, xmm2
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	movups	XMMWORD PTR [ecx+80], xmm3

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$03N$00@glm@@QAE@N@Z ENDP			; glm::mat<3,4,double,1>::mat<3,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z PROC	; glm::mat<3,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<3,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z PROC	; glm::mat<3,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<3,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03N$00@glm@@SAHXZ PROC		; glm::mat<3,4,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03N$00@glm@@SAHXZ ENDP		; glm::mat<3,4,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,1>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,1>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 297  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	ret	0
??F?$mat@$02$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 288  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	ret	0
??E?$mat@$02$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 179  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 179  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 171  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 155  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 147  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 131  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 131  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 123  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 123  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@00@Z PROC ; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@00@Z ENDP ; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@MMMMMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
??0?$mat@$02$03M$00@glm@@QAE@MMMMMMMMMMMM@Z PROC	; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 58   : 	}

	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$03M$00@glm@@QAE@MMMMMMMMMMMM@Z ENDP	; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$02$03M$00@glm@@QAE@M@Z PROC			; glm::mat<3,4,float,1>::mat<3,4,float,1>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	DWORD PTR $T3[ebp], xmm1

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$00@glm@@QAE@M@Z ENDP			; glm::mat<3,4,float,1>::mat<3,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z PROC	; glm::mat<3,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<3,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z PROC	; glm::mat<3,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<3,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03M$00@glm@@SAHXZ PROC		; glm::mat<3,4,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03M$00@glm@@SAHXZ ENDP		; glm::mat<3,4,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 313  : 		return Result;

	mov	eax, esi
	pop	esi

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	xor	eax, eax
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [esi+48], xmm0
	movups	xmm0, XMMWORD PTR [ecx+64]
	movups	XMMWORD PTR [esi+64], xmm0
	movups	xmm0, XMMWORD PTR [ecx+80]
	movups	XMMWORD PTR [esi+80], xmm0
	npad	2
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	edx, edx
	npad	8
$LL15@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8+64]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+edx*8+64], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL15@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 305  : 		return Result;

	mov	eax, esi
	pop	esi

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 293  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 294  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 295  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 296  : 		--this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$02$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 284  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 285  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 286  : 		++this->value[1];

	xor	eax, eax
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 287  : 		++this->value[2];

	xor	eax, eax
	npad	8
$LL13@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+64]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+64], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL13@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$02$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 171  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm2, XMMWORD PTR [eax+32]

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 155  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm1
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+16], xmm2

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movups	XMMWORD PTR [ecx+80], xmm1

; 147  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+64]
	movups	xmm1, XMMWORD PTR [eax+80]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+80], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+64], xmm1
	movups	XMMWORD PTR [ecx+80], xmm2
	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 202  : 		, z(static_cast<T>(_z))

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+80], xmm1

; 123  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@00@Z PROC ; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+80], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@00@Z ENDP ; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@NNNNNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
_x2$ = 72						; size = 8
_y2$ = 80						; size = 8
_z2$ = 88						; size = 8
_w2$ = 96						; size = 8
??0?$mat@$02$03N$01@glm@@QAE@NNNNNNNNNNNN@Z PROC	; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	XMMWORD PTR [ecx+48], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+64], xmm2
	movups	XMMWORD PTR [ecx+80], xmm3

; 58   : 	}

	pop	ebp
	ret	96					; 00000060H
??0?$mat@$02$03N$01@glm@@QAE@NNNNNNNNNNNN@Z ENDP	; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$02$03N$01@glm@@QAE@N@Z PROC			; glm::mat<3,4,double,2>::mat<3,4,double,2>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	xmm3, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0

; 201  : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm3
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	movsd	QWORD PTR $T1[ebp+24], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	unpcklpd xmm0, xmm3
	movups	XMMWORD PTR [ecx+32], xmm0
	xorps	xmm0, xmm0

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	unpcklpd xmm3, xmm2
	movups	XMMWORD PTR [ecx+64], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	movups	XMMWORD PTR [ecx+80], xmm3

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$03N$01@glm@@QAE@N@Z ENDP			; glm::mat<3,4,double,2>::mat<3,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z PROC	; glm::mat<3,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<3,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z PROC	; glm::mat<3,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<3,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03N$01@glm@@SAHXZ PROC		; glm::mat<3,4,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03N$01@glm@@SAHXZ ENDP		; glm::mat<3,4,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,2>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,4,float,2>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 303  : 		mat<3, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm2, xmm0
	movups	XMMWORD PTR [ecx+32], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??F?$mat@$02$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 297  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 298  : 	}

	ret	0
??F?$mat@$02$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??E?$mat@$02$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,4,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 288  : 		return *this;

	mov	eax, ecx
	movaps	xmm2, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	movaps	xmm1, xmm2
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	movups	xmm0, XMMWORD PTR [ecx+32]
	addps	xmm0, xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 289  : 	}

	ret	0
??E?$mat@$02$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 176  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 177  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 179  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 178  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 179  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 168  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 169  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 171  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 170  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 171  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 162  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 163  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 152  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 153  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 155  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 154  : 		this->value[2] = col_type(m[2], 1, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 155  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 144  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 147  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 145  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 146  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 147  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm0, XMMWORD PTR [eax+32]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 128  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T2[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 129  : 		this->value[1] = col_type(m[1], 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+28]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 131  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 130  : 		this->value[2] = col_type(m[2], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 131  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 123  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movaps	xmm0, XMMWORD PTR __xmm@000000003f8000000000000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 122  : 		this->value[2] = col_type(0, 0, 1, 0);

	movups	XMMWORD PTR [ecx+32], xmm0

; 123  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@00@Z PROC ; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@00@Z ENDP ; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@MMMMMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
_x2$ = 40						; size = 4
_y2$ = 44						; size = 4
_z2$ = 48						; size = 4
_w2$ = 52						; size = 4
??0?$mat@$02$03M$01@glm@@QAE@MMMMMMMMMMMM@Z PROC	; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T3[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 55   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 56   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w2$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 57   : 		this->value[2] = col_type(x2, y2, z2, w2);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 58   : 	}

	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$03M$01@glm@@QAE@MMMMMMMMMMMM@Z ENDP	; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??0?$mat@$02$03M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
$T3 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$02$03M$01@glm@@QAE@M@Z PROC			; glm::mat<3,4,float,2>::mat<3,4,float,2>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 45   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	movss	DWORD PTR $T3[ebp], xmm1

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T3[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	xmm0, XMMWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1

; 202  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 42   : 		this->value[0] = col_type(scalar, 0, 0, 0);

	movups	XMMWORD PTR [ecx], xmm0

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 200  : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0

; 201  : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 43   : 		this->value[1] = col_type(0, scalar, 0, 0);

	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 203  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl

; 44   : 		this->value[2] = col_type(0, 0, scalar, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+32], xmm0

; 45   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$03M$01@glm@@QAE@M@Z ENDP			; glm::mat<3,4,float,2>::mat<3,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z PROC	; glm::mat<3,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<3,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.inl
;	COMDAT ??A?$mat@$02$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z PROC	; glm::mat<3,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<3,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x4.hpp
;	COMDAT ?length@?$mat@$02$03M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$03M$01@glm@@SAHXZ PROC		; glm::mat<3,4,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$03M$01@glm@@SAHXZ ENDP		; glm::mat<3,4,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,0>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,0>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 179  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]
	movq	QWORD PTR [ecx+40], xmm0

; 180  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+64]

; 181  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 173  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 163  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 164  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 155  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 157  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1

; 157  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 147  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 148  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp

; 138  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 139  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 140  : 		this->value[2] = col_type(0, 0, 1);
; 141  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 133  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 123  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 125  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 124  : 		this->value[2] = col_type(0, 0, 1);

	movq	QWORD PTR [ecx+64], xmm1

; 125  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@00@Z PROC ; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 73   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@00@Z ENDP ; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@NNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
_x2$ = 56						; size = 8
_y2$ = 64						; size = 8
_z2$ = 72						; size = 8
??0?$mat@$02$02N$0A@@glm@@QAE@NNNNNNNNN@Z PROC		; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 60   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 60   : 	}

	pop	ebp
	ret	72					; 00000048H
??0?$mat@$02$02N$0A@@glm@@QAE@NNNNNNNNN@Z ENDP		; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$02$02N$0A@@glm@@QAE@N@Z PROC			; glm::mat<3,3,double,0>::mat<3,3,double,0>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 47   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm2

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$02N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<3,3,double,0>::mat<3,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<3,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<3,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<3,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<3,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02N$0A@@glm@@SAHXZ PROC		; glm::mat<3,3,double,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02N$0A@@glm@@SAHXZ ENDP		; glm::mat<3,3,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,0>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 328  : 		--*this;
; 329  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,0>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 320  : 		++*this;
; 321  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 179  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 180  : 		this->value[2] = m[2];

	movq	xmm0, QWORD PTR [edx+24]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax

; 181  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 173  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	xmm1, DWORD PTR [edx+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 155  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 156  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 157  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 138  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 139  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 140  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 141  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 133  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 124  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 124  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 125  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@00@Z PROC ; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 73   : 	}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@00@Z ENDP ; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@MMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@MMMMMMMMM@Z PROC		; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 60   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0?$mat@$02$02M$0A@@glm@@QAE@MMMMMMMMM@Z ENDP		; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$02$02M$0A@@glm@@QAE@M@Z PROC			; glm::mat<3,3,float,0>::mat<3,3,float,0>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 47   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<3,3,float,0>::mat<3,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<3,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<3,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<3,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<3,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02M$0A@@glm@@SAHXZ PROC		; glm::mat<3,3,float,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02M$0A@@glm@@SAHXZ ENDP		; glm::mat<3,3,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,1>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,1>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 179  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]
	movq	QWORD PTR [ecx+40], xmm0

; 180  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+64]

; 181  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 173  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 163  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 164  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 155  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 157  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1

; 157  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 147  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 148  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp

; 138  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 139  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 140  : 		this->value[2] = col_type(0, 0, 1);
; 141  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 133  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 123  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 125  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 124  : 		this->value[2] = col_type(0, 0, 1);

	movq	QWORD PTR [ecx+64], xmm1

; 125  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@00@Z PROC ; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 73   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@00@Z ENDP ; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@NNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
_x2$ = 56						; size = 8
_y2$ = 64						; size = 8
_z2$ = 72						; size = 8
??0?$mat@$02$02N$00@glm@@QAE@NNNNNNNNN@Z PROC		; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 60   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 60   : 	}

	pop	ebp
	ret	72					; 00000048H
??0?$mat@$02$02N$00@glm@@QAE@NNNNNNNNN@Z ENDP		; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$02$02N$00@glm@@QAE@N@Z PROC			; glm::mat<3,3,double,1>::mat<3,3,double,1>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 47   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm2

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$02N$00@glm@@QAE@N@Z ENDP			; glm::mat<3,3,double,1>::mat<3,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z PROC	; glm::mat<3,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<3,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z PROC	; glm::mat<3,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<3,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02N$00@glm@@SAHXZ PROC		; glm::mat<3,3,double,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02N$00@glm@@SAHXZ ENDP		; glm::mat<3,3,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,1>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 328  : 		--*this;
; 329  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,1>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 320  : 		++*this;
; 321  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 179  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 180  : 		this->value[2] = m[2];

	movq	xmm0, QWORD PTR [edx+24]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax

; 181  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 173  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	xmm1, DWORD PTR [edx+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 155  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 156  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 157  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 138  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 139  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 140  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 141  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 133  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 124  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 124  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 125  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@00@Z PROC ; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 73   : 	}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@00@Z ENDP ; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@MMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
??0?$mat@$02$02M$00@glm@@QAE@MMMMMMMMM@Z PROC		; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 60   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0?$mat@$02$02M$00@glm@@QAE@MMMMMMMMM@Z ENDP		; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$02$02M$00@glm@@QAE@M@Z PROC			; glm::mat<3,3,float,1>::mat<3,3,float,1>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 47   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$00@glm@@QAE@M@Z ENDP			; glm::mat<3,3,float,1>::mat<3,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z PROC	; glm::mat<3,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<3,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z PROC	; glm::mat<3,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<3,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02M$00@glm@@SAHXZ PROC		; glm::mat<3,3,float,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02M$00@glm@@SAHXZ ENDP		; glm::mat<3,3,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,2>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,double,2>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
	movups	xmm0, XMMWORD PTR [ecx+48]
	movups	XMMWORD PTR [eax+48], xmm0
	movq	xmm0, QWORD PTR [ecx+64]
	movq	QWORD PTR [eax+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+48]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+64]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+64], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 179  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]
	movq	QWORD PTR [ecx+40], xmm0

; 180  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+48]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+64]

; 181  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 171  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 172  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 173  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 163  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 164  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 165  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 155  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 157  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1

; 157  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 147  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 148  : 		this->value[2] = col_type(m[2], 1);

	movups	xmm2, XMMWORD PTR [eax+32]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp

; 138  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 139  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 140  : 		this->value[2] = col_type(0, 0, 1);
; 141  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 131  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 132  : 		this->value[2] = col_type(m[2]);

	movups	xmm2, XMMWORD PTR [eax+64]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+80]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 133  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 123  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 125  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	movups	XMMWORD PTR [ecx+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	movq	QWORD PTR [ecx+40], xmm2

; 124  : 		this->value[2] = col_type(0, 0, 1);

	movq	QWORD PTR [ecx+64], xmm1

; 125  : 	}

	pop	ebp
	ret	4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@00@Z PROC ; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	QWORD PTR [ecx+40], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+48], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 73   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+64], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@00@Z ENDP ; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@NNNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
_x2$ = 56						; size = 8
_y2$ = 64						; size = 8
_z2$ = 72						; size = 8
??0?$mat@$02$02N$01@glm@@QAE@NNNNNNNNN@Z PROC		; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 60   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movups	XMMWORD PTR [ecx+24], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+40], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+48], xmm2
	movq	QWORD PTR [ecx+64], xmm1

; 60   : 	}

	pop	ebp
	ret	72					; 00000048H
??0?$mat@$02$02N$01@glm@@QAE@NNNNNNNNN@Z ENDP		; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$02$02N$01@glm@@QAE@N@Z PROC			; glm::mat<3,3,double,2>::mat<3,3,double,2>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 47   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	movups	XMMWORD PTR [ecx+48], xmm0
	movq	QWORD PTR [ecx+64], xmm2

; 47   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$02$02N$01@glm@@QAE@N@Z ENDP			; glm::mat<3,3,double,2>::mat<3,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z PROC	; glm::mat<3,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<3,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z PROC	; glm::mat<3,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<3,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02N$01@glm@@SAHXZ PROC		; glm::mat<3,3,double,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02N$01@glm@@SAHXZ ENDP		; glm::mat<3,3,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,2>::operator--, COMDAT
; _this$ = ecx

; 326  : 	{

	push	ebp
	mov	ebp, esp

; 327  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 327  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 328  : 		--*this;
; 329  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 330  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,3,float,2>::operator++, COMDAT
; _this$ = ecx

; 318  : 	{

	push	ebp
	mov	ebp, esp

; 319  : 		mat<3, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 319  : 		mat<3, 3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+32]
	movups	XMMWORD PTR [edx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [edx+16], xmm0
	mov	DWORD PTR [edx+32], eax

; 320  : 		++*this;
; 321  : 		return Result;

	mov	eax, edx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 322  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??F?$mat@$02$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 313  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 314  : 	}

	ret	0
??F?$mat@$02$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??E?$mat@$02$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,3,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 304  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+32]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 305  : 	}

	ret	0
??E?$mat@$02$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 177  : 	{

	push	ebp
	mov	ebp, esp

; 178  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 179  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 180  : 		this->value[2] = m[2];

	movq	xmm0, QWORD PTR [edx+24]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax

; 181  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 170  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 171  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 172  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 173  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 161  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 162  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 163  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 164  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 165  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 153  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 154  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
	movss	xmm2, DWORD PTR [edx+16]
	movss	xmm1, DWORD PTR [edx+20]
	movss	DWORD PTR $T2[ebp+8], xmm0
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 155  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 156  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 156  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 157  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 145  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 146  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 147  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+16]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	unpcklps xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 148  : 		this->value[2] = col_type(m[2], 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm1
	mov	DWORD PTR [ecx+32], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 137  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 138  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 138  : 		this->value[0] = m[0];

	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 139  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	xorps	xmm0, xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 140  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm0, xmm0
	movq	QWORD PTR [ecx+24], xmm0
	mov	DWORD PTR [ecx+32], eax

; 141  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 129  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 130  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 131  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+32]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+36]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 132  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 133  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 122  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx], xmm1
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 123  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 124  : 		this->value[2] = col_type(0, 0, 1);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 1065353216	; 3f800000H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 124  : 		this->value[2] = col_type(0, 0, 1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 125  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@00@Z PROC ; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 69   : 	{

	push	ebp
	mov	ebp, esp

; 70   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 71   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 72   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+24], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+32], eax

; 73   : 	}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@00@Z ENDP ; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@MMMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
_x2$ = 32						; size = 4
_y2$ = 36						; size = 4
_z2$ = 40						; size = 4
??0?$mat@$02$02M$01@glm@@QAE@MMMMMMMMM@Z PROC		; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T3[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T3[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	movq	QWORD PTR [ecx+12], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x2$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _z2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 57   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 59   : 		this->value[2] = col_type(x2, y2, z2);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 60   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
??0?$mat@$02$02M$01@glm@@QAE@MMMMMMMMM@Z ENDP		; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??0?$mat@$02$02M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
$T3 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$02$02M$01@glm@@QAE@M@Z PROC			; glm::mat<3,3,float,2>::mat<3,3,float,2>, COMDAT
; _this$ = ecx

; 43   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T3[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 44   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T3[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 45   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm1
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	unpcklps xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	movss	DWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl

; 46   : 		this->value[2] = col_type(0, 0, scalar);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+24], xmm2
	mov	DWORD PTR [ecx+32], eax

; 47   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$02M$01@glm@@QAE@M@Z ENDP			; glm::mat<3,3,float,2>::mat<3,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z PROC	; glm::mat<3,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 194  : 	{

	push	ebp
	mov	ebp, esp

; 195  : 		assert(i < this->length());
; 196  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 197  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<3,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.inl
;	COMDAT ??A?$mat@$02$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z PROC	; glm::mat<3,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 187  : 	{

	push	ebp
	mov	ebp, esp

; 188  : 		assert(i < this->length());
; 189  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 190  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<3,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x3.hpp
;	COMDAT ?length@?$mat@$02$02M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$02M$01@glm@@SAHXZ PROC		; glm::mat<3,3,float,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$02M$01@glm@@SAHXZ ENDP		; glm::mat<3,3,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,0>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,0>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 177  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 178  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 169  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 170  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 154  : 		this->value[2] = col_type(T(0));
; 155  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 145  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 146  : 		this->value[2] = col_type(T(0));
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 129  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 130  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 121  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 122  : 		this->value[2] = col_type(0);
; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@00@Z PROC ; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@00@Z ENDP ; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
??0?$mat@$02$01N$0A@@glm@@QAE@NNNNNN@Z PROC		; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1

; 58   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$01N$0A@@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$02$01N$0A@@glm@@QAE@N@Z PROC			; glm::mat<3,2,double,0>::mat<3,2,double,0>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 43   : 		this->value[1] = col_type(0, scalar);
; 44   : 		this->value[2] = col_type(0, 0);
; 45   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	unpcklpd xmm2, xmm1
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	8
??0?$mat@$02$01N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<3,2,double,0>::mat<3,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<3,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<3,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<3,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<3,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01N$0A@@glm@@SAHXZ PROC		; glm::mat<3,2,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01N$0A@@glm@@SAHXZ ENDP		; glm::mat<3,2,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,0>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,0>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 179  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 169  : 		this->value[1] = m[1];

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 170  : 		this->value[2] = m[2];

	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 171  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 163  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 155  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 139  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 131  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 120  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 121  : 		this->value[1] = m[1];
; 122  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 123  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@00@Z PROC ; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 69   : 		this->value[1] = v1;
; 70   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+20], eax

; 71   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@00@Z ENDP ; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@MMMMMM@Z PROC		; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 58   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$02$01M$0A@@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$02$01M$0A@@glm@@QAE@M@Z PROC			; glm::mat<3,2,float,0>::mat<3,2,float,0>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T3[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 45   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<3,2,float,0>::mat<3,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<3,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<3,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<3,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<3,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01M$0A@@glm@@SAHXZ PROC		; glm::mat<3,2,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01M$0A@@glm@@SAHXZ ENDP		; glm::mat<3,2,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,1>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,1>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 177  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 178  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 169  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 170  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 154  : 		this->value[2] = col_type(T(0));
; 155  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 145  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 146  : 		this->value[2] = col_type(T(0));
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 129  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 130  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 121  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 122  : 		this->value[2] = col_type(0);
; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@00@Z PROC ; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@00@Z ENDP ; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
??0?$mat@$02$01N$00@glm@@QAE@NNNNNN@Z PROC		; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1

; 58   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$01N$00@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$02$01N$00@glm@@QAE@N@Z PROC			; glm::mat<3,2,double,1>::mat<3,2,double,1>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 43   : 		this->value[1] = col_type(0, scalar);
; 44   : 		this->value[2] = col_type(0, 0);
; 45   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	unpcklpd xmm2, xmm1
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	8
??0?$mat@$02$01N$00@glm@@QAE@N@Z ENDP			; glm::mat<3,2,double,1>::mat<3,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z PROC	; glm::mat<3,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<3,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z PROC	; glm::mat<3,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<3,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01N$00@glm@@SAHXZ PROC		; glm::mat<3,2,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01N$00@glm@@SAHXZ ENDP		; glm::mat<3,2,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,1>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,1>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 179  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 169  : 		this->value[1] = m[1];

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 170  : 		this->value[2] = m[2];

	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 171  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 163  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 155  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 139  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 131  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 120  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 121  : 		this->value[1] = m[1];
; 122  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 123  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@00@Z PROC ; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 69   : 		this->value[1] = v1;
; 70   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+20], eax

; 71   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@00@Z ENDP ; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
??0?$mat@$02$01M$00@glm@@QAE@MMMMMM@Z PROC		; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 58   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$02$01M$00@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$02$01M$00@glm@@QAE@M@Z PROC			; glm::mat<3,2,float,1>::mat<3,2,float,1>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T3[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 45   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$00@glm@@QAE@M@Z ENDP			; glm::mat<3,2,float,1>::mat<3,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z PROC	; glm::mat<3,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<3,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z PROC	; glm::mat<3,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<3,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01M$00@glm@@SAHXZ PROC		; glm::mat<3,2,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01M$00@glm@@SAHXZ ENDP		; glm::mat<3,2,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,2>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,double,2>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 177  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 178  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 179  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 169  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 170  : 		this->value[2] = m[2];

	movups	xmm0, XMMWORD PTR [eax+32]

; 171  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 161  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 162  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 163  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 153  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 154  : 		this->value[2] = col_type(T(0));
; 155  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm0, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 145  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 146  : 		this->value[2] = col_type(T(0));
; 147  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 137  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+16], xmm1

; 138  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+64]

; 139  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 129  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+16], xmm1

; 130  : 		this->value[2] = col_type(m[2]);

	movups	xmm1, XMMWORD PTR [eax+48]

; 131  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm1
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 121  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 122  : 		this->value[2] = col_type(0);
; 123  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@00@Z PROC ; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 69   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 70   : 		this->value[2] = v2;

	mov	eax, DWORD PTR _v2$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 71   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@00@Z ENDP ; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_x1$ = 24						; size = 8
_y1$ = 32						; size = 8
_x2$ = 40						; size = 8
_y2$ = 48						; size = 8
??0?$mat@$02$01N$01@glm@@QAE@NNNNNN@Z PROC		; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 58   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	unpcklpd xmm1, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	movups	XMMWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1

; 58   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$02$01N$01@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$02$01N$01@glm@@QAE@N@Z PROC			; glm::mat<3,2,double,2>::mat<3,2,double,2>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 43   : 		this->value[1] = col_type(0, scalar);
; 44   : 		this->value[2] = col_type(0, 0);
; 45   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	movups	XMMWORD PTR [ecx], xmm0
	unpcklpd xmm2, xmm1
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	movups	XMMWORD PTR [ecx+32], xmm0
	pop	ebp
	ret	8
??0?$mat@$02$01N$01@glm@@QAE@N@Z ENDP			; glm::mat<3,2,double,2>::mat<3,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z PROC	; glm::mat<3,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<3,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z PROC	; glm::mat<3,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<3,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01N$01@glm@@SAHXZ PROC		; glm::mat<3,2,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01N$01@glm@@SAHXZ ENDP		; glm::mat<3,2,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$02$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,2>::operator--, COMDAT
; _this$ = ecx

; 310  : 	{

	push	ebp
	mov	ebp, esp

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 311  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 314  : 	}

	pop	ebp
	ret	8
??F?$mat@$02$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$02$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<3,2,float,2>::operator++, COMDAT
; _this$ = ecx

; 302  : 	{

	push	ebp
	mov	ebp, esp

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 303  : 		mat<3, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 306  : 	}

	pop	ebp
	ret	8
??E?$mat@$02$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<3,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??F?$mat@$02$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$02$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 297  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 298  : 	}

	ret	0
??F?$mat@$02$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??E?$mat@$02$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$02$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<3,2,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 288  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 289  : 	}

	ret	0
??E?$mat@$02$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<3,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 175  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 176  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 177  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 178  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 179  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 167  : 	{

	push	ebp
	mov	ebp, esp

; 168  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 169  : 		this->value[1] = m[1];

	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 170  : 		this->value[2] = m[2];

	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 171  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 159  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 160  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 161  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 162  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 163  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 151  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 152  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 153  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 154  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 155  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 143  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 144  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 145  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 146  : 		this->value[2] = col_type(T(0));

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 147  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 135  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 136  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 137  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+32]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+36]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 138  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 139  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 127  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T3[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T3[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 128  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 129  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+24]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+28]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 130  : 		this->value[2] = col_type(m[2]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 131  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 120  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 34   : 		: x(scalar), y(scalar)

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 120  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 121  : 		this->value[1] = m[1];
; 122  : 		this->value[2] = col_type(0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 123  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@00@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_v2$ = 16						; size = 4
??0?$mat@$02$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@00@Z PROC ; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	push	esi
	mov	esi, ecx

; 69   : 		this->value[1] = v1;
; 70   : 		this->value[2] = v2;

	mov	ecx, DWORD PTR _v2$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi], eax
	mov	eax, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [esi+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [esi+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [esi+12], eax
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [esi+16], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [esi+20], eax

; 71   : 	}

	mov	eax, esi
	pop	esi
	pop	ebp
	ret	12					; 0000000cH
??0?$mat@$02$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@00@Z ENDP ; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
??0?$mat@$02$01M$01@glm@@QAE@MMMMMM@Z PROC		; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 54   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR _x0$[ebp]
	movss	DWORD PTR $T3[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T3[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T3[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR $T3[ebp+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 55   : 		this->value[0] = col_type(x0, y0);

	mov	DWORD PTR [ecx+4], eax

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _x2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 56   : 		this->value[1] = col_type(x1, y1);

	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y2$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 57   : 		this->value[2] = col_type(x2, y2);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 58   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$02$01M$01@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??0?$mat@$02$01M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
$T3 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$02$01M$01@glm@@QAE@M@Z PROC			; glm::mat<3,2,float,2>::mat<3,2,float,2>, COMDAT
; _this$ = ecx

; 41   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T3[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T3[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 42   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T2[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T2[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 43   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+12], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+16], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T1[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl

; 44   : 		this->value[2] = col_type(0, 0);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 45   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$02$01M$01@glm@@QAE@M@Z ENDP			; glm::mat<3,2,float,2>::mat<3,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z PROC	; glm::mat<3,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 192  : 	{

	push	ebp
	mov	ebp, esp

; 193  : 		assert(i < this->length());
; 194  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 195  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<3,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.inl
;	COMDAT ??A?$mat@$02$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$02$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z PROC	; glm::mat<3,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 185  : 	{

	push	ebp
	mov	ebp, esp

; 186  : 		assert(i < this->length());
; 187  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 188  : 	}

	pop	ebp
	ret	4
??A?$mat@$02$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<3,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat3x2.hpp
;	COMDAT ?length@?$mat@$02$01M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$02$01M$01@glm@@SAHXZ PROC		; glm::mat<3,2,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }

	mov	eax, 3
	ret	0
?length@?$mat@$02$01M$01@glm@@SAHXZ ENDP		; glm::mat<3,2,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 272  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 274  : 		return Result;

	mov	eax, esi
	pop	esi

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 264  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 266  : 		return Result;

	mov	eax, esi
	pop	esi

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,0>::operator--, COMDAT
; _this$ = ecx

; 255  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 256  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,0>::operator++, COMDAT
; _this$ = ecx

; 247  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 248  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$01$03N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 150  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 143  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 129  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 122  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 108  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 101  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@0@Z PROC ; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03N$0A@@glm@@QAE@ABU?$vec@$03N$0A@@1@0@Z ENDP ; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
??0?$mat@$01$03N$0A@@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm3

; 53   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$01$03N$0A@@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$01$03N$0A@@glm@@QAE@N@Z PROC			; glm::mat<2,4,double,0>::mat<2,4,double,0>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	unpcklpd xmm1, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$03N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<2,4,double,0>::mat<2,4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<2,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$0A@@glm@@QBEABU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<2,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z PROC ; glm::mat<2,4,double,0>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$0A@@glm@@QAEAAU?$vec@$03N$0A@@1@H@Z ENDP ; glm::mat<2,4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03N$0A@@glm@@SAHXZ PROC		; glm::mat<2,4,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03N$0A@@glm@@SAHXZ ENDP		; glm::mat<2,4,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,0>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp

; 272  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,0>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 258  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	ret	0
??F?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 250  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	ret	0
??E?$mat@$01$03M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 150  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 150  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 143  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 143  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 129  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 129  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 122  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 122  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 108  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 108  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 101  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 101  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@0@Z PROC ; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03M$0A@@glm@@QAE@ABU?$vec@$03M$0A@@1@0@Z ENDP ; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 53   : 	}

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$01$03M$0A@@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$01$03M$0A@@glm@@QAE@M@Z PROC			; glm::mat<2,4,float,0>::mat<2,4,float,0>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm1
	mov	DWORD PTR $T2[ebp+4], 0
	mov	DWORD PTR $T2[ebp+8], 0
	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp], 0
	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp+8], 0
	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<2,4,float,0>::mat<2,4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<2,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$0A@@glm@@QBEABU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<2,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z PROC ; glm::mat<2,4,float,0>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$0A@@glm@@QAEAAU?$vec@$03M$0A@@1@H@Z ENDP ; glm::mat<2,4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03M$0A@@glm@@SAHXZ PROC		; glm::mat<2,4,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03M$0A@@glm@@SAHXZ ENDP		; glm::mat<2,4,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 272  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 274  : 		return Result;

	mov	eax, esi
	pop	esi

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 264  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 266  : 		return Result;

	mov	eax, esi
	pop	esi

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,1>::operator--, COMDAT
; _this$ = ecx

; 255  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 256  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$01$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,1>::operator++, COMDAT
; _this$ = ecx

; 247  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 248  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$01$03N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 150  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 143  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 129  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 122  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 108  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 101  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@0@Z PROC ; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03N$00@glm@@QAE@ABU?$vec@$03N$00@1@0@Z ENDP ; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
??0?$mat@$01$03N$00@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm3

; 53   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$01$03N$00@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$01$03N$00@glm@@QAE@N@Z PROC			; glm::mat<2,4,double,1>::mat<2,4,double,1>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	unpcklpd xmm1, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$03N$00@glm@@QAE@N@Z ENDP			; glm::mat<2,4,double,1>::mat<2,4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z PROC	; glm::mat<2,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$00@glm@@QBEABU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<2,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z PROC	; glm::mat<2,4,double,1>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$00@glm@@QAEAAU?$vec@$03N$00@1@H@Z ENDP	; glm::mat<2,4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03N$00@glm@@SAHXZ PROC		; glm::mat<2,4,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03N$00@glm@@SAHXZ ENDP		; glm::mat<2,4,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,1>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp

; 272  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,1>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 258  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	ret	0
??F?$mat@$01$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 250  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	ret	0
??E?$mat@$01$03M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 150  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 150  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 143  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 143  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 129  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 129  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 122  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 122  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 108  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 108  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 101  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 101  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@0@Z PROC ; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03M$00@glm@@QAE@ABU?$vec@$03M$00@1@0@Z ENDP ; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
??0?$mat@$01$03M$00@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 53   : 	}

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$01$03M$00@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$01$03M$00@glm@@QAE@M@Z PROC			; glm::mat<2,4,float,1>::mat<2,4,float,1>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm1
	mov	DWORD PTR $T2[ebp+4], 0
	mov	DWORD PTR $T2[ebp+8], 0
	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp], 0
	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp+8], 0
	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$00@glm@@QAE@M@Z ENDP			; glm::mat<2,4,float,1>::mat<2,4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z PROC	; glm::mat<2,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$00@glm@@QBEABU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<2,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z PROC	; glm::mat<2,4,float,1>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$00@glm@@QAEAAU?$vec@$03M$00@1@H@Z ENDP	; glm::mat<2,4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03M$00@glm@@SAHXZ PROC		; glm::mat<2,4,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03M$00@glm@@SAHXZ ENDP		; glm::mat<2,4,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 272  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 274  : 		return Result;

	mov	eax, esi
	pop	esi

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	mov	edx, ecx
	push	esi

; 264  : 		mat<2, 4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	xor	eax, eax
	movups	xmm0, XMMWORD PTR [edx]
	movups	XMMWORD PTR [esi], xmm0
	movups	xmm0, XMMWORD PTR [edx+16]
	movups	XMMWORD PTR [esi+16], xmm0
	movups	xmm0, XMMWORD PTR [edx+32]
	movups	XMMWORD PTR [esi+32], xmm0
	movups	xmm0, XMMWORD PTR [edx+48]
	movups	XMMWORD PTR [esi+48], xmm0
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+eax*8]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	ecx, ecx
	npad	10
$LL11@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [edx+ecx*8+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [edx+ecx*8+32], xmm0
	add	ecx, 2
	cmp	ecx, 4
	jl	SHORT $LL11@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 266  : 		return Result;

	mov	eax, esi
	pop	esi

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,2>::operator--, COMDAT
; _this$ = ecx

; 255  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 256  : 		--this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 257  : 		--this->value[1];

	xor	eax, eax
	npad	10
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	mov	eax, ecx
	ret	0
??F?$mat@$01$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,double,2>::operator++, COMDAT
; _this$ = ecx

; 247  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 248  : 		++this->value[0];

	xor	eax, eax
	npad	7
$LL7@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL7@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 249  : 		++this->value[1];

	xor	eax, eax
	npad	7
$LL9@operator:
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+eax*8+32]
	addpd	xmm0, xmm2
	movups	XMMWORD PTR [ecx+eax*8+32], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL9@operator
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	mov	eax, ecx
	ret	0
??E?$mat@$01$03N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 150  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 143  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx+16], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+48]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 129  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 122  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm1

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+32]
	movups	xmm1, XMMWORD PTR [eax+48]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm3, xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx], xmm1
	movups	XMMWORD PTR [ecx+16], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movsd	xmm2, QWORD PTR [eax+40]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+24]

; 108  : 	}

	mov	eax, ecx
	unpcklpd xmm2, xmm3
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm2, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm2
	movups	XMMWORD PTR [ecx+16], xmm1

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm2, XMMWORD PTR [eax+16]

; 101  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@0@Z PROC ; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+32], xmm0
	movups	xmm0, XMMWORD PTR [eax+16]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+48], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03N$01@glm@@QAE@ABU?$vec@$03N$01@1@0@Z ENDP ; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@NNNNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_w0$ = 32						; size = 8
_x1$ = 40						; size = 8
_y1$ = 48						; size = 8
_z1$ = 56						; size = 8
_w1$ = 64						; size = 8
??0?$mat@$01$03N$01@glm@@QAE@NNNNNNNN@Z PROC		; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _w0$[ebp]
	movsd	xmm3, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	unpcklpd xmm3, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm1, QWORD PTR _w1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	XMMWORD PTR [ecx+16], xmm3
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm3, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	unpcklpd xmm2, xmm0
	unpcklpd xmm3, xmm1
	movups	XMMWORD PTR [ecx+32], xmm2
	movups	XMMWORD PTR [ecx+48], xmm3

; 53   : 	}

	pop	ebp
	ret	64					; 00000040H
??0?$mat@$01$03N$01@glm@@QAE@NNNNNNNN@Z ENDP		; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -32						; size = 32
_scalar$ = 8						; size = 8
??0?$mat@$01$03N$01@glm@@QAE@N@Z PROC			; glm::mat<2,4,double,2>::mat<2,4,double,2>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm0, xmm0
	movups	XMMWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp], xmm2
	xorps	xmm1, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	QWORD PTR $T1[ebp+24], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR $T1[ebp+16]

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	unpcklpd xmm1, xmm2
	movups	XMMWORD PTR [ecx+16], xmm0
	xorps	xmm0, xmm0
	movups	XMMWORD PTR [ecx+32], xmm1
	movups	XMMWORD PTR [ecx+48], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$03N$01@glm@@QAE@N@Z ENDP			; glm::mat<2,4,double,2>::mat<2,4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z PROC	; glm::mat<2,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$01@glm@@QBEABU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<2,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z PROC	; glm::mat<2,4,double,2>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03N$01@glm@@QAEAAU?$vec@$03N$01@1@H@Z ENDP	; glm::mat<2,4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03N$01@glm@@SAHXZ PROC		; glm::mat<2,4,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03N$01@glm@@SAHXZ ENDP		; glm::mat<2,4,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,2>::operator--, COMDAT
; _this$ = ecx

; 271  : 	{

	push	ebp
	mov	ebp, esp

; 272  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 275  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$03M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,4,float,2>::operator++, COMDAT
; _this$ = ecx

; 263  : 	{

	push	ebp
	mov	ebp, esp

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 264  : 		mat<2, 4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 267  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$03M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??F?$mat@$01$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 258  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 465  : 		--this->x;

	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 259  : 	}

	ret	0
??F?$mat@$01$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??E?$mat@$01$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$03M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,4,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 250  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
	movups	xmm0, XMMWORD PTR [ecx+16]
	addps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 251  : 	}

	ret	0
??E?$mat@$01$03M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 147  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 148  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 150  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 149  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 150  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 140  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 141  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 143  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 142  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 143  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 133  : 	{

	push	ebp
	mov	ebp, esp

; 134  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 135  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 136  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 126  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 127  : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 129  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 128  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 129  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 119  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 120  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 122  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 121  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 122  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 112  : 	{

	push	ebp
	mov	ebp, esp

; 113  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 114  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+16]

; 115  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	mov	eax, DWORD PTR _m$[ebp]

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 277  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 106  : 		this->value[0] = col_type(m[0], 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 274  : 		: x(static_cast<T>(_xyz.x))

	movss	xmm0, DWORD PTR [eax+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 275  : 		, y(static_cast<T>(_xyz.y))

	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR $T1[ebp+4], xmm0

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	xmm0, DWORD PTR [eax+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 108  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 276  : 		, z(static_cast<T>(_xyz.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 107  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 108  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_m$ = 8							; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 98   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T2[ebp+12], 0
	movss	xmm0, DWORD PTR [eax]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 222  : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 223  : 		, w(static_cast<T>(_w))

	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 99   : 		this->value[0] = col_type(m[0], 0, 0);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 220  : 		: x(static_cast<T>(_xy.x))

	movss	xmm0, DWORD PTR [eax+8]
	movss	DWORD PTR $T1[ebp], xmm0

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [eax+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 101  : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 221  : 		, y(static_cast<T>(_xy.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 100  : 		this->value[1] = col_type(m[1], 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 101  : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@0@Z PROC ; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 57   : 	{

	push	ebp
	mov	ebp, esp

; 58   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 59   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$03M$01@glm@@QAE@ABU?$vec@$03M$01@1@0@Z ENDP ; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@MMMMMMMM@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_w0$ = 20						; size = 4
_x1$ = 24						; size = 4
_y1$ = 28						; size = 4
_z1$ = 32						; size = 4
_w1$ = 36						; size = 4
??0?$mat@$01$03M$01@glm@@QAE@MMMMMMMM@Z PROC		; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 50   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 53   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z0$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w0$[ebp]
	movss	DWORD PTR $T2[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 51   : 		this->value[0] = col_type(x0, y0, z0, w0);

	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp+4], xmm0
	movss	xmm0, DWORD PTR _z1$[ebp]
	movss	DWORD PTR $T1[ebp+8], xmm0
	movss	xmm0, DWORD PTR _w1$[ebp]
	movss	DWORD PTR $T1[ebp+12], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 52   : 		this->value[1] = col_type(x1, y1, z1, w1);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 53   : 	}

	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
??0?$mat@$01$03M$01@glm@@QAE@MMMMMMMM@Z ENDP		; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??0?$mat@$01$03M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -16						; size = 16
$T2 = -16						; size = 16
_scalar$ = 8						; size = 4
??0?$mat@$01$03M$01@glm@@QAE@M@Z PROC			; glm::mat<2,4,float,2>::mat<2,4,float,2>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm1, DWORD PTR _scalar$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 42   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	DWORD PTR $T2[ebp], xmm1
	mov	DWORD PTR $T2[ebp+4], 0
	mov	DWORD PTR $T2[ebp+8], 0
	mov	DWORD PTR $T2[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T2[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp], 0
	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 40   : 		this->value[0] = col_type(scalar, Zero, Zero, Zero);

	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	DWORD PTR $T1[ebp+8], 0
	mov	DWORD PTR $T1[ebp+12], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl

; 41   : 		this->value[1] = col_type(Zero, scalar, Zero, Zero);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR [ecx+16], xmm0

; 42   : 	}

	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$03M$01@glm@@QAE@M@Z ENDP			; glm::mat<2,4,float,2>::mat<2,4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z PROC	; glm::mat<2,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 163  : 	{

	push	ebp
	mov	ebp, esp

; 164  : 		assert(i < this->length());
; 165  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 166  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$01@glm@@QBEABU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<2,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.inl
;	COMDAT ??A?$mat@$01$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z PROC	; glm::mat<2,4,float,2>::operator[], COMDAT
; _this$ = ecx

; 156  : 	{

	push	ebp
	mov	ebp, esp

; 157  : 		assert(i < this->length());
; 158  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 159  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$03M$01@glm@@QAEAAU?$vec@$03M$01@1@H@Z ENDP	; glm::mat<2,4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x4.hpp
;	COMDAT ?length@?$mat@$01$03M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$03M$01@glm@@SAHXZ PROC		; glm::mat<2,4,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$03M$01@glm@@SAHXZ ENDP		; glm::mat<2,4,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,0>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,0>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 148  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 149  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 141  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 134  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 127  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 120  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 99   : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$mat@$01$01N$0A@@1@@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z PROC ; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 59   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$02N$0A@@glm@@QAE@ABU?$vec@$02N$0A@@1@0@Z ENDP ; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
??0?$mat@$01$02N$0A@@glm@@QAE@NNNNNN@Z PROC		; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 52   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 52   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$01$02N$0A@@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$01$02N$0A@@glm@@QAE@N@Z PROC			; glm::mat<2,3,double,0>::mat<2,3,double,0>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 41   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 41   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$02N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<2,3,double,0>::mat<2,3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<2,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$0A@@glm@@QBEABU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<2,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z PROC ; glm::mat<2,3,double,0>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$0A@@glm@@QAEAAU?$vec@$02N$0A@@1@H@Z ENDP ; glm::mat<2,3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02N$0A@@glm@@SAHXZ PROC		; glm::mat<2,3,double,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02N$0A@@glm@@SAHXZ ENDP		; glm::mat<2,3,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,0>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,0>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 148  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 149  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 141  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 135  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 127  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 121  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 106  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 107  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 99   : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$mat@$01$01M$0A@@1@@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z PROC ; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$02M$0A@@glm@@QAE@ABU?$vec@$02M$0A@@1@0@Z ENDP ; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@MMMMMM@Z PROC		; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 52   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$01$02M$0A@@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$01$02M$0A@@glm@@QAE@M@Z PROC			; glm::mat<2,3,float,0>::mat<2,3,float,0>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 41   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<2,3,float,0>::mat<2,3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<2,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$0A@@glm@@QBEABU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<2,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z PROC ; glm::mat<2,3,float,0>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$0A@@glm@@QAEAAU?$vec@$02M$0A@@1@H@Z ENDP ; glm::mat<2,3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02M$0A@@glm@@SAHXZ PROC		; glm::mat<2,3,float,0>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02M$0A@@glm@@SAHXZ ENDP		; glm::mat<2,3,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,1>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,1>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 148  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 149  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 141  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 134  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 127  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 120  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 99   : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$mat@$01$01N$00@1@@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z PROC ; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 59   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$02N$00@glm@@QAE@ABU?$vec@$02N$00@1@0@Z ENDP ; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
??0?$mat@$01$02N$00@glm@@QAE@NNNNNN@Z PROC		; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 52   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 52   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$01$02N$00@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$01$02N$00@glm@@QAE@N@Z PROC			; glm::mat<2,3,double,1>::mat<2,3,double,1>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 41   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 41   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$02N$00@glm@@QAE@N@Z ENDP			; glm::mat<2,3,double,1>::mat<2,3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z PROC	; glm::mat<2,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$00@glm@@QBEABU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<2,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z PROC	; glm::mat<2,3,double,1>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$00@glm@@QAEAAU?$vec@$02N$00@1@H@Z ENDP	; glm::mat<2,3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02N$00@glm@@SAHXZ PROC		; glm::mat<2,3,double,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02N$00@glm@@SAHXZ ENDP		; glm::mat<2,3,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,1>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,1>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 148  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 149  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 141  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 135  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 127  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 121  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 106  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 107  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 99   : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$mat@$01$01M$00@1@@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z PROC ; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$02M$00@glm@@QAE@ABU?$vec@$02M$00@1@0@Z ENDP ; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
??0?$mat@$01$02M$00@glm@@QAE@MMMMMM@Z PROC		; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 52   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$01$02M$00@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$01$02M$00@glm@@QAE@M@Z PROC			; glm::mat<2,3,float,1>::mat<2,3,float,1>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 41   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$00@glm@@QAE@M@Z ENDP			; glm::mat<2,3,float,1>::mat<2,3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z PROC	; glm::mat<2,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$00@glm@@QBEABU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<2,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z PROC	; glm::mat<2,3,float,1>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$00@glm@@QAEAAU?$vec@$02M$00@1@H@Z ENDP	; glm::mat<2,3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02M$00@glm@@SAHXZ PROC		; glm::mat<2,3,float,1>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02M$00@glm@@SAHXZ ENDP		; glm::mat<2,3,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,2>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,double,2>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	movups	xmm0, XMMWORD PTR [ecx+32]
	movups	XMMWORD PTR [eax+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 285  : 		--this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 284  : 		--this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 276  : 		++this->z;

	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0

; 275  : 		++this->y;

	movups	xmm0, XMMWORD PTR [ecx+32]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+32], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]
	movq	QWORD PTR [ecx+16], xmm0

; 148  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+24]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+40]

; 149  : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 141  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 134  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 127  : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 120  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm2, XMMWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	XMMWORD PTR [ecx], xmm2
	movq	QWORD PTR [ecx+16], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm2, XMMWORD PTR [eax+32]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movsd	xmm1, QWORD PTR [eax+48]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movq	xmm1, QWORD PTR [eax+16]
	movups	XMMWORD PTR [ecx], xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm0, XMMWORD PTR [eax+24]
	movq	xmm1, QWORD PTR [eax+40]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	eax, DWORD PTR _m$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1
	movq	QWORD PTR [ecx+16], xmm2

; 99   : 		this->value[1] = col_type(m[1], 0);

	movups	xmm1, XMMWORD PTR [eax+16]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+24], xmm1
	movq	QWORD PTR [ecx+40], xmm2
	pop	ebp
	ret	4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$mat@$01$01N$01@1@@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z PROC ; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	QWORD PTR [ecx+16], xmm0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	xmm0, QWORD PTR [eax+16]

; 59   : 	}

	mov	eax, ecx
	movq	QWORD PTR [ecx+40], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$02N$01@glm@@QAE@ABU?$vec@$02N$01@1@0@Z ENDP ; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@NNNNNN@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 8
_y0$ = 16						; size = 8
_z0$ = 24						; size = 8
_x1$ = 32						; size = 8
_y1$ = 40						; size = 8
_z1$ = 48						; size = 8
??0?$mat@$01$02N$01@glm@@QAE@NNNNNN@Z PROC		; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 52   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklpd xmm2, xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movups	XMMWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm2, QWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx+16], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm1, QWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklpd xmm2, xmm0
	movups	XMMWORD PTR [ecx+24], xmm2
	movq	QWORD PTR [ecx+40], xmm1

; 52   : 	}

	pop	ebp
	ret	48					; 00000030H
??0?$mat@$01$02N$01@glm@@QAE@NNNNNN@Z ENDP		; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
$T1 = -24						; size = 24
_scalar$ = 8						; size = 8
??0?$mat@$01$02N$01@glm@@QAE@N@Z PROC			; glm::mat<2,3,double,2>::mat<2,3,double,2>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm2, QWORD PTR _scalar$[ebp]
	xorps	xmm1, xmm1

; 48   : 		, y(static_cast<T>(_y))

	movups	XMMWORD PTR $T1[ebp+8], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 41   : 	}

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	QWORD PTR $T1[ebp], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movups	xmm0, XMMWORD PTR $T1[ebp]
	unpckhpd xmm1, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	xorps	xmm0, xmm0
	movq	QWORD PTR [ecx+16], xmm1

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklpd xmm0, xmm2
	xorps	xmm1, xmm1
	movups	XMMWORD PTR [ecx+24], xmm0
	movq	QWORD PTR [ecx+40], xmm1

; 41   : 	}

	mov	esp, ebp
	pop	ebp
	ret	8
??0?$mat@$01$02N$01@glm@@QAE@N@Z ENDP			; glm::mat<2,3,double,2>::mat<2,3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z PROC	; glm::mat<2,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$01@glm@@QBEABU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<2,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z PROC	; glm::mat<2,3,double,2>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02N$01@glm@@QAEAAU?$vec@$02N$01@1@H@Z ENDP	; glm::mat<2,3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02N$01@glm@@SAHXZ PROC		; glm::mat<2,3,double,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02N$01@glm@@SAHXZ ENDP		; glm::mat<2,3,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,2>::operator--, COMDAT
; _this$ = ecx

; 270  : 	{

	push	ebp
	mov	ebp, esp

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 271  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 274  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$02M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,3,float,2>::operator++, COMDAT
; _this$ = ecx

; 262  : 	{

	push	ebp
	mov	ebp, esp

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 263  : 		mat<2, 3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 266  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$02M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??F?$mat@$01$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 257  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 258  : 	}

	ret	0
??F?$mat@$01$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??E?$mat@$01$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$02M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,3,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 249  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+16]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+16], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+20]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+20], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 250  : 	}

	ret	0
??E?$mat@$01$02M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp

; 147  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax

; 148  : 		this->value[1] = m[1];

	movq	xmm0, QWORD PTR [edx+12]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax

; 149  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 140  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 141  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 133  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 134  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 135  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 126  : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 127  : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 119  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 120  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 121  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm2, DWORD PTR [edx]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+4]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 105  : 		: x(static_cast<T>(v.x))

	movss	xmm2, DWORD PTR [edx+16]

; 106  : 		, y(static_cast<T>(v.y))

	movss	xmm1, DWORD PTR [edx+20]

; 107  : 		, z(static_cast<T>(v.z))

	movss	xmm0, DWORD PTR [edx+24]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 107  : 		, z(static_cast<T>(v.z))

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp

; 105  : 		this->value[0] = col_type(m[0]);

	mov	edx, DWORD PTR _m$[ebp]
	movq	xmm0, QWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 106  : 		this->value[1] = col_type(m[1]);

	movq	xmm0, QWORD PTR [edx+12]
	mov	eax, DWORD PTR [edx+20]
	movq	QWORD PTR [ecx+12], xmm0
	mov	DWORD PTR [ecx+20], eax

; 107  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_m$ = 8							; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	mov	edx, DWORD PTR _m$[ebp]

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 67   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm1, DWORD PTR [edx+4]
	movss	xmm2, DWORD PTR [edx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 98   : 		this->value[0] = col_type(m[0], 0);

	unpcklps xmm2, xmm1
	movq	QWORD PTR [ecx], xmm2
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 65   : 		: x(static_cast<T>(_xy.x))

	movss	xmm1, DWORD PTR [edx+8]

; 66   : 		, y(static_cast<T>(_xy.y))

	movss	xmm0, DWORD PTR [edx+12]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 99   : 		this->value[1] = col_type(m[1], 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	unpcklps xmm1, xmm0
	movq	QWORD PTR [ecx+12], xmm1
	mov	DWORD PTR [ecx+20], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$mat@$01$01M$01@1@@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z PROC ; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 56   : 	{

	push	ebp
	mov	ebp, esp

; 57   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax

; 58   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movq	xmm0, QWORD PTR [eax]
	movq	QWORD PTR [ecx+12], xmm0
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+20], eax

; 59   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$02M$01@glm@@QAE@ABU?$vec@$02M$01@1@0@Z ENDP ; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@MMMMMM@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_z0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_z1$ = 28						; size = 4
??0?$mat@$01$02M$01@glm@@QAE@MMMMMM@Z PROC		; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 49   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x0$[ebp]
	movss	xmm1, DWORD PTR _y0$[ebp]
	movss	xmm0, DWORD PTR _z0$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm1, DWORD PTR _y1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	movq	QWORD PTR [ecx], xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm2, DWORD PTR _x1$[ebp]
	movss	DWORD PTR $T2[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	eax, DWORD PTR $T2[ebp+8]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR _z1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 50   : 		this->value[0] = col_type(x0, y0, z0);

	mov	DWORD PTR [ecx+8], eax

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 39   : 		: x(_x), y(_y), z(_z)

	movss	DWORD PTR $T1[ebp+8], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 51   : 		this->value[1] = col_type(x1, y1, z1);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 52   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0?$mat@$01$02M$01@glm@@QAE@MMMMMM@Z ENDP		; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??0?$mat@$01$02M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -12						; size = 12
$T2 = -12						; size = 12
_scalar$ = 8						; size = 4
??0?$mat@$01$02M$01@glm@@QAE@M@Z PROC			; glm::mat<2,3,float,2>::mat<2,3,float,2>, COMDAT
; _this$ = ecx

; 38   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	movaps	xmm0, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T2[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 39   : 		this->value[0] = col_type(scalar, 0, 0);

	mov	eax, DWORD PTR $T2[ebp+8]
	unpcklps xmm0, xmm2
	movq	QWORD PTR [ecx], xmm0
	mov	DWORD PTR [ecx+8], eax

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	unpcklps xmm2, xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl

; 49   : 		, z(static_cast<T>(_z))

	mov	DWORD PTR $T1[ebp+8], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl

; 40   : 		this->value[1] = col_type(0, scalar, 0);

	mov	eax, DWORD PTR $T1[ebp+8]
	movq	QWORD PTR [ecx+12], xmm2
	mov	DWORD PTR [ecx+20], eax

; 41   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$02M$01@glm@@QAE@M@Z ENDP			; glm::mat<2,3,float,2>::mat<2,3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z PROC	; glm::mat<2,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$01@glm@@QBEABU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<2,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.inl
;	COMDAT ??A?$mat@$01$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z PROC	; glm::mat<2,3,float,2>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*4]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$02M$01@glm@@QAEAAU?$vec@$02M$01@1@H@Z ENDP	; glm::mat<2,3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x3.hpp
;	COMDAT ?length@?$mat@$01$02M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$02M$01@glm@@SAHXZ PROC		; glm::mat<2,3,float,2>::length, COMDAT

; 31   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$02M$01@glm@@SAHXZ ENDP		; glm::mat<2,3,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,0>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,0>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01N$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 148  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$02N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 141  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$03N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 134  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$01N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 127  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$03N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 120  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$01N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$01$02N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$03$03N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 99   : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$mat@$02$02N$0A@@1@@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@0@Z PROC ; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 61   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$01N$0A@@glm@@QAE@ABU?$vec@$01N$0A@@1@0@Z ENDP ; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@ABN000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01N$0A@@glm@@QAE@ABN000@Z PROC		; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 54   : 	}

	mov	eax, ecx
	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01N$0A@@glm@@QAE@ABN000@Z ENDP		; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$01$01N$0A@@glm@@QAE@N@Z PROC			; glm::mat<2,2,double,0>::mat<2,2,double,0>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 42   : 		this->value[1] = col_type(0, scalar);
; 43   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	pop	ebp
	ret	8
??0?$mat@$01$01N$0A@@glm@@QAE@N@Z ENDP			; glm::mat<2,2,double,0>::mat<2,2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<2,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$0A@@glm@@QBEABU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<2,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z PROC ; glm::mat<2,2,double,0>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$0A@@glm@@QAEAAU?$vec@$01N$0A@@1@H@Z ENDP ; glm::mat<2,2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01N$0A@@glm@@SAHXZ PROC		; glm::mat<2,2,double,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01N$0A@@glm@@SAHXZ ENDP		; glm::mat<2,2,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,0>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,0>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,0>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,0>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01M$0A@@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$02M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$03M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 134  : 		this->value[1] = m[1];
; 135  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$01M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$03M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 120  : 		this->value[1] = m[1];
; 121  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$01M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$01$02M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 107  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$03$03M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$mat@$02$02M$0A@@1@@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@0@Z PROC ; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]

; 60   : 		this->value[1] = v1;

	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax

; 61   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$01M$0A@@glm@@QAE@ABU?$vec@$01M$0A@@1@0@Z ENDP ; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@ABM000@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@ABM000@Z PROC		; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 54   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01M$0A@@glm@@QAE@ABM000@Z ENDP		; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$01$01M$0A@@glm@@QAE@M@Z PROC			; glm::mat<2,2,float,0>::mat<2,2,float,0>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T2[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 43   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$0A@@glm@@QAE@M@Z ENDP			; glm::mat<2,2,float,0>::mat<2,2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<2,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$0A@@glm@@QBEABU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<2,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z PROC ; glm::mat<2,2,float,0>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$0A@@glm@@QAEAAU?$vec@$01M$0A@@1@H@Z ENDP ; glm::mat<2,2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01M$0A@@glm@@SAHXZ PROC		; glm::mat<2,2,float,0>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01M$0A@@glm@@SAHXZ ENDP		; glm::mat<2,2,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,1>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01N$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,1>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01N$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01N$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01N$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 148  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$02N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 141  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$03N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 134  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$01N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 127  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$03N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 120  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$01N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$01$02N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$03$03N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 99   : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$mat@$02$02N$00@1@@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@0@Z PROC ; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 61   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$01N$00@glm@@QAE@ABU?$vec@$01N$00@1@0@Z ENDP ; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@ABN000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01N$00@glm@@QAE@ABN000@Z PROC		; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 54   : 	}

	mov	eax, ecx
	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01N$00@glm@@QAE@ABN000@Z ENDP		; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$01$01N$00@glm@@QAE@N@Z PROC			; glm::mat<2,2,double,1>::mat<2,2,double,1>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 42   : 		this->value[1] = col_type(0, scalar);
; 43   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	pop	ebp
	ret	8
??0?$mat@$01$01N$00@glm@@QAE@N@Z ENDP			; glm::mat<2,2,double,1>::mat<2,2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z PROC	; glm::mat<2,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$00@glm@@QBEABU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<2,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z PROC	; glm::mat<2,2,double,1>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$00@glm@@QAEAAU?$vec@$01N$00@1@H@Z ENDP	; glm::mat<2,2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01N$00@glm@@SAHXZ PROC		; glm::mat<2,2,double,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01N$00@glm@@SAHXZ ENDP		; glm::mat<2,2,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,1>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01M$00@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,1>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01M$00@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,1>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01M$00@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,1>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01M$00@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$02M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$03M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 134  : 		this->value[1] = m[1];
; 135  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$01M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$03M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 120  : 		this->value[1] = m[1];
; 121  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$01M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$01$02M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 107  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$03$03M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$mat@$02$02M$00@1@@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@0@Z PROC ; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]

; 60   : 		this->value[1] = v1;

	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax

; 61   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$01M$00@glm@@QAE@ABU?$vec@$01M$00@1@0@Z ENDP ; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@ABM000@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01M$00@glm@@QAE@ABM000@Z PROC		; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 54   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01M$00@glm@@QAE@ABM000@Z ENDP		; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$01$01M$00@glm@@QAE@M@Z PROC			; glm::mat<2,2,float,1>::mat<2,2,float,1>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T2[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 43   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$00@glm@@QAE@M@Z ENDP			; glm::mat<2,2,float,1>::mat<2,2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z PROC	; glm::mat<2,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$00@glm@@QBEABU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<2,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z PROC	; glm::mat<2,2,float,1>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$00@glm@@QAEAAU?$vec@$01M$00@1@H@Z ENDP	; glm::mat<2,2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01M$00@glm@@SAHXZ PROC		; glm::mat<2,2,float,1>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01M$00@glm@@SAHXZ ENDP		; glm::mat<2,2,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,2>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01N$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,double,2>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01N$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01N$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,double,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+16], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01N$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 148  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 149  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$02N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 141  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 142  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$03N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 134  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 135  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$01N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 127  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 128  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$03N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	eax, DWORD PTR _m$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0

; 120  : 		this->value[1] = m[1];

	movups	xmm0, XMMWORD PTR [eax+16]

; 121  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$01N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 113  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 114  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$01$02N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 106  : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+32]

; 107  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$03$03N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	eax, DWORD PTR _m$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	movups	xmm1, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm1

; 99   : 		this->value[1] = col_type(m[1]);

	movups	xmm1, XMMWORD PTR [eax+24]

; 100  : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$mat@$02$02N$01@1@@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@0@Z PROC ; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	eax, DWORD PTR _v0$[ebp]
	movups	xmm0, XMMWORD PTR [eax]

; 60   : 		this->value[1] = v1;

	mov	eax, DWORD PTR _v1$[ebp]
	movups	XMMWORD PTR [ecx], xmm0
	movups	xmm0, XMMWORD PTR [eax]

; 61   : 	}

	mov	eax, ecx
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$mat@$01$01N$01@glm@@QAE@ABU?$vec@$01N$01@1@0@Z ENDP ; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@ABN000@Z
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01N$01@glm@@QAE@ABN000@Z PROC		; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mov	eax, DWORD PTR _x1$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movsd	xmm1, QWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movsd	xmm0, QWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 54   : 	}

	mov	eax, ecx
	unpcklpd xmm1, xmm0
	movups	XMMWORD PTR [ecx+16], xmm1
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01N$01@glm@@QAE@ABN000@Z ENDP		; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$mat@$01$01N$01@glm@@QAE@N@Z PROC			; glm::mat<2,2,double,2>::mat<2,2,double,2>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movsd	xmm1, QWORD PTR _scalar$[ebp]
	xorps	xmm2, xmm2
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	movaps	xmm0, xmm1

; 42   : 		this->value[1] = col_type(0, scalar);
; 43   : 	}

	mov	eax, ecx
	unpcklpd xmm0, xmm2
	unpcklpd xmm2, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm2
	pop	ebp
	ret	8
??0?$mat@$01$01N$01@glm@@QAE@N@Z ENDP			; glm::mat<2,2,double,2>::mat<2,2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z PROC	; glm::mat<2,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$01@glm@@QBEABU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<2,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z PROC	; glm::mat<2,2,double,2>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, ecx

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01N$01@glm@@QAEAAU?$vec@$01N$01@1@H@Z ENDP	; glm::mat<2,2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01N$01@glm@@SAHXZ PROC		; glm::mat<2,2,double,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01N$01@glm@@SAHXZ ENDP		; glm::mat<2,2,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$mat@$01$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,2>::operator--, COMDAT
; _this$ = ecx

; 284  : 	{

	push	ebp
	mov	ebp, esp

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 285  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 288  : 	}

	pop	ebp
	ret	8
??F?$mat@$01$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$mat@$01$01M$01@glm@@QAE?AU01@H@Z PROC		; glm::mat<2,2,float,2>::operator++, COMDAT
; _this$ = ecx

; 276  : 	{

	push	ebp
	mov	ebp, esp

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 277  : 		mat<2, 2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 280  : 	}

	pop	ebp
	ret	8
??E?$mat@$01$01M$01@glm@@QAE?AU01@H@Z ENDP		; glm::mat<2,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??F?$mat@$01$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$mat@$01$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,2>::operator--, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 271  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 239  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	subps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 272  : 	}

	ret	0
??F?$mat@$01$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??E?$mat@$01$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$mat@$01$01M$01@glm@@QAEAAU01@XZ PROC		; glm::mat<2,2,float,2>::operator++, COMDAT
; _this$ = ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 263  : 		return *this;

	mov	eax, ecx
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 231  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 264  : 	}

	ret	0
??E?$mat@$01$01M$01@glm@@QAEAAU01@XZ ENDP		; glm::mat<2,2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 146  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 147  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 148  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 149  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$02M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 140  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 141  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 142  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$03M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 132  : 	{

	push	ebp
	mov	ebp, esp

; 133  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 134  : 		this->value[1] = m[1];
; 135  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$01M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 125  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 126  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 127  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 128  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$03M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 118  : 	{

	push	ebp
	mov	ebp, esp

; 119  : 		this->value[0] = m[0];

	mov	edx, DWORD PTR _m$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+12], eax

; 120  : 		this->value[1] = m[1];
; 121  : 	}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$01M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 112  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 113  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 114  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$01$02M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 104  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 105  : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 77   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+16]
	movss	DWORD PTR $T1[ebp], xmm0

; 78   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+20]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 78   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 106  : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 107  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$03$03M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_m$ = 8							; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 97   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	mov	edx, DWORD PTR _m$[ebp]
	movss	xmm0, DWORD PTR [edx]
	movss	DWORD PTR $T2[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+4]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 98   : 		this->value[0] = col_type(m[0]);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 70   : 		: x(static_cast<T>(v.x))

	movss	xmm0, DWORD PTR [edx+12]
	movss	DWORD PTR $T1[ebp], xmm0

; 71   : 		, y(static_cast<T>(v.y))

	movss	xmm0, DWORD PTR [edx+16]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 71   : 		, y(static_cast<T>(v.y))

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 99   : 		this->value[1] = col_type(m[1]);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 100  : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$mat@$02$02M$01@1@@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@0@Z
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@0@Z PROC ; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 58   : 	{

	push	ebp
	mov	ebp, esp

; 59   : 		this->value[0] = v0;

	mov	edx, DWORD PTR _v0$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR [edx+4]

; 60   : 		this->value[1] = v1;

	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+12], eax

; 61   : 	}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$mat@$01$01M$01@glm@@QAE@ABU?$vec@$01M$01@1@0@Z ENDP ; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@ABM000@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
??0?$mat@$01$01M$01@glm@@QAE@ABM000@Z PROC		; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 51   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x0$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y0$[ebp]
	movss	DWORD PTR $T2[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T2[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 52   : 		this->value[0] = col_type(x0, y0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR _x1$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mov	eax, DWORD PTR _y1$[ebp]
	movss	DWORD PTR $T1[ebp], xmm0
	movss	xmm0, DWORD PTR [eax]
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 39   : 		: x(_x), y(_y)

	movss	DWORD PTR $T1[ebp+4], xmm0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 53   : 		this->value[1] = col_type(x1, y1);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 54   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0?$mat@$01$01M$01@glm@@QAE@ABM000@Z ENDP		; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??0?$mat@$01$01M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 8
$T2 = -8						; size = 8
_scalar$ = 8						; size = 4
??0?$mat@$01$01M$01@glm@@QAE@M@Z PROC			; glm::mat<2,2,float,2>::mat<2,2,float,2>, COMDAT
; _this$ = ecx

; 40   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	movss	xmm1, DWORD PTR _scalar$[ebp]
	movss	DWORD PTR $T2[ebp], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	mov	DWORD PTR $T2[ebp+4], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 41   : 		this->value[0] = col_type(scalar, 0);

	mov	eax, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [ecx+4], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 47   : 		: x(static_cast<T>(_x))

	mov	DWORD PTR $T1[ebp], 0
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx+8], eax
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl

; 48   : 		, y(static_cast<T>(_y))

	movss	DWORD PTR $T1[ebp+4], xmm1
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl

; 42   : 		this->value[1] = col_type(0, scalar);

	mov	eax, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 43   : 	}

	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$mat@$01$01M$01@glm@@QAE@M@Z ENDP			; glm::mat<2,2,float,2>::mat<2,2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z PROC	; glm::mat<2,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 162  : 	{

	push	ebp
	mov	ebp, esp

; 163  : 		assert(i < this->length());
; 164  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 165  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$01@glm@@QBEABU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<2,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.inl
;	COMDAT ??A?$mat@$01$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$mat@$01$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z PROC	; glm::mat<2,2,float,2>::operator[], COMDAT
; _this$ = ecx

; 155  : 	{

	push	ebp
	mov	ebp, esp

; 156  : 		assert(i < this->length());
; 157  : 		return this->value[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 158  : 	}

	pop	ebp
	ret	4
??A?$mat@$01$01M$01@glm@@QAEAAU?$vec@$01M$01@1@H@Z ENDP	; glm::mat<2,2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_mat2x2.hpp
;	COMDAT ?length@?$mat@$01$01M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$mat@$01$01M$01@glm@@SAHXZ PROC		; glm::mat<2,2,float,2>::length, COMDAT

; 30   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }

	mov	eax, 2
	ret	0
?length@?$mat@$01$01M$01@glm@@SAHXZ ENDP		; glm::mat<2,2,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,double,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,double,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,0>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,0>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$0A@@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03N$0A@@glm@@QAE@NNNN@Z PROC			; glm::vec<4,double,0>::vec<4,double,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03N$0A@@glm@@QAE@NNNN@Z ENDP			; glm::vec<4,double,0>::vec<4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03N$0A@@glm@@QAE@N@Z PROC			; glm::vec<4,double,0>::vec<4,double,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$03N$0A@@glm@@QAE@N@Z ENDP			; glm::vec<4,double,0>::vec<4,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$0A@@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$0A@@glm@@QBEABNH@Z PROC			; glm::vec<4,double,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$0A@@glm@@QBEABNH@Z ENDP			; glm::vec<4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$0A@@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$0A@@glm@@QAEAANH@Z PROC			; glm::vec<4,double,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$0A@@glm@@QAEAANH@Z ENDP			; glm::vec<4,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03N$0A@@glm@@SAHXZ PROC			; glm::vec<4,double,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03N$0A@@glm@@SAHXZ ENDP			; glm::vec<4,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<4,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<4,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<4,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<4,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$0A@@glm@@QAE@_J000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_J$0A@@glm@@QAE@_J000@Z PROC		; glm::vec<4,__int64,0>::vec<4,__int64,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_J$0A@@glm@@QAE@_J000@Z ENDP		; glm::vec<4,__int64,0>::vec<4,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$0A@@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_J$0A@@glm@@QAE@_J@Z PROC			; glm::vec<4,__int64,0>::vec<4,__int64,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_J$0A@@glm@@QAE@_J@Z ENDP			; glm::vec<4,__int64,0>::vec<4,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$0A@@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$0A@@glm@@QBEAB_JH@Z PROC			; glm::vec<4,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$0A@@glm@@QBEAB_JH@Z ENDP			; glm::vec<4,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$0A@@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$0A@@glm@@QAEAA_JH@Z PROC			; glm::vec<4,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$0A@@glm@@QAEAA_JH@Z ENDP			; glm::vec<4,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_J$0A@@glm@@SAHXZ PROC			; glm::vec<4,__int64,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_J$0A@@glm@@SAHXZ ENDP			; glm::vec<4,__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,int,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,int,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$0A@@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03H$0A@@glm@@QAE@HHHH@Z PROC			; glm::vec<4,int,0>::vec<4,int,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03H$0A@@glm@@QAE@HHHH@Z ENDP			; glm::vec<4,int,0>::vec<4,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$0A@@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03H$0A@@glm@@QAE@H@Z PROC			; glm::vec<4,int,0>::vec<4,int,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03H$0A@@glm@@QAE@H@Z ENDP			; glm::vec<4,int,0>::vec<4,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$0A@@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$0A@@glm@@QBEABHH@Z PROC			; glm::vec<4,int,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$0A@@glm@@QBEABHH@Z ENDP			; glm::vec<4,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$0A@@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$0A@@glm@@QAEAAHH@Z PROC			; glm::vec<4,int,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$0A@@glm@@QAEAAHH@Z ENDP			; glm::vec<4,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03H$0A@@glm@@SAHXZ PROC			; glm::vec<4,int,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03H$0A@@glm@@SAHXZ ENDP			; glm::vec<4,int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,short,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 467  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 468  : 		--this->w;

	dec	WORD PTR [ecx+6]

; 482  : 	{

	push	esi

; 483  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,short,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]
	dec	WORD PTR [ecx+6]

; 470  : 	}

	ret	0
??F?$vec@$03F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$0A@@glm@@QAE@FFFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03F$0A@@glm@@QAE@FFFF@Z PROC			; glm::vec<4,short,0>::vec<4,short,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03F$0A@@glm@@QAE@FFFF@Z ENDP			; glm::vec<4,short,0>::vec<4,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$0A@@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03F$0A@@glm@@QAE@F@Z PROC			; glm::vec<4,short,0>::vec<4,short,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03F$0A@@glm@@QAE@F@Z ENDP			; glm::vec<4,short,0>::vec<4,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$0A@@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$0A@@glm@@QBEABFH@Z PROC			; glm::vec<4,short,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$0A@@glm@@QBEABFH@Z ENDP			; glm::vec<4,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$0A@@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$0A@@glm@@QAEAAFH@Z PROC			; glm::vec<4,short,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$0A@@glm@@QAEAAFH@Z ENDP			; glm::vec<4,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03F$0A@@glm@@SAHXZ PROC			; glm::vec<4,short,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03F$0A@@glm@@SAHXZ ENDP			; glm::vec<4,short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<4,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<4,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<4,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<4,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$0A@@glm@@QAE@_K000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_K$0A@@glm@@QAE@_K000@Z PROC		; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_K$0A@@glm@@QAE@_K000@Z ENDP		; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$0A@@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_K$0A@@glm@@QAE@_K@Z PROC			; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_K$0A@@glm@@QAE@_K@Z ENDP			; glm::vec<4,unsigned __int64,0>::vec<4,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$0A@@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$0A@@glm@@QBEAB_KH@Z PROC			; glm::vec<4,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$0A@@glm@@QBEAB_KH@Z ENDP			; glm::vec<4,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$0A@@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$0A@@glm@@QAEAA_KH@Z PROC			; glm::vec<4,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$0A@@glm@@QAEAA_KH@Z ENDP			; glm::vec<4,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_K$0A@@glm@@SAHXZ PROC			; glm::vec<4,unsigned __int64,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_K$0A@@glm@@SAHXZ ENDP			; glm::vec<4,unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$0A@@glm@@QAE@IIII@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03I$0A@@glm@@QAE@IIII@Z PROC			; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03I$0A@@glm@@QAE@IIII@Z ENDP			; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$0A@@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03I$0A@@glm@@QAE@I@Z PROC			; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03I$0A@@glm@@QAE@I@Z ENDP			; glm::vec<4,unsigned int,0>::vec<4,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$0A@@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$0A@@glm@@QBEABIH@Z PROC			; glm::vec<4,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$0A@@glm@@QBEABIH@Z ENDP			; glm::vec<4,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$0A@@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$0A@@glm@@QAEAAIH@Z PROC			; glm::vec<4,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$0A@@glm@@QAEAAIH@Z ENDP			; glm::vec<4,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03I$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03I$0A@@glm@@SAHXZ PROC			; glm::vec<4,unsigned int,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03I$0A@@glm@@SAHXZ ENDP			; glm::vec<4,unsigned int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, edx

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$0A@@glm@@QAE@GGGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03G$0A@@glm@@QAE@GGGG@Z PROC			; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03G$0A@@glm@@QAE@GGGG@Z ENDP			; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$0A@@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03G$0A@@glm@@QAE@G@Z PROC			; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03G$0A@@glm@@QAE@G@Z ENDP			; glm::vec<4,unsigned short,0>::vec<4,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$0A@@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$0A@@glm@@QBEABGH@Z PROC			; glm::vec<4,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$0A@@glm@@QBEABGH@Z ENDP			; glm::vec<4,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$0A@@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$0A@@glm@@QAEAAGH@Z PROC			; glm::vec<4,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$0A@@glm@@QAEAAGH@Z ENDP			; glm::vec<4,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03G$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03G$0A@@glm@@SAHXZ PROC			; glm::vec<4,unsigned short,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03G$0A@@glm@@SAHXZ ENDP			; glm::vec<4,unsigned short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,double,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,double,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,1>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,1>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$00@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03N$00@glm@@QAE@NNNN@Z PROC			; glm::vec<4,double,1>::vec<4,double,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03N$00@glm@@QAE@NNNN@Z ENDP			; glm::vec<4,double,1>::vec<4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03N$00@glm@@QAE@N@Z PROC			; glm::vec<4,double,1>::vec<4,double,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$03N$00@glm@@QAE@N@Z ENDP			; glm::vec<4,double,1>::vec<4,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$00@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$00@glm@@QBEABNH@Z PROC			; glm::vec<4,double,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$00@glm@@QBEABNH@Z ENDP			; glm::vec<4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$00@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$00@glm@@QAEAANH@Z PROC			; glm::vec<4,double,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$00@glm@@QAEAANH@Z ENDP			; glm::vec<4,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03N$00@glm@@SAHXZ PROC			; glm::vec<4,double,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03N$00@glm@@SAHXZ ENDP			; glm::vec<4,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,float,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,float,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$00@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03M$00@glm@@QAE@MMMM@Z PROC			; glm::vec<4,float,1>::vec<4,float,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03M$00@glm@@QAE@MMMM@Z ENDP			; glm::vec<4,float,1>::vec<4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03M$00@glm@@QAE@M@Z PROC			; glm::vec<4,float,1>::vec<4,float,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	shufps	xmm0, xmm0, 0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$03M$00@glm@@QAE@M@Z ENDP			; glm::vec<4,float,1>::vec<4,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$00@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$00@glm@@QBEABMH@Z PROC			; glm::vec<4,float,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$00@glm@@QBEABMH@Z ENDP			; glm::vec<4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$00@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$00@glm@@QAEAAMH@Z PROC			; glm::vec<4,float,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$00@glm@@QAEAAMH@Z ENDP			; glm::vec<4,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03M$00@glm@@SAHXZ PROC			; glm::vec<4,float,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03M$00@glm@@SAHXZ ENDP			; glm::vec<4,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$00@glm@@QAE@_J000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_J$00@glm@@QAE@_J000@Z PROC			; glm::vec<4,__int64,1>::vec<4,__int64,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_J$00@glm@@QAE@_J000@Z ENDP			; glm::vec<4,__int64,1>::vec<4,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$00@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_J$00@glm@@QAE@_J@Z PROC			; glm::vec<4,__int64,1>::vec<4,__int64,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_J$00@glm@@QAE@_J@Z ENDP			; glm::vec<4,__int64,1>::vec<4,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$00@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$00@glm@@QBEAB_JH@Z PROC			; glm::vec<4,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$00@glm@@QBEAB_JH@Z ENDP			; glm::vec<4,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$00@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$00@glm@@QAEAA_JH@Z PROC			; glm::vec<4,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$00@glm@@QAEAA_JH@Z ENDP			; glm::vec<4,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_J$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_J$00@glm@@SAHXZ PROC			; glm::vec<4,__int64,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_J$00@glm@@SAHXZ ENDP			; glm::vec<4,__int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,int,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,int,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$00@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03H$00@glm@@QAE@HHHH@Z PROC			; glm::vec<4,int,1>::vec<4,int,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03H$00@glm@@QAE@HHHH@Z ENDP			; glm::vec<4,int,1>::vec<4,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$00@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03H$00@glm@@QAE@H@Z PROC			; glm::vec<4,int,1>::vec<4,int,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03H$00@glm@@QAE@H@Z ENDP			; glm::vec<4,int,1>::vec<4,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$00@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$00@glm@@QBEABHH@Z PROC			; glm::vec<4,int,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$00@glm@@QBEABHH@Z ENDP			; glm::vec<4,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$00@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$00@glm@@QAEAAHH@Z PROC			; glm::vec<4,int,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$00@glm@@QAEAAHH@Z ENDP			; glm::vec<4,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03H$00@glm@@SAHXZ PROC			; glm::vec<4,int,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03H$00@glm@@SAHXZ ENDP			; glm::vec<4,int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,short,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 467  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 468  : 		--this->w;

	dec	WORD PTR [ecx+6]

; 482  : 	{

	push	esi

; 483  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,short,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]
	dec	WORD PTR [ecx+6]

; 470  : 	}

	ret	0
??F?$vec@$03F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$00@glm@@QAE@FFFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03F$00@glm@@QAE@FFFF@Z PROC			; glm::vec<4,short,1>::vec<4,short,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03F$00@glm@@QAE@FFFF@Z ENDP			; glm::vec<4,short,1>::vec<4,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$00@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03F$00@glm@@QAE@F@Z PROC			; glm::vec<4,short,1>::vec<4,short,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03F$00@glm@@QAE@F@Z ENDP			; glm::vec<4,short,1>::vec<4,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$00@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$00@glm@@QBEABFH@Z PROC			; glm::vec<4,short,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$00@glm@@QBEABFH@Z ENDP			; glm::vec<4,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$00@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$00@glm@@QAEAAFH@Z PROC			; glm::vec<4,short,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$00@glm@@QAEAAFH@Z ENDP			; glm::vec<4,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03F$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03F$00@glm@@SAHXZ PROC			; glm::vec<4,short,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03F$00@glm@@SAHXZ ENDP			; glm::vec<4,short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$00@glm@@QAE@CCCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03C$00@glm@@QAE@CCCC@Z PROC			; glm::vec<4,signed char,1>::vec<4,signed char,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03C$00@glm@@QAE@CCCC@Z ENDP			; glm::vec<4,signed char,1>::vec<4,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$00@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03C$00@glm@@QAE@C@Z PROC			; glm::vec<4,signed char,1>::vec<4,signed char,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03C$00@glm@@QAE@C@Z ENDP			; glm::vec<4,signed char,1>::vec<4,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$00@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$00@glm@@QBEABCH@Z PROC			; glm::vec<4,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$00@glm@@QBEABCH@Z ENDP			; glm::vec<4,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$00@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$00@glm@@QAEAACH@Z PROC			; glm::vec<4,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$00@glm@@QAEAACH@Z ENDP			; glm::vec<4,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03C$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03C$00@glm@@SAHXZ PROC			; glm::vec<4,signed char,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03C$00@glm@@SAHXZ ENDP			; glm::vec<4,signed char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$00@glm@@QAE@_K000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_K$00@glm@@QAE@_K000@Z PROC			; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_K$00@glm@@QAE@_K000@Z ENDP			; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$00@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_K$00@glm@@QAE@_K@Z PROC			; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_K$00@glm@@QAE@_K@Z ENDP			; glm::vec<4,unsigned __int64,1>::vec<4,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$00@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$00@glm@@QBEAB_KH@Z PROC			; glm::vec<4,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$00@glm@@QBEAB_KH@Z ENDP			; glm::vec<4,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$00@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$00@glm@@QAEAA_KH@Z PROC			; glm::vec<4,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$00@glm@@QAEAA_KH@Z ENDP			; glm::vec<4,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_K$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_K$00@glm@@SAHXZ PROC			; glm::vec<4,unsigned __int64,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_K$00@glm@@SAHXZ ENDP			; glm::vec<4,unsigned __int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$00@glm@@QAE@IIII@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03I$00@glm@@QAE@IIII@Z PROC			; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03I$00@glm@@QAE@IIII@Z ENDP			; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$00@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03I$00@glm@@QAE@I@Z PROC			; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03I$00@glm@@QAE@I@Z ENDP			; glm::vec<4,unsigned int,1>::vec<4,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$00@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$00@glm@@QBEABIH@Z PROC			; glm::vec<4,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$00@glm@@QBEABIH@Z ENDP			; glm::vec<4,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$00@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$00@glm@@QAEAAIH@Z PROC			; glm::vec<4,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$00@glm@@QAEAAIH@Z ENDP			; glm::vec<4,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03I$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03I$00@glm@@SAHXZ PROC			; glm::vec<4,unsigned int,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03I$00@glm@@SAHXZ ENDP			; glm::vec<4,unsigned int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, edx

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$00@glm@@QAE@GGGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03G$00@glm@@QAE@GGGG@Z PROC			; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03G$00@glm@@QAE@GGGG@Z ENDP			; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$00@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03G$00@glm@@QAE@G@Z PROC			; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03G$00@glm@@QAE@G@Z ENDP			; glm::vec<4,unsigned short,1>::vec<4,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$00@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$00@glm@@QBEABGH@Z PROC			; glm::vec<4,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$00@glm@@QBEABGH@Z ENDP			; glm::vec<4,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$00@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$00@glm@@QAEAAGH@Z PROC			; glm::vec<4,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$00@glm@@QAEAAGH@Z ENDP			; glm::vec<4,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03G$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03G$00@glm@@SAHXZ PROC			; glm::vec<4,unsigned short,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03G$00@glm@@SAHXZ ENDP			; glm::vec<4,unsigned short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$00@glm@@QAE@EEEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03E$00@glm@@QAE@EEEE@Z PROC			; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03E$00@glm@@QAE@EEEE@Z ENDP			; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$00@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03E$00@glm@@QAE@E@Z PROC			; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03E$00@glm@@QAE@E@Z ENDP			; glm::vec<4,unsigned char,1>::vec<4,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$00@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$00@glm@@QBEABEH@Z PROC			; glm::vec<4,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$00@glm@@QBEABEH@Z ENDP			; glm::vec<4,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$00@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$00@glm@@QAEAAEH@Z PROC			; glm::vec<4,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$00@glm@@QAEAAEH@Z ENDP			; glm::vec<4,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03E$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03E$00@glm@@SAHXZ PROC			; glm::vec<4,unsigned char,1>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03E$00@glm@@SAHXZ ENDP			; glm::vec<4,unsigned char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,double,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,double,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,2>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,double,2>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	addpd	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$01@glm@@QAE@NNNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03N$01@glm@@QAE@NNNN@Z PROC			; glm::vec<4,double,2>::vec<4,double,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	movsd	xmm0, QWORD PTR __w$[ebp]
	movsd	QWORD PTR [ecx+24], xmm0
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03N$01@glm@@QAE@NNNN@Z ENDP			; glm::vec<4,double,2>::vec<4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03N$01@glm@@QAE@N@Z PROC			; glm::vec<4,double,2>::vec<4,double,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movups	XMMWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$03N$01@glm@@QAE@N@Z ENDP			; glm::vec<4,double,2>::vec<4,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$01@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$01@glm@@QBEABNH@Z PROC			; glm::vec<4,double,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$01@glm@@QBEABNH@Z ENDP			; glm::vec<4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03N$01@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03N$01@glm@@QAEAANH@Z PROC			; glm::vec<4,double,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03N$01@glm@@QAEAANH@Z ENDP			; glm::vec<4,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03N$01@glm@@SAHXZ PROC			; glm::vec<4,double,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03N$01@glm@@SAHXZ ENDP			; glm::vec<4,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,float,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,float,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$01@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03M$01@glm@@QAE@MMMM@Z PROC			; glm::vec<4,float,2>::vec<4,float,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03M$01@glm@@QAE@MMMM@Z ENDP			; glm::vec<4,float,2>::vec<4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03M$01@glm@@QAE@M@Z PROC			; glm::vec<4,float,2>::vec<4,float,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	shufps	xmm0, xmm0, 0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$03M$01@glm@@QAE@M@Z ENDP			; glm::vec<4,float,2>::vec<4,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$01@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$01@glm@@QBEABMH@Z PROC			; glm::vec<4,float,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$01@glm@@QBEABMH@Z ENDP			; glm::vec<4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$01@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$01@glm@@QAEAAMH@Z PROC			; glm::vec<4,float,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$01@glm@@QAEAAMH@Z ENDP			; glm::vec<4,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03M$01@glm@@SAHXZ PROC			; glm::vec<4,float,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03M$01@glm@@SAHXZ ENDP			; glm::vec<4,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+edx*8], xmm0
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm1, XMMWORD PTR __xmm@00000000000000010000000000000001

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	psubq	xmm0, xmm1
	movups	XMMWORD PTR [ecx+eax*8], xmm0
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$01@glm@@QAE@_J000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_J$01@glm@@QAE@_J000@Z PROC			; glm::vec<4,__int64,2>::vec<4,__int64,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_J$01@glm@@QAE@_J000@Z ENDP			; glm::vec<4,__int64,2>::vec<4,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_J$01@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_J$01@glm@@QAE@_J@Z PROC			; glm::vec<4,__int64,2>::vec<4,__int64,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_J$01@glm@@QAE@_J@Z ENDP			; glm::vec<4,__int64,2>::vec<4,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$01@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$01@glm@@QBEAB_JH@Z PROC			; glm::vec<4,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$01@glm@@QBEAB_JH@Z ENDP			; glm::vec<4,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_J$01@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_J$01@glm@@QAEAA_JH@Z PROC			; glm::vec<4,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_J$01@glm@@QAEAA_JH@Z ENDP			; glm::vec<4,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_J$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_J$01@glm@@SAHXZ PROC			; glm::vec<4,__int64,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_J$01@glm@@SAHXZ ENDP			; glm::vec<4,__int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,int,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,int,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,int,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$01@glm@@QAE@HHHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03H$01@glm@@QAE@HHHH@Z PROC			; glm::vec<4,int,2>::vec<4,int,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03H$01@glm@@QAE@HHHH@Z ENDP			; glm::vec<4,int,2>::vec<4,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03H$01@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03H$01@glm@@QAE@H@Z PROC			; glm::vec<4,int,2>::vec<4,int,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03H$01@glm@@QAE@H@Z ENDP			; glm::vec<4,int,2>::vec<4,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$01@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$01@glm@@QBEABHH@Z PROC			; glm::vec<4,int,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$01@glm@@QBEABHH@Z ENDP			; glm::vec<4,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03H$01@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03H$01@glm@@QAEAAHH@Z PROC			; glm::vec<4,int,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03H$01@glm@@QAEAAHH@Z ENDP			; glm::vec<4,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03H$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03H$01@glm@@SAHXZ PROC			; glm::vec<4,int,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03H$01@glm@@SAHXZ ENDP			; glm::vec<4,int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,short,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 467  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 468  : 		--this->w;

	dec	WORD PTR [ecx+6]

; 482  : 	{

	push	esi

; 483  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,short,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	WORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]
	dec	WORD PTR [ecx+6]

; 470  : 	}

	ret	0
??F?$vec@$03F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,short,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$01@glm@@QAE@FFFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03F$01@glm@@QAE@FFFF@Z PROC			; glm::vec<4,short,2>::vec<4,short,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03F$01@glm@@QAE@FFFF@Z ENDP			; glm::vec<4,short,2>::vec<4,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03F$01@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03F$01@glm@@QAE@F@Z PROC			; glm::vec<4,short,2>::vec<4,short,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03F$01@glm@@QAE@F@Z ENDP			; glm::vec<4,short,2>::vec<4,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$01@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$01@glm@@QBEABFH@Z PROC			; glm::vec<4,short,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$01@glm@@QBEABFH@Z ENDP			; glm::vec<4,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03F$01@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03F$01@glm@@QAEAAFH@Z PROC			; glm::vec<4,short,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03F$01@glm@@QAEAAFH@Z ENDP			; glm::vec<4,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03F$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03F$01@glm@@SAHXZ PROC			; glm::vec<4,short,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03F$01@glm@@SAHXZ ENDP			; glm::vec<4,short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$01@glm@@QAE@CCCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03C$01@glm@@QAE@CCCC@Z PROC			; glm::vec<4,signed char,2>::vec<4,signed char,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03C$01@glm@@QAE@CCCC@Z ENDP			; glm::vec<4,signed char,2>::vec<4,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$01@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03C$01@glm@@QAE@C@Z PROC			; glm::vec<4,signed char,2>::vec<4,signed char,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03C$01@glm@@QAE@C@Z ENDP			; glm::vec<4,signed char,2>::vec<4,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$01@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$01@glm@@QBEABCH@Z PROC			; glm::vec<4,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$01@glm@@QBEABCH@Z ENDP			; glm::vec<4,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$01@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$01@glm@@QAEAACH@Z PROC			; glm::vec<4,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$01@glm@@QAEAACH@Z ENDP			; glm::vec<4,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03C$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03C$01@glm@@SAHXZ PROC			; glm::vec<4,signed char,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03C$01@glm@@SAHXZ ENDP			; glm::vec<4,signed char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	xor	edx, edx
	movups	xmm0, XMMWORD PTR [ecx]
	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001
	movups	XMMWORD PTR [eax], xmm0
	movups	xmm0, XMMWORD PTR [ecx+16]
	movups	XMMWORD PTR [eax+16], xmm0
	npad	3
$LL5@operator:

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx+edx*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+edx*8], xmm1
	add	edx, 2
	cmp	edx, 4
	jl	SHORT $LL5@operator

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 464  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff

; 465  : 		--this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 454  : 	{

	movaps	xmm2, XMMWORD PTR __xmm@00000000000000010000000000000001

; 455  : 		++this->x;

	xor	eax, eax
	npad	7
$LL3@operator:
	movups	xmm0, XMMWORD PTR [ecx+eax*8]
	movaps	xmm1, xmm2
	paddq	xmm1, xmm0
	movups	XMMWORD PTR [ecx+eax*8], xmm1
	add	eax, 2
	cmp	eax, 4
	jl	SHORT $LL3@operator

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx

; 460  : 	}

	ret	0
??E?$vec@$03_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$01@glm@@QAE@_K000@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
__w$ = 32						; size = 8
??0?$vec@$03_K$01@glm@@QAE@_K000@Z PROC			; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+24], eax
	mov	eax, DWORD PTR __w$[ebp+4]
	mov	DWORD PTR [ecx+28], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	32					; 00000020H
??0?$vec@$03_K$01@glm@@QAE@_K000@Z ENDP			; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03_K$01@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$03_K$01@glm@@QAE@_K@Z PROC			; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax
	mov	DWORD PTR [ecx+28], eax

; 188  : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	mov	DWORD PTR [ecx+24], edx
	pop	ebp
	ret	8
??0?$vec@$03_K$01@glm@@QAE@_K@Z ENDP			; glm::vec<4,unsigned __int64,2>::vec<4,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$01@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$01@glm@@QBEAB_KH@Z PROC			; glm::vec<4,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$01@glm@@QBEAB_KH@Z ENDP			; glm::vec<4,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03_K$01@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03_K$01@glm@@QAEAA_KH@Z PROC			; glm::vec<4,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03_K$01@glm@@QAEAA_KH@Z ENDP			; glm::vec<4,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03_K$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03_K$01@glm@@SAHXZ PROC			; glm::vec<4,unsigned __int64,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03_K$01@glm@@SAHXZ ENDP			; glm::vec<4,unsigned __int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	psubd	xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@00000001000000010000000100000001
	paddd	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$01@glm@@QAE@IIII@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03I$01@glm@@QAE@IIII@Z PROC			; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __w$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03I$01@glm@@QAE@IIII@Z ENDP			; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03I$01@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03I$01@glm@@QAE@I@Z PROC			; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03I$01@glm@@QAE@I@Z ENDP			; glm::vec<4,unsigned int,2>::vec<4,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$01@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$01@glm@@QBEABIH@Z PROC			; glm::vec<4,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$01@glm@@QBEABIH@Z ENDP			; glm::vec<4,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03I$01@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03I$01@glm@@QAEAAIH@Z PROC			; glm::vec<4,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03I$01@glm@@QAEAAIH@Z ENDP			; glm::vec<4,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03I$01@glm@@SAHXZ PROC			; glm::vec<4,unsigned int,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03I$01@glm@@SAHXZ ENDP			; glm::vec<4,unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 484  : 		--*this;
; 485  : 		return Result;

	mov	eax, edx

; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 457  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 458  : 		++this->w;

	inc	WORD PTR [ecx+6]

; 474  : 	{

	push	esi

; 475  : 		vec<4, T, Q> Result(*this);

	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [esi], eax

; 476  : 		++*this;
; 477  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 466  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 467  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 468  : 		--this->w;

	add	WORD PTR [ecx+6], ax

; 469  : 		return *this;

	mov	eax, ecx

; 470  : 	}

	ret	0
??F?$vec@$03G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	WORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]
	inc	WORD PTR [ecx+6]

; 460  : 	}

	ret	0
??E?$vec@$03G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$01@glm@@QAE@GGGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
__w$ = 20						; size = 2
??0?$vec@$03G$01@glm@@QAE@GGGG@Z PROC			; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax
	mov	ax, WORD PTR __w$[ebp]
	mov	WORD PTR [ecx+6], ax

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03G$01@glm@@QAE@GGGG@Z ENDP			; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03G$01@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$03G$01@glm@@QAE@G@Z PROC			; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax
	mov	WORD PTR [ecx+6], ax

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03G$01@glm@@QAE@G@Z ENDP			; glm::vec<4,unsigned short,2>::vec<4,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$01@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$01@glm@@QBEABGH@Z PROC			; glm::vec<4,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$01@glm@@QBEABGH@Z ENDP			; glm::vec<4,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03G$01@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03G$01@glm@@QAEAAGH@Z PROC			; glm::vec<4,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03G$01@glm@@QAEAAGH@Z ENDP			; glm::vec<4,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03G$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03G$01@glm@@SAHXZ PROC			; glm::vec<4,unsigned short,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03G$01@glm@@SAHXZ ENDP			; glm::vec<4,unsigned short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<4,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<4,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$01@glm@@QAE@EEEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03E$01@glm@@QAE@EEEE@Z PROC			; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03E$01@glm@@QAE@EEEE@Z ENDP			; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$01@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03E$01@glm@@QAE@E@Z PROC			; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03E$01@glm@@QAE@E@Z ENDP			; glm::vec<4,unsigned char,2>::vec<4,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$01@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$01@glm@@QBEABEH@Z PROC			; glm::vec<4,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$01@glm@@QBEABEH@Z ENDP			; glm::vec<4,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$01@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$01@glm@@QAEAAEH@Z PROC			; glm::vec<4,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$01@glm@@QAEAAEH@Z ENDP			; glm::vec<4,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03E$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03E$01@glm@@SAHXZ PROC			; glm::vec<4,unsigned char,2>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03E$01@glm@@SAHXZ ENDP			; glm::vec<4,unsigned char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,double,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 300  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;
; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,double,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 292  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;
; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$0A@@glm@@QAE@NNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02N$0A@@glm@@QAE@NNN@Z PROC			; glm::vec<3,double,0>::vec<3,double,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02N$0A@@glm@@QAE@NNN@Z ENDP			; glm::vec<3,double,0>::vec<3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02N$0A@@glm@@QAE@N@Z PROC			; glm::vec<3,double,0>::vec<3,double,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$02N$0A@@glm@@QAE@N@Z ENDP			; glm::vec<3,double,0>::vec<3,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$0A@@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$0A@@glm@@QBEABNH@Z PROC			; glm::vec<3,double,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$0A@@glm@@QBEABNH@Z ENDP			; glm::vec<3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$0A@@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$0A@@glm@@QAEAANH@Z PROC			; glm::vec<3,double,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$0A@@glm@@QAEAANH@Z ENDP			; glm::vec<3,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02N$0A@@glm@@SAHXZ PROC			; glm::vec<3,double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02N$0A@@glm@@SAHXZ ENDP			; glm::vec<3,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,float,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 283  : 		--this->x;

	subss	xmm0, xmm1

; 300  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 283  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,float,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 274  : 		++this->x;

	addss	xmm0, xmm1

; 292  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 293  : 		++*this;
; 294  : 		return Result;

	mov	eax, edx

; 274  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$0A@@glm@@QAE@MMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02M$0A@@glm@@QAE@MMM@Z PROC			; glm::vec<3,float,0>::vec<3,float,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02M$0A@@glm@@QAE@MMM@Z ENDP			; glm::vec<3,float,0>::vec<3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02M$0A@@glm@@QAE@M@Z PROC			; glm::vec<3,float,0>::vec<3,float,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??0?$vec@$02M$0A@@glm@@QAE@M@Z ENDP			; glm::vec<3,float,0>::vec<3,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$0A@@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$0A@@glm@@QBEABMH@Z PROC			; glm::vec<3,float,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$0A@@glm@@QBEABMH@Z ENDP			; glm::vec<3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$0A@@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$0A@@glm@@QAEAAMH@Z PROC			; glm::vec<3,float,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$0A@@glm@@QAEAAMH@Z ENDP			; glm::vec<3,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02M$0A@@glm@@SAHXZ PROC			; glm::vec<3,float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02M$0A@@glm@@SAHXZ ENDP			; glm::vec<3,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<3,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<3,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<3,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<3,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$0A@@glm@@QAE@_J00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_J$0A@@glm@@QAE@_J00@Z PROC			; glm::vec<3,__int64,0>::vec<3,__int64,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_J$0A@@glm@@QAE@_J00@Z ENDP			; glm::vec<3,__int64,0>::vec<3,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$0A@@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_J$0A@@glm@@QAE@_J@Z PROC			; glm::vec<3,__int64,0>::vec<3,__int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_J$0A@@glm@@QAE@_J@Z ENDP			; glm::vec<3,__int64,0>::vec<3,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$0A@@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$0A@@glm@@QBEAB_JH@Z PROC			; glm::vec<3,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$0A@@glm@@QBEAB_JH@Z ENDP			; glm::vec<3,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$0A@@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$0A@@glm@@QAEAA_JH@Z PROC			; glm::vec<3,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$0A@@glm@@QAEAA_JH@Z ENDP			; glm::vec<3,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_J$0A@@glm@@SAHXZ PROC			; glm::vec<3,__int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_J$0A@@glm@@SAHXZ ENDP			; glm::vec<3,__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,int,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,int,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$0A@@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02H$0A@@glm@@QAE@HHH@Z PROC			; glm::vec<3,int,0>::vec<3,int,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02H$0A@@glm@@QAE@HHH@Z ENDP			; glm::vec<3,int,0>::vec<3,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$0A@@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02H$0A@@glm@@QAE@H@Z PROC			; glm::vec<3,int,0>::vec<3,int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02H$0A@@glm@@QAE@H@Z ENDP			; glm::vec<3,int,0>::vec<3,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$0A@@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$0A@@glm@@QBEABHH@Z PROC			; glm::vec<3,int,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$0A@@glm@@QBEABHH@Z ENDP			; glm::vec<3,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$0A@@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$0A@@glm@@QAEAAHH@Z PROC			; glm::vec<3,int,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$0A@@glm@@QAEAAHH@Z ENDP			; glm::vec<3,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02H$0A@@glm@@SAHXZ PROC			; glm::vec<3,int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02H$0A@@glm@@SAHXZ ENDP			; glm::vec<3,int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,short,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 285  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,short,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]

; 287  : 	}

	ret	0
??F?$vec@$02F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$0A@@glm@@QAE@FFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02F$0A@@glm@@QAE@FFF@Z PROC			; glm::vec<3,short,0>::vec<3,short,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02F$0A@@glm@@QAE@FFF@Z ENDP			; glm::vec<3,short,0>::vec<3,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$0A@@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02F$0A@@glm@@QAE@F@Z PROC			; glm::vec<3,short,0>::vec<3,short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02F$0A@@glm@@QAE@F@Z ENDP			; glm::vec<3,short,0>::vec<3,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$0A@@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$0A@@glm@@QBEABFH@Z PROC			; glm::vec<3,short,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$0A@@glm@@QBEABFH@Z ENDP			; glm::vec<3,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$0A@@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$0A@@glm@@QAEAAFH@Z PROC			; glm::vec<3,short,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$0A@@glm@@QAEAAFH@Z ENDP			; glm::vec<3,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02F$0A@@glm@@SAHXZ PROC			; glm::vec<3,short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02F$0A@@glm@@SAHXZ ENDP			; glm::vec<3,short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$0A@@glm@@QAE@CCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02C$0A@@glm@@QAE@CCC@Z PROC			; glm::vec<3,signed char,0>::vec<3,signed char,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02C$0A@@glm@@QAE@CCC@Z ENDP			; glm::vec<3,signed char,0>::vec<3,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$0A@@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02C$0A@@glm@@QAE@C@Z PROC			; glm::vec<3,signed char,0>::vec<3,signed char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02C$0A@@glm@@QAE@C@Z ENDP			; glm::vec<3,signed char,0>::vec<3,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$0A@@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$0A@@glm@@QBEABCH@Z PROC			; glm::vec<3,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$0A@@glm@@QBEABCH@Z ENDP			; glm::vec<3,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$0A@@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$0A@@glm@@QAEAACH@Z PROC			; glm::vec<3,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$0A@@glm@@QAEAACH@Z ENDP			; glm::vec<3,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02C$0A@@glm@@SAHXZ PROC			; glm::vec<3,signed char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02C$0A@@glm@@SAHXZ ENDP			; glm::vec<3,signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<3,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<3,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<3,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<3,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$0A@@glm@@QAE@_K00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_K$0A@@glm@@QAE@_K00@Z PROC			; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_K$0A@@glm@@QAE@_K00@Z ENDP			; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$0A@@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_K$0A@@glm@@QAE@_K@Z PROC			; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_K$0A@@glm@@QAE@_K@Z ENDP			; glm::vec<3,unsigned __int64,0>::vec<3,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$0A@@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$0A@@glm@@QBEAB_KH@Z PROC			; glm::vec<3,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$0A@@glm@@QBEAB_KH@Z ENDP			; glm::vec<3,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$0A@@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$0A@@glm@@QAEAA_KH@Z PROC			; glm::vec<3,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$0A@@glm@@QAEAA_KH@Z ENDP			; glm::vec<3,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_K$0A@@glm@@SAHXZ PROC			; glm::vec<3,unsigned __int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_K$0A@@glm@@SAHXZ ENDP			; glm::vec<3,unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$0A@@glm@@QAE@III@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02I$0A@@glm@@QAE@III@Z PROC			; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02I$0A@@glm@@QAE@III@Z ENDP			; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$0A@@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02I$0A@@glm@@QAE@I@Z PROC			; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02I$0A@@glm@@QAE@I@Z ENDP			; glm::vec<3,unsigned int,0>::vec<3,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$0A@@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$0A@@glm@@QBEABIH@Z PROC			; glm::vec<3,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$0A@@glm@@QBEABIH@Z ENDP			; glm::vec<3,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$0A@@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$0A@@glm@@QAEAAIH@Z PROC			; glm::vec<3,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$0A@@glm@@QAEAAIH@Z ENDP			; glm::vec<3,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02I$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02I$0A@@glm@@SAHXZ PROC			; glm::vec<3,unsigned int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02I$0A@@glm@@SAHXZ ENDP			; glm::vec<3,unsigned int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], ax

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 286  : 		return *this;

	mov	eax, ecx

; 287  : 	}

	ret	0
??F?$vec@$02G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$0A@@glm@@QAE@GGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02G$0A@@glm@@QAE@GGG@Z PROC			; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02G$0A@@glm@@QAE@GGG@Z ENDP			; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$0A@@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02G$0A@@glm@@QAE@G@Z PROC			; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02G$0A@@glm@@QAE@G@Z ENDP			; glm::vec<3,unsigned short,0>::vec<3,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$0A@@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$0A@@glm@@QBEABGH@Z PROC			; glm::vec<3,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$0A@@glm@@QBEABGH@Z ENDP			; glm::vec<3,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$0A@@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$0A@@glm@@QAEAAGH@Z PROC			; glm::vec<3,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$0A@@glm@@QAEAAGH@Z ENDP			; glm::vec<3,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02G$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02G$0A@@glm@@SAHXZ PROC			; glm::vec<3,unsigned short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02G$0A@@glm@@SAHXZ ENDP			; glm::vec<3,unsigned short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$0A@@glm@@QAE@EEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02E$0A@@glm@@QAE@EEE@Z PROC			; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02E$0A@@glm@@QAE@EEE@Z ENDP			; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$0A@@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02E$0A@@glm@@QAE@E@Z PROC			; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02E$0A@@glm@@QAE@E@Z ENDP			; glm::vec<3,unsigned char,0>::vec<3,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$0A@@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$0A@@glm@@QBEABEH@Z PROC			; glm::vec<3,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$0A@@glm@@QBEABEH@Z ENDP			; glm::vec<3,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$0A@@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$0A@@glm@@QAEAAEH@Z PROC			; glm::vec<3,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$0A@@glm@@QAEAAEH@Z ENDP			; glm::vec<3,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02E$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02E$0A@@glm@@SAHXZ PROC			; glm::vec<3,unsigned char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02E$0A@@glm@@SAHXZ ENDP			; glm::vec<3,unsigned char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,double,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 300  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;
; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,double,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 292  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;
; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$00@glm@@QAE@NNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02N$00@glm@@QAE@NNN@Z PROC			; glm::vec<3,double,1>::vec<3,double,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02N$00@glm@@QAE@NNN@Z ENDP			; glm::vec<3,double,1>::vec<3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02N$00@glm@@QAE@N@Z PROC			; glm::vec<3,double,1>::vec<3,double,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$02N$00@glm@@QAE@N@Z ENDP			; glm::vec<3,double,1>::vec<3,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$00@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$00@glm@@QBEABNH@Z PROC			; glm::vec<3,double,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$00@glm@@QBEABNH@Z ENDP			; glm::vec<3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$00@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$00@glm@@QAEAANH@Z PROC			; glm::vec<3,double,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$00@glm@@QAEAANH@Z ENDP			; glm::vec<3,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02N$00@glm@@SAHXZ PROC			; glm::vec<3,double,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02N$00@glm@@SAHXZ ENDP			; glm::vec<3,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,float,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 283  : 		--this->x;

	subss	xmm0, xmm1

; 300  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 283  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,float,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 274  : 		++this->x;

	addss	xmm0, xmm1

; 292  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 293  : 		++*this;
; 294  : 		return Result;

	mov	eax, edx

; 274  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$00@glm@@QAE@MMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02M$00@glm@@QAE@MMM@Z PROC			; glm::vec<3,float,1>::vec<3,float,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02M$00@glm@@QAE@MMM@Z ENDP			; glm::vec<3,float,1>::vec<3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02M$00@glm@@QAE@M@Z PROC			; glm::vec<3,float,1>::vec<3,float,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??0?$vec@$02M$00@glm@@QAE@M@Z ENDP			; glm::vec<3,float,1>::vec<3,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$00@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$00@glm@@QBEABMH@Z PROC			; glm::vec<3,float,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$00@glm@@QBEABMH@Z ENDP			; glm::vec<3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$00@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$00@glm@@QAEAAMH@Z PROC			; glm::vec<3,float,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$00@glm@@QAEAAMH@Z ENDP			; glm::vec<3,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02M$00@glm@@SAHXZ PROC			; glm::vec<3,float,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02M$00@glm@@SAHXZ ENDP			; glm::vec<3,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$00@glm@@QAE@_J00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_J$00@glm@@QAE@_J00@Z PROC			; glm::vec<3,__int64,1>::vec<3,__int64,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_J$00@glm@@QAE@_J00@Z ENDP			; glm::vec<3,__int64,1>::vec<3,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$00@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_J$00@glm@@QAE@_J@Z PROC			; glm::vec<3,__int64,1>::vec<3,__int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_J$00@glm@@QAE@_J@Z ENDP			; glm::vec<3,__int64,1>::vec<3,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$00@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$00@glm@@QBEAB_JH@Z PROC			; glm::vec<3,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$00@glm@@QBEAB_JH@Z ENDP			; glm::vec<3,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$00@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$00@glm@@QAEAA_JH@Z PROC			; glm::vec<3,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$00@glm@@QAEAA_JH@Z ENDP			; glm::vec<3,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_J$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_J$00@glm@@SAHXZ PROC			; glm::vec<3,__int64,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_J$00@glm@@SAHXZ ENDP			; glm::vec<3,__int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,int,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,int,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$00@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02H$00@glm@@QAE@HHH@Z PROC			; glm::vec<3,int,1>::vec<3,int,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02H$00@glm@@QAE@HHH@Z ENDP			; glm::vec<3,int,1>::vec<3,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$00@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02H$00@glm@@QAE@H@Z PROC			; glm::vec<3,int,1>::vec<3,int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02H$00@glm@@QAE@H@Z ENDP			; glm::vec<3,int,1>::vec<3,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$00@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$00@glm@@QBEABHH@Z PROC			; glm::vec<3,int,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$00@glm@@QBEABHH@Z ENDP			; glm::vec<3,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$00@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$00@glm@@QAEAAHH@Z PROC			; glm::vec<3,int,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$00@glm@@QAEAAHH@Z ENDP			; glm::vec<3,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02H$00@glm@@SAHXZ PROC			; glm::vec<3,int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02H$00@glm@@SAHXZ ENDP			; glm::vec<3,int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,short,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 285  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,short,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]

; 287  : 	}

	ret	0
??F?$vec@$02F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$00@glm@@QAE@FFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02F$00@glm@@QAE@FFF@Z PROC			; glm::vec<3,short,1>::vec<3,short,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02F$00@glm@@QAE@FFF@Z ENDP			; glm::vec<3,short,1>::vec<3,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$00@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02F$00@glm@@QAE@F@Z PROC			; glm::vec<3,short,1>::vec<3,short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02F$00@glm@@QAE@F@Z ENDP			; glm::vec<3,short,1>::vec<3,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$00@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$00@glm@@QBEABFH@Z PROC			; glm::vec<3,short,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$00@glm@@QBEABFH@Z ENDP			; glm::vec<3,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$00@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$00@glm@@QAEAAFH@Z PROC			; glm::vec<3,short,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$00@glm@@QAEAAFH@Z ENDP			; glm::vec<3,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02F$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02F$00@glm@@SAHXZ PROC			; glm::vec<3,short,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02F$00@glm@@SAHXZ ENDP			; glm::vec<3,short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$00@glm@@QAE@CCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02C$00@glm@@QAE@CCC@Z PROC			; glm::vec<3,signed char,1>::vec<3,signed char,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02C$00@glm@@QAE@CCC@Z ENDP			; glm::vec<3,signed char,1>::vec<3,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$00@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02C$00@glm@@QAE@C@Z PROC			; glm::vec<3,signed char,1>::vec<3,signed char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02C$00@glm@@QAE@C@Z ENDP			; glm::vec<3,signed char,1>::vec<3,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$00@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$00@glm@@QBEABCH@Z PROC			; glm::vec<3,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$00@glm@@QBEABCH@Z ENDP			; glm::vec<3,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$00@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$00@glm@@QAEAACH@Z PROC			; glm::vec<3,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$00@glm@@QAEAACH@Z ENDP			; glm::vec<3,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02C$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02C$00@glm@@SAHXZ PROC			; glm::vec<3,signed char,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02C$00@glm@@SAHXZ ENDP			; glm::vec<3,signed char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$00@glm@@QAE@_K00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_K$00@glm@@QAE@_K00@Z PROC			; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_K$00@glm@@QAE@_K00@Z ENDP			; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$00@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_K$00@glm@@QAE@_K@Z PROC			; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_K$00@glm@@QAE@_K@Z ENDP			; glm::vec<3,unsigned __int64,1>::vec<3,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$00@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$00@glm@@QBEAB_KH@Z PROC			; glm::vec<3,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$00@glm@@QBEAB_KH@Z ENDP			; glm::vec<3,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$00@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$00@glm@@QAEAA_KH@Z PROC			; glm::vec<3,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$00@glm@@QAEAA_KH@Z ENDP			; glm::vec<3,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_K$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_K$00@glm@@SAHXZ PROC			; glm::vec<3,unsigned __int64,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_K$00@glm@@SAHXZ ENDP			; glm::vec<3,unsigned __int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$00@glm@@QAE@III@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02I$00@glm@@QAE@III@Z PROC			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02I$00@glm@@QAE@III@Z ENDP			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$00@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02I$00@glm@@QAE@I@Z PROC			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02I$00@glm@@QAE@I@Z ENDP			; glm::vec<3,unsigned int,1>::vec<3,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$00@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$00@glm@@QBEABIH@Z PROC			; glm::vec<3,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$00@glm@@QBEABIH@Z ENDP			; glm::vec<3,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$00@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$00@glm@@QAEAAIH@Z PROC			; glm::vec<3,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$00@glm@@QAEAAIH@Z ENDP			; glm::vec<3,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02I$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02I$00@glm@@SAHXZ PROC			; glm::vec<3,unsigned int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02I$00@glm@@SAHXZ ENDP			; glm::vec<3,unsigned int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], ax

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 286  : 		return *this;

	mov	eax, ecx

; 287  : 	}

	ret	0
??F?$vec@$02G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$00@glm@@QAE@GGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02G$00@glm@@QAE@GGG@Z PROC			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02G$00@glm@@QAE@GGG@Z ENDP			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$00@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02G$00@glm@@QAE@G@Z PROC			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02G$00@glm@@QAE@G@Z ENDP			; glm::vec<3,unsigned short,1>::vec<3,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$00@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$00@glm@@QBEABGH@Z PROC			; glm::vec<3,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$00@glm@@QBEABGH@Z ENDP			; glm::vec<3,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$00@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$00@glm@@QAEAAGH@Z PROC			; glm::vec<3,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$00@glm@@QAEAAGH@Z ENDP			; glm::vec<3,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02G$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02G$00@glm@@SAHXZ PROC			; glm::vec<3,unsigned short,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02G$00@glm@@SAHXZ ENDP			; glm::vec<3,unsigned short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$00@glm@@QAE@EEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02E$00@glm@@QAE@EEE@Z PROC			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02E$00@glm@@QAE@EEE@Z ENDP			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$00@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02E$00@glm@@QAE@E@Z PROC			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02E$00@glm@@QAE@E@Z ENDP			; glm::vec<3,unsigned char,1>::vec<3,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$00@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$00@glm@@QBEABEH@Z PROC			; glm::vec<3,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$00@glm@@QBEABEH@Z ENDP			; glm::vec<3,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$00@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$00@glm@@QAEAAEH@Z PROC			; glm::vec<3,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$00@glm@@QAEAAEH@Z ENDP			; glm::vec<3,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02E$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02E$00@glm@@SAHXZ PROC			; glm::vec<3,unsigned char,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02E$00@glm@@SAHXZ ENDP			; glm::vec<3,unsigned char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,double,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 300  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 284  : 		--this->y;
; 285  : 		--this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,double,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000

; 292  : 		vec<3, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]
	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0

; 275  : 		++this->y;
; 276  : 		++this->z;

	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	subpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	subsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,double,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	addpd	xmm0, xmm1
	movups	XMMWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR [ecx+16]
	addsd	xmm0, xmm1
	movsd	QWORD PTR [ecx+16], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$01@glm@@QAE@NNN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02N$01@glm@@QAE@NNN@Z PROC			; glm::vec<3,double,2>::vec<3,double,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	movsd	xmm0, QWORD PTR __z$[ebp]
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02N$01@glm@@QAE@NNN@Z ENDP			; glm::vec<3,double,2>::vec<3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02N$01@glm@@QAE@N@Z PROC			; glm::vec<3,double,2>::vec<3,double,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	movsd	QWORD PTR [ecx+16], xmm0
	pop	ebp
	ret	8
??0?$vec@$02N$01@glm@@QAE@N@Z ENDP			; glm::vec<3,double,2>::vec<3,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$01@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$01@glm@@QBEABNH@Z PROC			; glm::vec<3,double,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$01@glm@@QBEABNH@Z ENDP			; glm::vec<3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02N$01@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02N$01@glm@@QAEAANH@Z PROC			; glm::vec<3,double,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02N$01@glm@@QAEAANH@Z ENDP			; glm::vec<3,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02N$01@glm@@SAHXZ PROC			; glm::vec<3,double,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02N$01@glm@@SAHXZ ENDP			; glm::vec<3,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,float,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 283  : 		--this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 283  : 		--this->x;

	subss	xmm0, xmm1

; 300  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 283  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 284  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 285  : 		--this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,float,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]

; 274  : 		++this->x;

	movss	xmm1, DWORD PTR __real@3f800000

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx+8]
	movq	QWORD PTR [edx], xmm0

; 274  : 		++this->x;

	addss	xmm0, xmm1

; 292  : 		vec<3, T, Q> Result(*this);

	mov	DWORD PTR [edx+8], eax

; 293  : 		++*this;
; 294  : 		return Result;

	mov	eax, edx

; 274  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 275  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0

; 276  : 		++this->z;

	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	subss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 287  : 	}

	ret	0
??F?$vec@$02M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,float,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR [ecx+8]
	addss	xmm0, xmm1
	movss	DWORD PTR [ecx+8], xmm0

; 278  : 	}

	ret	0
??E?$vec@$02M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$01@glm@@QAE@MMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02M$01@glm@@QAE@MMM@Z PROC			; glm::vec<3,float,2>::vec<3,float,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02M$01@glm@@QAE@MMM@Z ENDP			; glm::vec<3,float,2>::vec<3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02M$01@glm@@QAE@M@Z PROC			; glm::vec<3,float,2>::vec<3,float,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	movss	DWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	4
??0?$vec@$02M$01@glm@@QAE@M@Z ENDP			; glm::vec<3,float,2>::vec<3,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$01@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$01@glm@@QBEABMH@Z PROC			; glm::vec<3,float,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$01@glm@@QBEABMH@Z ENDP			; glm::vec<3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02M$01@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02M$01@glm@@QAEAAMH@Z PROC			; glm::vec<3,float,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02M$01@glm@@QAEAAMH@Z ENDP			; glm::vec<3,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02M$01@glm@@SAHXZ PROC			; glm::vec<3,float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02M$01@glm@@SAHXZ ENDP			; glm::vec<3,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$01@glm@@QAE@_J00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_J$01@glm@@QAE@_J00@Z PROC			; glm::vec<3,__int64,2>::vec<3,__int64,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_J$01@glm@@QAE@_J00@Z ENDP			; glm::vec<3,__int64,2>::vec<3,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_J$01@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_J$01@glm@@QAE@_J@Z PROC			; glm::vec<3,__int64,2>::vec<3,__int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_J$01@glm@@QAE@_J@Z ENDP			; glm::vec<3,__int64,2>::vec<3,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$01@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$01@glm@@QBEAB_JH@Z PROC			; glm::vec<3,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$01@glm@@QBEAB_JH@Z ENDP			; glm::vec<3,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_J$01@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_J$01@glm@@QAEAA_JH@Z PROC			; glm::vec<3,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_J$01@glm@@QAEAA_JH@Z ENDP			; glm::vec<3,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_J$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_J$01@glm@@SAHXZ PROC			; glm::vec<3,__int64,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_J$01@glm@@SAHXZ ENDP			; glm::vec<3,__int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,int,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,int,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,int,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$01@glm@@QAE@HHH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02H$01@glm@@QAE@HHH@Z PROC			; glm::vec<3,int,2>::vec<3,int,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02H$01@glm@@QAE@HHH@Z ENDP			; glm::vec<3,int,2>::vec<3,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02H$01@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02H$01@glm@@QAE@H@Z PROC			; glm::vec<3,int,2>::vec<3,int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02H$01@glm@@QAE@H@Z ENDP			; glm::vec<3,int,2>::vec<3,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$01@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$01@glm@@QBEABHH@Z PROC			; glm::vec<3,int,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$01@glm@@QBEABHH@Z ENDP			; glm::vec<3,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02H$01@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02H$01@glm@@QAEAAHH@Z PROC			; glm::vec<3,int,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02H$01@glm@@QAEAAHH@Z ENDP			; glm::vec<3,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02H$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02H$01@glm@@SAHXZ PROC			; glm::vec<3,int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02H$01@glm@@SAHXZ ENDP			; glm::vec<3,int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,short,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;

	dec	WORD PTR [ecx+2]

; 285  : 		--this->z;

	dec	WORD PTR [ecx+4]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,short,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	WORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]
	dec	WORD PTR [ecx+4]

; 287  : 	}

	ret	0
??F?$vec@$02F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,short,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$01@glm@@QAE@FFF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02F$01@glm@@QAE@FFF@Z PROC			; glm::vec<3,short,2>::vec<3,short,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02F$01@glm@@QAE@FFF@Z ENDP			; glm::vec<3,short,2>::vec<3,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02F$01@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02F$01@glm@@QAE@F@Z PROC			; glm::vec<3,short,2>::vec<3,short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02F$01@glm@@QAE@F@Z ENDP			; glm::vec<3,short,2>::vec<3,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$01@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$01@glm@@QBEABFH@Z PROC			; glm::vec<3,short,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$01@glm@@QBEABFH@Z ENDP			; glm::vec<3,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02F$01@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02F$01@glm@@QAEAAFH@Z PROC			; glm::vec<3,short,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02F$01@glm@@QAEAAFH@Z ENDP			; glm::vec<3,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02F$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02F$01@glm@@SAHXZ PROC			; glm::vec<3,short,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02F$01@glm@@SAHXZ ENDP			; glm::vec<3,short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$01@glm@@QAE@CCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02C$01@glm@@QAE@CCC@Z PROC			; glm::vec<3,signed char,2>::vec<3,signed char,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02C$01@glm@@QAE@CCC@Z ENDP			; glm::vec<3,signed char,2>::vec<3,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02C$01@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02C$01@glm@@QAE@C@Z PROC			; glm::vec<3,signed char,2>::vec<3,signed char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02C$01@glm@@QAE@C@Z ENDP			; glm::vec<3,signed char,2>::vec<3,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$01@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$01@glm@@QBEABCH@Z PROC			; glm::vec<3,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$01@glm@@QBEABCH@Z ENDP			; glm::vec<3,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02C$01@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02C$01@glm@@QAEAACH@Z PROC			; glm::vec<3,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02C$01@glm@@QAEAACH@Z ENDP			; glm::vec<3,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02C$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02C$01@glm@@SAHXZ PROC			; glm::vec<3,signed char,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02C$01@glm@@SAHXZ ENDP			; glm::vec<3,signed char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 283  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 284  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 285  : 		--this->z;

	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<3,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0
	movq	xmm0, QWORD PTR [ecx+16]

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax+16], xmm0

; 274  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 275  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 276  : 		++this->z;

	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<3,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1
	add	DWORD PTR [ecx+16], -1
	adc	DWORD PTR [ecx+20], -1

; 287  : 	}

	ret	0
??F?$vec@$02_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0
	add	DWORD PTR [ecx+16], 1
	adc	DWORD PTR [ecx+20], 0

; 278  : 	}

	ret	0
??E?$vec@$02_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$01@glm@@QAE@_K00@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
__z$ = 24						; size = 8
??0?$vec@$02_K$01@glm@@QAE@_K00@Z PROC			; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	eax, DWORD PTR __z$[ebp+4]
	mov	DWORD PTR [ecx+20], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	24					; 00000018H
??0?$vec@$02_K$01@glm@@QAE@_K00@Z ENDP			; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02_K$01@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$02_K$01@glm@@QAE@_K@Z PROC			; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+20], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	mov	DWORD PTR [ecx+16], edx
	pop	ebp
	ret	8
??0?$vec@$02_K$01@glm@@QAE@_K@Z ENDP			; glm::vec<3,unsigned __int64,2>::vec<3,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$01@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$01@glm@@QBEAB_KH@Z PROC			; glm::vec<3,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$01@glm@@QBEAB_KH@Z ENDP			; glm::vec<3,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02_K$01@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02_K$01@glm@@QAEAA_KH@Z PROC			; glm::vec<3,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02_K$01@glm@@QAEAA_KH@Z ENDP			; glm::vec<3,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02_K$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02_K$01@glm@@SAHXZ PROC			; glm::vec<3,unsigned __int64,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02_K$01@glm@@SAHXZ ENDP			; glm::vec<3,unsigned __int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 285  : 		--this->z;

	dec	DWORD PTR [ecx+8]

; 300  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movq	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+8]

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 276  : 		++this->z;

	inc	DWORD PTR [ecx+8]

; 292  : 		vec<3, T, Q> Result(*this);

	movq	QWORD PTR [eax], xmm0
	mov	DWORD PTR [eax+8], edx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	DWORD PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]
	dec	DWORD PTR [ecx+8]

; 287  : 	}

	ret	0
??F?$vec@$02I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	DWORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]
	inc	DWORD PTR [ecx+8]

; 278  : 	}

	ret	0
??E?$vec@$02I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$01@glm@@QAE@III@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
??0?$vec@$02I$01@glm@@QAE@III@Z PROC			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __z$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02I$01@glm@@QAE@III@Z ENDP			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02I$01@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$02I$01@glm@@QAE@I@Z PROC			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02I$01@glm@@QAE@I@Z ENDP			; glm::vec<3,unsigned int,2>::vec<3,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$01@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$01@glm@@QBEABIH@Z PROC			; glm::vec<3,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$01@glm@@QBEABIH@Z ENDP			; glm::vec<3,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02I$01@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02I$01@glm@@QAEAAIH@Z PROC			; glm::vec<3,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02I$01@glm@@QAEAAIH@Z ENDP			; glm::vec<3,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02I$01@glm@@SAHXZ PROC			; glm::vec<3,unsigned int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02I$01@glm@@SAHXZ ENDP			; glm::vec<3,unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	ax, WORD PTR [ecx+4]
	mov	WORD PTR [edx+4], ax

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 301  : 		--*this;
; 302  : 		return Result;

	mov	eax, edx

; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	dx, WORD PTR [ecx+4]

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;

	inc	WORD PTR [ecx+2]

; 276  : 		++this->z;

	inc	WORD PTR [ecx+4]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	WORD PTR [eax+4], dx

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 284  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 285  : 		--this->z;

	add	WORD PTR [ecx+4], ax

; 286  : 		return *this;

	mov	eax, ecx

; 287  : 	}

	ret	0
??F?$vec@$02G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	WORD PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]
	inc	WORD PTR [ecx+4]

; 278  : 	}

	ret	0
??E?$vec@$02G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$01@glm@@QAE@GGG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
__z$ = 16						; size = 2
??0?$vec@$02G$01@glm@@QAE@GGG@Z PROC			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	ax, WORD PTR __z$[ebp]
	mov	WORD PTR [ecx+4], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02G$01@glm@@QAE@GGG@Z ENDP			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02G$01@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$02G$01@glm@@QAE@G@Z PROC			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
	mov	WORD PTR [ecx+4], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02G$01@glm@@QAE@G@Z ENDP			; glm::vec<3,unsigned short,2>::vec<3,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$01@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$01@glm@@QBEABGH@Z PROC			; glm::vec<3,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$01@glm@@QBEABGH@Z ENDP			; glm::vec<3,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02G$01@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02G$01@glm@@QAEAAGH@Z PROC			; glm::vec<3,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02G$01@glm@@QAEAAGH@Z ENDP			; glm::vec<3,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02G$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02G$01@glm@@SAHXZ PROC			; glm::vec<3,unsigned short,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02G$01@glm@@SAHXZ ENDP			; glm::vec<3,unsigned short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$02E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 299  : 	{

	push	ebp
	mov	ebp, esp

; 300  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 285  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 300  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 301  : 		--*this;
; 302  : 		return Result;
; 303  : 	}

	pop	ebp
	ret	8
??F?$vec@$02E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$02E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<3,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 291  : 	{

	push	ebp
	mov	ebp, esp

; 292  : 		vec<3, T, Q> Result(*this);

	mov	dx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx
	mov	dl, BYTE PTR [ecx+2]

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 276  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 292  : 		vec<3, T, Q> Result(*this);

	mov	BYTE PTR [eax+2], dl

; 293  : 		++*this;
; 294  : 		return Result;
; 295  : 	}

	pop	ebp
	ret	8
??E?$vec@$02E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<3,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??F?$vec@$02E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$02E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 283  : 		--this->x;

	dec	BYTE PTR [ecx]

; 284  : 		--this->y;
; 285  : 		--this->z;
; 286  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]

; 287  : 	}

	ret	0
??F?$vec@$02E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??E?$vec@$02E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$02E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<3,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 274  : 		++this->x;

	inc	BYTE PTR [ecx]

; 275  : 		++this->y;
; 276  : 		++this->z;
; 277  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]

; 278  : 	}

	ret	0
??E?$vec@$02E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<3,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$01@glm@@QAE@EEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
??0?$vec@$02E$01@glm@@QAE@EEE@Z PROC			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y), z(_z)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	12					; 0000000cH
??0?$vec@$02E$01@glm@@QAE@EEE@Z ENDP			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??0?$vec@$02E$01@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$02E$01@glm@@QAE@E@Z PROC			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar), z(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$02E$01@glm@@QAE@E@Z ENDP			; glm::vec<3,unsigned char,2>::vec<3,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$01@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$01@glm@@QBEABEH@Z PROC			; glm::vec<3,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 121  : 	{

	push	ebp
	mov	ebp, esp

; 122  : 		assert(i >= 0 && i < this->length());
; 123  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 124  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$01@glm@@QBEABEH@Z ENDP			; glm::vec<3,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.inl
;	COMDAT ??A?$vec@$02E$01@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$02E$01@glm@@QAEAAEH@Z PROC			; glm::vec<3,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 114  : 	{

	push	ebp
	mov	ebp, esp

; 115  : 		assert(i >= 0 && i < this->length());
; 116  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 117  : 	}

	pop	ebp
	ret	4
??A?$vec@$02E$01@glm@@QAEAAEH@Z ENDP			; glm::vec<3,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec3.hpp
;	COMDAT ?length@?$vec@$02E$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$02E$01@glm@@SAHXZ PROC			; glm::vec<3,unsigned char,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}

	mov	eax, 3
	ret	0
?length@?$vec@$02E$01@glm@@SAHXZ ENDP			; glm::vec<3,unsigned char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,double,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,double,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$0A@@glm@@QAE@NN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01N$0A@@glm@@QAE@NN@Z PROC			; glm::vec<2,double,0>::vec<2,double,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01N$0A@@glm@@QAE@NN@Z ENDP			; glm::vec<2,double,0>::vec<2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01N$0A@@glm@@QAE@N@Z PROC			; glm::vec<2,double,0>::vec<2,double,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$01N$0A@@glm@@QAE@N@Z ENDP			; glm::vec<2,double,0>::vec<2,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$0A@@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$0A@@glm@@QBEABNH@Z PROC			; glm::vec<2,double,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$0A@@glm@@QBEABNH@Z ENDP			; glm::vec<2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$0A@@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$0A@@glm@@QAEAANH@Z PROC			; glm::vec<2,double,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$0A@@glm@@QAEAANH@Z ENDP			; glm::vec<2,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01N$0A@@glm@@SAHXZ PROC			; glm::vec<2,double,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01N$0A@@glm@@SAHXZ ENDP			; glm::vec<2,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<2,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<2,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<2,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<2,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$0A@@glm@@QAE@_J0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_J$0A@@glm@@QAE@_J0@Z PROC			; glm::vec<2,__int64,0>::vec<2,__int64,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_J$0A@@glm@@QAE@_J0@Z ENDP			; glm::vec<2,__int64,0>::vec<2,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$0A@@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_J$0A@@glm@@QAE@_J@Z PROC			; glm::vec<2,__int64,0>::vec<2,__int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_J$0A@@glm@@QAE@_J@Z ENDP			; glm::vec<2,__int64,0>::vec<2,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$0A@@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$0A@@glm@@QBEAB_JH@Z PROC			; glm::vec<2,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$0A@@glm@@QBEAB_JH@Z ENDP			; glm::vec<2,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$0A@@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$0A@@glm@@QAEAA_JH@Z PROC			; glm::vec<2,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$0A@@glm@@QAEAA_JH@Z ENDP			; glm::vec<2,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_J$0A@@glm@@SAHXZ PROC			; glm::vec<2,__int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_J$0A@@glm@@SAHXZ ENDP			; glm::vec<2,__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,int,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,int,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$0A@@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01H$0A@@glm@@QAE@HH@Z PROC			; glm::vec<2,int,0>::vec<2,int,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01H$0A@@glm@@QAE@HH@Z ENDP			; glm::vec<2,int,0>::vec<2,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$0A@@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01H$0A@@glm@@QAE@H@Z PROC			; glm::vec<2,int,0>::vec<2,int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01H$0A@@glm@@QAE@H@Z ENDP			; glm::vec<2,int,0>::vec<2,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$0A@@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$0A@@glm@@QBEABHH@Z PROC			; glm::vec<2,int,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$0A@@glm@@QBEABHH@Z ENDP			; glm::vec<2,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$0A@@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$0A@@glm@@QAEAAHH@Z PROC			; glm::vec<2,int,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$0A@@glm@@QAEAAHH@Z ENDP			; glm::vec<2,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01H$0A@@glm@@SAHXZ PROC			; glm::vec<2,int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01H$0A@@glm@@SAHXZ ENDP			; glm::vec<2,int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$0A@@glm@@QAE@CC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01C$0A@@glm@@QAE@CC@Z PROC			; glm::vec<2,signed char,0>::vec<2,signed char,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01C$0A@@glm@@QAE@CC@Z ENDP			; glm::vec<2,signed char,0>::vec<2,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$0A@@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01C$0A@@glm@@QAE@C@Z PROC			; glm::vec<2,signed char,0>::vec<2,signed char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01C$0A@@glm@@QAE@C@Z ENDP			; glm::vec<2,signed char,0>::vec<2,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$0A@@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$0A@@glm@@QBEABCH@Z PROC			; glm::vec<2,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$0A@@glm@@QBEABCH@Z ENDP			; glm::vec<2,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$0A@@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$0A@@glm@@QAEAACH@Z PROC			; glm::vec<2,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$0A@@glm@@QAEAACH@Z ENDP			; glm::vec<2,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01C$0A@@glm@@SAHXZ PROC			; glm::vec<2,signed char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01C$0A@@glm@@SAHXZ ENDP			; glm::vec<2,signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<2,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<2,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<2,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<2,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$0A@@glm@@QAE@_K0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_K$0A@@glm@@QAE@_K0@Z PROC			; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_K$0A@@glm@@QAE@_K0@Z ENDP			; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$0A@@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_K$0A@@glm@@QAE@_K@Z PROC			; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_K$0A@@glm@@QAE@_K@Z ENDP			; glm::vec<2,unsigned __int64,0>::vec<2,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$0A@@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$0A@@glm@@QBEAB_KH@Z PROC			; glm::vec<2,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$0A@@glm@@QBEAB_KH@Z ENDP			; glm::vec<2,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$0A@@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$0A@@glm@@QAEAA_KH@Z PROC			; glm::vec<2,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$0A@@glm@@QAEAA_KH@Z ENDP			; glm::vec<2,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_K$0A@@glm@@SAHXZ PROC			; glm::vec<2,unsigned __int64,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_K$0A@@glm@@SAHXZ ENDP			; glm::vec<2,unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$0A@@glm@@QAE@EE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01E$0A@@glm@@QAE@EE@Z PROC			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01E$0A@@glm@@QAE@EE@Z ENDP			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$0A@@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01E$0A@@glm@@QAE@E@Z PROC			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01E$0A@@glm@@QAE@E@Z ENDP			; glm::vec<2,unsigned char,0>::vec<2,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$0A@@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$0A@@glm@@QBEABEH@Z PROC			; glm::vec<2,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$0A@@glm@@QBEABEH@Z ENDP			; glm::vec<2,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$0A@@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$0A@@glm@@QAEAAEH@Z PROC			; glm::vec<2,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$0A@@glm@@QAEAAEH@Z ENDP			; glm::vec<2,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01E$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01E$0A@@glm@@SAHXZ PROC			; glm::vec<2,unsigned char,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01E$0A@@glm@@SAHXZ ENDP			; glm::vec<2,unsigned char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,double,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,double,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$00@glm@@QAE@NN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01N$00@glm@@QAE@NN@Z PROC			; glm::vec<2,double,1>::vec<2,double,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01N$00@glm@@QAE@NN@Z ENDP			; glm::vec<2,double,1>::vec<2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01N$00@glm@@QAE@N@Z PROC			; glm::vec<2,double,1>::vec<2,double,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$01N$00@glm@@QAE@N@Z ENDP			; glm::vec<2,double,1>::vec<2,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$00@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$00@glm@@QBEABNH@Z PROC			; glm::vec<2,double,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$00@glm@@QBEABNH@Z ENDP			; glm::vec<2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$00@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$00@glm@@QAEAANH@Z PROC			; glm::vec<2,double,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$00@glm@@QAEAANH@Z ENDP			; glm::vec<2,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01N$00@glm@@SAHXZ PROC			; glm::vec<2,double,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01N$00@glm@@SAHXZ ENDP			; glm::vec<2,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,float,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 256  : 		--*this;
; 257  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 240  : 		--this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,float,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 248  : 		++*this;
; 249  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 232  : 		++this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$00@glm@@QAE@MM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01M$00@glm@@QAE@MM@Z PROC			; glm::vec<2,float,1>::vec<2,float,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??0?$vec@$01M$00@glm@@QAE@MM@Z ENDP			; glm::vec<2,float,1>::vec<2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01M$00@glm@@QAE@M@Z PROC			; glm::vec<2,float,1>::vec<2,float,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	4
??0?$vec@$01M$00@glm@@QAE@M@Z ENDP			; glm::vec<2,float,1>::vec<2,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$00@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$00@glm@@QBEABMH@Z PROC			; glm::vec<2,float,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$00@glm@@QBEABMH@Z ENDP			; glm::vec<2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$00@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$00@glm@@QAEAAMH@Z PROC			; glm::vec<2,float,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$00@glm@@QAEAAMH@Z ENDP			; glm::vec<2,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01M$00@glm@@SAHXZ PROC			; glm::vec<2,float,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01M$00@glm@@SAHXZ ENDP			; glm::vec<2,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$00@glm@@QAE@_J0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_J$00@glm@@QAE@_J0@Z PROC			; glm::vec<2,__int64,1>::vec<2,__int64,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_J$00@glm@@QAE@_J0@Z ENDP			; glm::vec<2,__int64,1>::vec<2,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$00@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_J$00@glm@@QAE@_J@Z PROC			; glm::vec<2,__int64,1>::vec<2,__int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_J$00@glm@@QAE@_J@Z ENDP			; glm::vec<2,__int64,1>::vec<2,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$00@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$00@glm@@QBEAB_JH@Z PROC			; glm::vec<2,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$00@glm@@QBEAB_JH@Z ENDP			; glm::vec<2,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$00@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$00@glm@@QAEAA_JH@Z PROC			; glm::vec<2,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$00@glm@@QAEAA_JH@Z ENDP			; glm::vec<2,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_J$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_J$00@glm@@SAHXZ PROC			; glm::vec<2,__int64,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_J$00@glm@@SAHXZ ENDP			; glm::vec<2,__int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,int,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,int,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$00@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01H$00@glm@@QAE@HH@Z PROC			; glm::vec<2,int,1>::vec<2,int,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01H$00@glm@@QAE@HH@Z ENDP			; glm::vec<2,int,1>::vec<2,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$00@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01H$00@glm@@QAE@H@Z PROC			; glm::vec<2,int,1>::vec<2,int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01H$00@glm@@QAE@H@Z ENDP			; glm::vec<2,int,1>::vec<2,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$00@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$00@glm@@QBEABHH@Z PROC			; glm::vec<2,int,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$00@glm@@QBEABHH@Z ENDP			; glm::vec<2,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$00@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$00@glm@@QAEAAHH@Z PROC			; glm::vec<2,int,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$00@glm@@QAEAAHH@Z ENDP			; glm::vec<2,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01H$00@glm@@SAHXZ PROC			; glm::vec<2,int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01H$00@glm@@SAHXZ ENDP			; glm::vec<2,int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,short,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx

; 240  : 		--this->y;

	dec	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,short,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	WORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]

; 242  : 	}

	ret	0
??F?$vec@$01F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$00@glm@@QAE@FF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01F$00@glm@@QAE@FF@Z PROC			; glm::vec<2,short,1>::vec<2,short,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01F$00@glm@@QAE@FF@Z ENDP			; glm::vec<2,short,1>::vec<2,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$00@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01F$00@glm@@QAE@F@Z PROC			; glm::vec<2,short,1>::vec<2,short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01F$00@glm@@QAE@F@Z ENDP			; glm::vec<2,short,1>::vec<2,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$00@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$00@glm@@QBEABFH@Z PROC			; glm::vec<2,short,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$00@glm@@QBEABFH@Z ENDP			; glm::vec<2,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$00@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$00@glm@@QAEAAFH@Z PROC			; glm::vec<2,short,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$00@glm@@QAEAAFH@Z ENDP			; glm::vec<2,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01F$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01F$00@glm@@SAHXZ PROC			; glm::vec<2,short,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01F$00@glm@@SAHXZ ENDP			; glm::vec<2,short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$00@glm@@QAE@CC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01C$00@glm@@QAE@CC@Z PROC			; glm::vec<2,signed char,1>::vec<2,signed char,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01C$00@glm@@QAE@CC@Z ENDP			; glm::vec<2,signed char,1>::vec<2,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$00@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01C$00@glm@@QAE@C@Z PROC			; glm::vec<2,signed char,1>::vec<2,signed char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01C$00@glm@@QAE@C@Z ENDP			; glm::vec<2,signed char,1>::vec<2,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$00@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$00@glm@@QBEABCH@Z PROC			; glm::vec<2,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$00@glm@@QBEABCH@Z ENDP			; glm::vec<2,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$00@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$00@glm@@QAEAACH@Z PROC			; glm::vec<2,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$00@glm@@QAEAACH@Z ENDP			; glm::vec<2,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01C$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01C$00@glm@@SAHXZ PROC			; glm::vec<2,signed char,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01C$00@glm@@SAHXZ ENDP			; glm::vec<2,signed char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$00@glm@@QAE@_K0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_K$00@glm@@QAE@_K0@Z PROC			; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_K$00@glm@@QAE@_K0@Z ENDP			; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$00@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_K$00@glm@@QAE@_K@Z PROC			; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_K$00@glm@@QAE@_K@Z ENDP			; glm::vec<2,unsigned __int64,1>::vec<2,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$00@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$00@glm@@QBEAB_KH@Z PROC			; glm::vec<2,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$00@glm@@QBEAB_KH@Z ENDP			; glm::vec<2,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$00@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$00@glm@@QAEAA_KH@Z PROC			; glm::vec<2,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$00@glm@@QAEAA_KH@Z ENDP			; glm::vec<2,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_K$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_K$00@glm@@SAHXZ PROC			; glm::vec<2,unsigned __int64,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_K$00@glm@@SAHXZ ENDP			; glm::vec<2,unsigned __int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$00@glm@@QAE@II@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01I$00@glm@@QAE@II@Z PROC			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01I$00@glm@@QAE@II@Z ENDP			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$00@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01I$00@glm@@QAE@I@Z PROC			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01I$00@glm@@QAE@I@Z ENDP			; glm::vec<2,unsigned int,1>::vec<2,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$00@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$00@glm@@QBEABIH@Z PROC			; glm::vec<2,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$00@glm@@QBEABIH@Z ENDP			; glm::vec<2,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$00@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$00@glm@@QAEAAIH@Z PROC			; glm::vec<2,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$00@glm@@QAEAAIH@Z ENDP			; glm::vec<2,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01I$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01I$00@glm@@SAHXZ PROC			; glm::vec<2,unsigned int,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01I$00@glm@@SAHXZ ENDP			; glm::vec<2,unsigned int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 240  : 		--this->y;

	mov	edx, 65535				; 0000ffffH
	add	WORD PTR [ecx+2], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 240  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 241  : 		return *this;

	mov	eax, ecx

; 242  : 	}

	ret	0
??F?$vec@$01G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$00@glm@@QAE@GG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01G$00@glm@@QAE@GG@Z PROC			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01G$00@glm@@QAE@GG@Z ENDP			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$00@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01G$00@glm@@QAE@G@Z PROC			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01G$00@glm@@QAE@G@Z ENDP			; glm::vec<2,unsigned short,1>::vec<2,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$00@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$00@glm@@QBEABGH@Z PROC			; glm::vec<2,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$00@glm@@QBEABGH@Z ENDP			; glm::vec<2,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$00@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$00@glm@@QAEAAGH@Z PROC			; glm::vec<2,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$00@glm@@QAEAAGH@Z ENDP			; glm::vec<2,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01G$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01G$00@glm@@SAHXZ PROC			; glm::vec<2,unsigned short,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01G$00@glm@@SAHXZ ENDP			; glm::vec<2,unsigned short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$00@glm@@QAE@EE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01E$00@glm@@QAE@EE@Z PROC			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01E$00@glm@@QAE@EE@Z ENDP			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$00@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01E$00@glm@@QAE@E@Z PROC			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01E$00@glm@@QAE@E@Z ENDP			; glm::vec<2,unsigned char,1>::vec<2,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$00@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$00@glm@@QBEABEH@Z PROC			; glm::vec<2,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$00@glm@@QBEABEH@Z ENDP			; glm::vec<2,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$00@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$00@glm@@QAEAAEH@Z PROC			; glm::vec<2,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$00@glm@@QAEAAEH@Z ENDP			; glm::vec<2,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01E$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01E$00@glm@@SAHXZ PROC			; glm::vec<2,unsigned char,1>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01E$00@glm@@SAHXZ ENDP			; glm::vec<2,unsigned char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,double,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,double,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,double,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addpd	xmm0, XMMWORD PTR __xmm@3ff00000000000003ff0000000000000
	movups	XMMWORD PTR [ecx], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$01@glm@@QAE@NN@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01N$01@glm@@QAE@NN@Z PROC			; glm::vec<2,double,2>::vec<2,double,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movsd	xmm0, QWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	movsd	xmm0, QWORD PTR __y$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01N$01@glm@@QAE@NN@Z ENDP			; glm::vec<2,double,2>::vec<2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01N$01@glm@@QAE@N@Z PROC			; glm::vec<2,double,2>::vec<2,double,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	unpcklpd xmm0, xmm0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$01N$01@glm@@QAE@N@Z ENDP			; glm::vec<2,double,2>::vec<2,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$01@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$01@glm@@QBEABNH@Z PROC			; glm::vec<2,double,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$01@glm@@QBEABNH@Z ENDP			; glm::vec<2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01N$01@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01N$01@glm@@QAEAANH@Z PROC			; glm::vec<2,double,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01N$01@glm@@QAEAANH@Z ENDP			; glm::vec<2,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01N$01@glm@@SAHXZ PROC			; glm::vec<2,double,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01N$01@glm@@SAHXZ ENDP			; glm::vec<2,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,float,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 256  : 		--*this;
; 257  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 240  : 		--this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,float,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 248  : 		++*this;
; 249  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 232  : 		++this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$01@glm@@QAE@MM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01M$01@glm@@QAE@MM@Z PROC			; glm::vec<2,float,2>::vec<2,float,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??0?$vec@$01M$01@glm@@QAE@MM@Z ENDP			; glm::vec<2,float,2>::vec<2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01M$01@glm@@QAE@M@Z PROC			; glm::vec<2,float,2>::vec<2,float,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	4
??0?$vec@$01M$01@glm@@QAE@M@Z ENDP			; glm::vec<2,float,2>::vec<2,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$01@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$01@glm@@QBEABMH@Z PROC			; glm::vec<2,float,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$01@glm@@QBEABMH@Z ENDP			; glm::vec<2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$01@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$01@glm@@QAEAAMH@Z PROC			; glm::vec<2,float,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$01@glm@@QAEAAMH@Z ENDP			; glm::vec<2,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01M$01@glm@@SAHXZ PROC			; glm::vec<2,float,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01M$01@glm@@SAHXZ ENDP			; glm::vec<2,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$01@glm@@QAE@_J0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_J$01@glm@@QAE@_J0@Z PROC			; glm::vec<2,__int64,2>::vec<2,__int64,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_J$01@glm@@QAE@_J0@Z ENDP			; glm::vec<2,__int64,2>::vec<2,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_J$01@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_J$01@glm@@QAE@_J@Z PROC			; glm::vec<2,__int64,2>::vec<2,__int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_J$01@glm@@QAE@_J@Z ENDP			; glm::vec<2,__int64,2>::vec<2,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$01@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$01@glm@@QBEAB_JH@Z PROC			; glm::vec<2,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$01@glm@@QBEAB_JH@Z ENDP			; glm::vec<2,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_J$01@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_J$01@glm@@QAEAA_JH@Z PROC			; glm::vec<2,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_J$01@glm@@QAEAA_JH@Z ENDP			; glm::vec<2,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_J$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_J$01@glm@@SAHXZ PROC			; glm::vec<2,__int64,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_J$01@glm@@SAHXZ ENDP			; glm::vec<2,__int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,int,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,int,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,int,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$01@glm@@QAE@HH@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01H$01@glm@@QAE@HH@Z PROC			; glm::vec<2,int,2>::vec<2,int,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01H$01@glm@@QAE@HH@Z ENDP			; glm::vec<2,int,2>::vec<2,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01H$01@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01H$01@glm@@QAE@H@Z PROC			; glm::vec<2,int,2>::vec<2,int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01H$01@glm@@QAE@H@Z ENDP			; glm::vec<2,int,2>::vec<2,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$01@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$01@glm@@QBEABHH@Z PROC			; glm::vec<2,int,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$01@glm@@QBEABHH@Z ENDP			; glm::vec<2,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01H$01@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01H$01@glm@@QAEAAHH@Z PROC			; glm::vec<2,int,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01H$01@glm@@QAEAAHH@Z ENDP			; glm::vec<2,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01H$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01H$01@glm@@SAHXZ PROC			; glm::vec<2,int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01H$01@glm@@SAHXZ ENDP			; glm::vec<2,int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,short,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx

; 240  : 		--this->y;

	dec	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,short,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	WORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]

; 242  : 	}

	ret	0
??F?$vec@$01F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$01@glm@@QAE@FF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01F$01@glm@@QAE@FF@Z PROC			; glm::vec<2,short,2>::vec<2,short,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01F$01@glm@@QAE@FF@Z ENDP			; glm::vec<2,short,2>::vec<2,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$01@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01F$01@glm@@QAE@F@Z PROC			; glm::vec<2,short,2>::vec<2,short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01F$01@glm@@QAE@F@Z ENDP			; glm::vec<2,short,2>::vec<2,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$01@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$01@glm@@QBEABFH@Z PROC			; glm::vec<2,short,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$01@glm@@QBEABFH@Z ENDP			; glm::vec<2,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$01@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$01@glm@@QAEAAFH@Z PROC			; glm::vec<2,short,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$01@glm@@QAEAAFH@Z ENDP			; glm::vec<2,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01F$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01F$01@glm@@SAHXZ PROC			; glm::vec<2,short,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01F$01@glm@@SAHXZ ENDP			; glm::vec<2,short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$01@glm@@QAE@CC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01C$01@glm@@QAE@CC@Z PROC			; glm::vec<2,signed char,2>::vec<2,signed char,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01C$01@glm@@QAE@CC@Z ENDP			; glm::vec<2,signed char,2>::vec<2,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01C$01@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01C$01@glm@@QAE@C@Z PROC			; glm::vec<2,signed char,2>::vec<2,signed char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01C$01@glm@@QAE@C@Z ENDP			; glm::vec<2,signed char,2>::vec<2,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$01@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$01@glm@@QBEABCH@Z PROC			; glm::vec<2,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$01@glm@@QBEABCH@Z ENDP			; glm::vec<2,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01C$01@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01C$01@glm@@QAEAACH@Z PROC			; glm::vec<2,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01C$01@glm@@QAEAACH@Z ENDP			; glm::vec<2,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01C$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01C$01@glm@@SAHXZ PROC			; glm::vec<2,signed char,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01C$01@glm@@SAHXZ ENDP			; glm::vec<2,signed char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 240  : 		--this->y;

	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 255  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 232  : 		++this->y;

	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 247  : 		vec<2, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1
	add	DWORD PTR [ecx+8], -1
	adc	DWORD PTR [ecx+12], -1

; 242  : 	}

	ret	0
??F?$vec@$01_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0
	add	DWORD PTR [ecx+8], 1
	adc	DWORD PTR [ecx+12], 0

; 234  : 	}

	ret	0
??E?$vec@$01_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$01@glm@@QAE@_K0@Z
_TEXT	SEGMENT
__x$ = 8						; size = 8
__y$ = 16						; size = 8
??0?$vec@$01_K$01@glm@@QAE@_K0@Z PROC			; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __x$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR __y$[ebp+4]
	mov	DWORD PTR [ecx+12], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$01_K$01@glm@@QAE@_K0@Z ENDP			; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01_K$01@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$01_K$01@glm@@QAE@_K@Z PROC			; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	edx, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+12], eax

; 35   : 	{}

	mov	eax, ecx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+8], edx
	pop	ebp
	ret	8
??0?$vec@$01_K$01@glm@@QAE@_K@Z ENDP			; glm::vec<2,unsigned __int64,2>::vec<2,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$01@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$01@glm@@QBEAB_KH@Z PROC			; glm::vec<2,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$01@glm@@QBEAB_KH@Z ENDP			; glm::vec<2,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01_K$01@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01_K$01@glm@@QAEAA_KH@Z PROC			; glm::vec<2,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01_K$01@glm@@QAEAA_KH@Z ENDP			; glm::vec<2,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01_K$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01_K$01@glm@@SAHXZ PROC			; glm::vec<2,unsigned __int64,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01_K$01@glm@@SAHXZ ENDP			; glm::vec<2,unsigned __int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$01@glm@@QAE@II@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01I$01@glm@@QAE@II@Z PROC			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01I$01@glm@@QAE@II@Z ENDP			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$01@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01I$01@glm@@QAE@I@Z PROC			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01I$01@glm@@QAE@I@Z ENDP			; glm::vec<2,unsigned int,2>::vec<2,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$01@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$01@glm@@QBEABIH@Z PROC			; glm::vec<2,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$01@glm@@QBEABIH@Z ENDP			; glm::vec<2,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$01@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$01@glm@@QAEAAIH@Z PROC			; glm::vec<2,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$01@glm@@QAEAAIH@Z ENDP			; glm::vec<2,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01I$01@glm@@SAHXZ PROC			; glm::vec<2,unsigned int,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01I$01@glm@@SAHXZ ENDP			; glm::vec<2,unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 240  : 		--this->y;

	mov	edx, 65535				; 0000ffffH
	add	WORD PTR [ecx+2], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 240  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 241  : 		return *this;

	mov	eax, ecx

; 242  : 	}

	ret	0
??F?$vec@$01G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$01@glm@@QAE@GG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01G$01@glm@@QAE@GG@Z PROC			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01G$01@glm@@QAE@GG@Z ENDP			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$01@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01G$01@glm@@QAE@G@Z PROC			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01G$01@glm@@QAE@G@Z ENDP			; glm::vec<2,unsigned short,2>::vec<2,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$01@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$01@glm@@QBEABGH@Z PROC			; glm::vec<2,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$01@glm@@QBEABGH@Z ENDP			; glm::vec<2,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$01@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$01@glm@@QAEAAGH@Z PROC			; glm::vec<2,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$01@glm@@QAEAAGH@Z ENDP			; glm::vec<2,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01G$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01G$01@glm@@SAHXZ PROC			; glm::vec<2,unsigned short,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01G$01@glm@@SAHXZ ENDP			; glm::vec<2,unsigned short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 239  : 		--this->x;

	dec	dl

; 240  : 		--this->y;

	dec	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<2,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	movzx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	WORD PTR [eax], dx

; 231  : 		++this->x;

	inc	dl

; 232  : 		++this->y;

	inc	BYTE PTR [ecx+1]
	mov	BYTE PTR [ecx], dl

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<2,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	BYTE PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]

; 242  : 	}

	ret	0
??F?$vec@$01E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	BYTE PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]

; 234  : 	}

	ret	0
??E?$vec@$01E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$01@glm@@QAE@EE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
??0?$vec@$01E$01@glm@@QAE@EE@Z PROC			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01E$01@glm@@QAE@EE@Z ENDP			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01E$01@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$01E$01@glm@@QAE@E@Z PROC			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01E$01@glm@@QAE@E@Z ENDP			; glm::vec<2,unsigned char,2>::vec<2,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$01@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$01@glm@@QBEABEH@Z PROC			; glm::vec<2,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$01@glm@@QBEABEH@Z ENDP			; glm::vec<2,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01E$01@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01E$01@glm@@QAEAAEH@Z PROC			; glm::vec<2,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01E$01@glm@@QAEAAEH@Z ENDP			; glm::vec<2,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01E$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01E$01@glm@@SAHXZ PROC			; glm::vec<2,unsigned char,2>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01E$01@glm@@SAHXZ ENDP			; glm::vec<2,unsigned char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,double,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 174  : 		--this->x;

	subsd	xmm0, QWORD PTR __real@3ff0000000000000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 174  : 		--this->x;

	movsd	QWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00N$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,double,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 167  : 		++this->x;

	addsd	xmm0, QWORD PTR __real@3ff0000000000000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 		++this->x;

	movsd	QWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00N$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00N$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00N$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00N$0A@@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00N$0A@@glm@@QAE@N@Z PROC			; glm::vec<1,double,0>::vec<1,double,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$00N$0A@@glm@@QAE@N@Z ENDP			; glm::vec<1,double,0>::vec<1,double,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$0A@@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$0A@@glm@@QBEABNH@Z PROC			; glm::vec<1,double,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$0A@@glm@@QBEABNH@Z ENDP			; glm::vec<1,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$0A@@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$0A@@glm@@QAEAANH@Z PROC			; glm::vec<1,double,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$0A@@glm@@QAEAANH@Z ENDP			; glm::vec<1,double,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00N$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00N$0A@@glm@@SAHXZ PROC			; glm::vec<1,double,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00N$0A@@glm@@SAHXZ ENDP			; glm::vec<1,double,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,float,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,float,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00M$0A@@glm@@QAE@M@Z PROC			; glm::vec<1,float,0>::vec<1,float,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$00M$0A@@glm@@QAE@M@Z ENDP			; glm::vec<1,float,0>::vec<1,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$0A@@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$0A@@glm@@QBEABMH@Z PROC			; glm::vec<1,float,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$0A@@glm@@QBEABMH@Z ENDP			; glm::vec<1,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$0A@@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$0A@@glm@@QAEAAMH@Z PROC			; glm::vec<1,float,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$0A@@glm@@QAEAAMH@Z ENDP			; glm::vec<1,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00M$0A@@glm@@SAHXZ PROC			; glm::vec<1,float,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00M$0A@@glm@@SAHXZ ENDP			; glm::vec<1,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_J$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<1,__int64,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<1,__int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_J$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<1,__int64,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_J$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<1,__int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_J$0A@@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_J$0A@@glm@@QAE@_J@Z PROC			; glm::vec<1,__int64,0>::vec<1,__int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_J$0A@@glm@@QAE@_J@Z ENDP			; glm::vec<1,__int64,0>::vec<1,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$0A@@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$0A@@glm@@QBEAB_JH@Z PROC			; glm::vec<1,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$0A@@glm@@QBEAB_JH@Z ENDP			; glm::vec<1,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$0A@@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$0A@@glm@@QAEAA_JH@Z PROC			; glm::vec<1,__int64,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$0A@@glm@@QAEAA_JH@Z ENDP			; glm::vec<1,__int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_J$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_J$0A@@glm@@SAHXZ PROC			; glm::vec<1,__int64,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_J$0A@@glm@@SAHXZ ENDP			; glm::vec<1,__int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,int,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00H$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,int,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00H$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00H$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00H$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00H$0A@@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00H$0A@@glm@@QAE@H@Z PROC			; glm::vec<1,int,0>::vec<1,int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00H$0A@@glm@@QAE@H@Z ENDP			; glm::vec<1,int,0>::vec<1,int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$0A@@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$0A@@glm@@QBEABHH@Z PROC			; glm::vec<1,int,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$0A@@glm@@QBEABHH@Z ENDP			; glm::vec<1,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$0A@@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$0A@@glm@@QAEAAHH@Z PROC			; glm::vec<1,int,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$0A@@glm@@QAEAAHH@Z ENDP			; glm::vec<1,int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00H$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00H$0A@@glm@@SAHXZ PROC			; glm::vec<1,int,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00H$0A@@glm@@SAHXZ ENDP			; glm::vec<1,int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,short,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,short,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	WORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00F$0A@@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00F$0A@@glm@@QAE@F@Z PROC			; glm::vec<1,short,0>::vec<1,short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00F$0A@@glm@@QAE@F@Z ENDP			; glm::vec<1,short,0>::vec<1,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$0A@@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$0A@@glm@@QBEABFH@Z PROC			; glm::vec<1,short,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$0A@@glm@@QBEABFH@Z ENDP			; glm::vec<1,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$0A@@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$0A@@glm@@QAEAAFH@Z PROC			; glm::vec<1,short,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$0A@@glm@@QAEAAFH@Z ENDP			; glm::vec<1,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00F$0A@@glm@@SAHXZ PROC			; glm::vec<1,short,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00F$0A@@glm@@SAHXZ ENDP			; glm::vec<1,short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00C$0A@@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00C$0A@@glm@@QAE@C@Z PROC			; glm::vec<1,signed char,0>::vec<1,signed char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00C$0A@@glm@@QAE@C@Z ENDP			; glm::vec<1,signed char,0>::vec<1,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$0A@@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$0A@@glm@@QBEABCH@Z PROC			; glm::vec<1,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$0A@@glm@@QBEABCH@Z ENDP			; glm::vec<1,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$0A@@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$0A@@glm@@QAEAACH@Z PROC			; glm::vec<1,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$0A@@glm@@QAEAACH@Z ENDP			; glm::vec<1,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00C$0A@@glm@@SAHXZ PROC			; glm::vec<1,signed char,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00C$0A@@glm@@SAHXZ ENDP			; glm::vec<1,signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_K$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<1,unsigned __int64,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<1,unsigned __int64,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_K$0A@@glm@@QAEAAU01@XZ PROC		; glm::vec<1,unsigned __int64,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_K$0A@@glm@@QAEAAU01@XZ ENDP		; glm::vec<1,unsigned __int64,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_K$0A@@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_K$0A@@glm@@QAE@_K@Z PROC			; glm::vec<1,unsigned __int64,0>::vec<1,unsigned __int64,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_K$0A@@glm@@QAE@_K@Z ENDP			; glm::vec<1,unsigned __int64,0>::vec<1,unsigned __int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$0A@@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$0A@@glm@@QBEAB_KH@Z PROC			; glm::vec<1,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$0A@@glm@@QBEAB_KH@Z ENDP			; glm::vec<1,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$0A@@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$0A@@glm@@QAEAA_KH@Z PROC			; glm::vec<1,unsigned __int64,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$0A@@glm@@QAEAA_KH@Z ENDP			; glm::vec<1,unsigned __int64,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_K$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_K$0A@@glm@@SAHXZ PROC			; glm::vec<1,unsigned __int64,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_K$0A@@glm@@SAHXZ ENDP			; glm::vec<1,unsigned __int64,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00I$0A@@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00I$0A@@glm@@QAE@I@Z PROC			; glm::vec<1,unsigned int,0>::vec<1,unsigned int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00I$0A@@glm@@QAE@I@Z ENDP			; glm::vec<1,unsigned int,0>::vec<1,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$0A@@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$0A@@glm@@QBEABIH@Z PROC			; glm::vec<1,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$0A@@glm@@QBEABIH@Z ENDP			; glm::vec<1,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$0A@@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$0A@@glm@@QAEAAIH@Z PROC			; glm::vec<1,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$0A@@glm@@QAEAAIH@Z ENDP			; glm::vec<1,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00I$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00I$0A@@glm@@SAHXZ PROC			; glm::vec<1,unsigned int,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00I$0A@@glm@@SAHXZ ENDP			; glm::vec<1,unsigned int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00G$0A@@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00G$0A@@glm@@QAE@G@Z PROC			; glm::vec<1,unsigned short,0>::vec<1,unsigned short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00G$0A@@glm@@QAE@G@Z ENDP			; glm::vec<1,unsigned short,0>::vec<1,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$0A@@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$0A@@glm@@QBEABGH@Z PROC			; glm::vec<1,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$0A@@glm@@QBEABGH@Z ENDP			; glm::vec<1,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$0A@@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$0A@@glm@@QAEAAGH@Z PROC			; glm::vec<1,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$0A@@glm@@QAEAAGH@Z ENDP			; glm::vec<1,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00G$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00G$0A@@glm@@SAHXZ PROC			; glm::vec<1,unsigned short,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00G$0A@@glm@@SAHXZ ENDP			; glm::vec<1,unsigned short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00E$0A@@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00E$0A@@glm@@QAE@E@Z PROC			; glm::vec<1,unsigned char,0>::vec<1,unsigned char,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00E$0A@@glm@@QAE@E@Z ENDP			; glm::vec<1,unsigned char,0>::vec<1,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$0A@@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$0A@@glm@@QBEABEH@Z PROC			; glm::vec<1,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$0A@@glm@@QBEABEH@Z ENDP			; glm::vec<1,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$0A@@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$0A@@glm@@QAEAAEH@Z PROC			; glm::vec<1,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$0A@@glm@@QAEAAEH@Z ENDP			; glm::vec<1,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00E$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00E$0A@@glm@@SAHXZ PROC			; glm::vec<1,unsigned char,0>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00E$0A@@glm@@SAHXZ ENDP			; glm::vec<1,unsigned char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,double,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 174  : 		--this->x;

	subsd	xmm0, QWORD PTR __real@3ff0000000000000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 174  : 		--this->x;

	movsd	QWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00N$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,double,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 167  : 		++this->x;

	addsd	xmm0, QWORD PTR __real@3ff0000000000000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 		++this->x;

	movsd	QWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00N$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00N$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00N$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00N$00@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00N$00@glm@@QAE@N@Z PROC			; glm::vec<1,double,1>::vec<1,double,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$00N$00@glm@@QAE@N@Z ENDP			; glm::vec<1,double,1>::vec<1,double,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$00@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$00@glm@@QBEABNH@Z PROC			; glm::vec<1,double,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$00@glm@@QBEABNH@Z ENDP			; glm::vec<1,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$00@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$00@glm@@QAEAANH@Z PROC			; glm::vec<1,double,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$00@glm@@QAEAANH@Z ENDP			; glm::vec<1,double,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00N$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00N$00@glm@@SAHXZ PROC			; glm::vec<1,double,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00N$00@glm@@SAHXZ ENDP			; glm::vec<1,double,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,float,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00M$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,float,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00M$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00M$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00M$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00M$00@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00M$00@glm@@QAE@M@Z PROC			; glm::vec<1,float,1>::vec<1,float,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$00M$00@glm@@QAE@M@Z ENDP			; glm::vec<1,float,1>::vec<1,float,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$00@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$00@glm@@QBEABMH@Z PROC			; glm::vec<1,float,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$00@glm@@QBEABMH@Z ENDP			; glm::vec<1,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$00@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$00@glm@@QAEAAMH@Z PROC			; glm::vec<1,float,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$00@glm@@QAEAAMH@Z ENDP			; glm::vec<1,float,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00M$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00M$00@glm@@SAHXZ PROC			; glm::vec<1,float,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00M$00@glm@@SAHXZ ENDP			; glm::vec<1,float,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_J$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_J$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,__int64,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,__int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_J$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,__int64,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_J$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,__int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_J$00@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_J$00@glm@@QAE@_J@Z PROC			; glm::vec<1,__int64,1>::vec<1,__int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_J$00@glm@@QAE@_J@Z ENDP			; glm::vec<1,__int64,1>::vec<1,__int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$00@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$00@glm@@QBEAB_JH@Z PROC			; glm::vec<1,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$00@glm@@QBEAB_JH@Z ENDP			; glm::vec<1,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$00@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$00@glm@@QAEAA_JH@Z PROC			; glm::vec<1,__int64,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$00@glm@@QAEAA_JH@Z ENDP			; glm::vec<1,__int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_J$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_J$00@glm@@SAHXZ PROC			; glm::vec<1,__int64,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_J$00@glm@@SAHXZ ENDP			; glm::vec<1,__int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,int,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00H$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,int,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00H$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00H$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00H$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00H$00@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00H$00@glm@@QAE@H@Z PROC			; glm::vec<1,int,1>::vec<1,int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00H$00@glm@@QAE@H@Z ENDP			; glm::vec<1,int,1>::vec<1,int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$00@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$00@glm@@QBEABHH@Z PROC			; glm::vec<1,int,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$00@glm@@QBEABHH@Z ENDP			; glm::vec<1,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$00@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$00@glm@@QAEAAHH@Z PROC			; glm::vec<1,int,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$00@glm@@QAEAAHH@Z ENDP			; glm::vec<1,int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00H$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00H$00@glm@@SAHXZ PROC			; glm::vec<1,int,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00H$00@glm@@SAHXZ ENDP			; glm::vec<1,int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,short,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00F$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,short,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00F$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	WORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00F$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00F$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00F$00@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00F$00@glm@@QAE@F@Z PROC			; glm::vec<1,short,1>::vec<1,short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00F$00@glm@@QAE@F@Z ENDP			; glm::vec<1,short,1>::vec<1,short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$00@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$00@glm@@QBEABFH@Z PROC			; glm::vec<1,short,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$00@glm@@QBEABFH@Z ENDP			; glm::vec<1,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$00@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$00@glm@@QAEAAFH@Z PROC			; glm::vec<1,short,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$00@glm@@QAEAAFH@Z ENDP			; glm::vec<1,short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00F$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00F$00@glm@@SAHXZ PROC			; glm::vec<1,short,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00F$00@glm@@SAHXZ ENDP			; glm::vec<1,short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00C$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00C$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00C$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00C$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00C$00@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00C$00@glm@@QAE@C@Z PROC			; glm::vec<1,signed char,1>::vec<1,signed char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00C$00@glm@@QAE@C@Z ENDP			; glm::vec<1,signed char,1>::vec<1,signed char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$00@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$00@glm@@QBEABCH@Z PROC			; glm::vec<1,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$00@glm@@QBEABCH@Z ENDP			; glm::vec<1,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$00@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$00@glm@@QAEAACH@Z PROC			; glm::vec<1,signed char,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$00@glm@@QAEAACH@Z ENDP			; glm::vec<1,signed char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00C$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00C$00@glm@@SAHXZ PROC			; glm::vec<1,signed char,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00C$00@glm@@SAHXZ ENDP			; glm::vec<1,signed char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_K$00@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_K$00@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned __int64,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned __int64,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_K$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned __int64,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_K$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned __int64,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_K$00@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_K$00@glm@@QAE@_K@Z PROC			; glm::vec<1,unsigned __int64,1>::vec<1,unsigned __int64,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_K$00@glm@@QAE@_K@Z ENDP			; glm::vec<1,unsigned __int64,1>::vec<1,unsigned __int64,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$00@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$00@glm@@QBEAB_KH@Z PROC			; glm::vec<1,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$00@glm@@QBEAB_KH@Z ENDP			; glm::vec<1,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$00@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$00@glm@@QAEAA_KH@Z PROC			; glm::vec<1,unsigned __int64,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$00@glm@@QAEAA_KH@Z ENDP			; glm::vec<1,unsigned __int64,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_K$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_K$00@glm@@SAHXZ PROC			; glm::vec<1,unsigned __int64,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_K$00@glm@@SAHXZ ENDP			; glm::vec<1,unsigned __int64,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00I$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00I$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00I$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00I$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00I$00@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00I$00@glm@@QAE@I@Z PROC			; glm::vec<1,unsigned int,1>::vec<1,unsigned int,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00I$00@glm@@QAE@I@Z ENDP			; glm::vec<1,unsigned int,1>::vec<1,unsigned int,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$00@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$00@glm@@QBEABIH@Z PROC			; glm::vec<1,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$00@glm@@QBEABIH@Z ENDP			; glm::vec<1,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$00@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$00@glm@@QAEAAIH@Z PROC			; glm::vec<1,unsigned int,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$00@glm@@QAEAAIH@Z ENDP			; glm::vec<1,unsigned int,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00I$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00I$00@glm@@SAHXZ PROC			; glm::vec<1,unsigned int,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00I$00@glm@@SAHXZ ENDP			; glm::vec<1,unsigned int,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00G$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00G$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00G$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00G$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00G$00@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00G$00@glm@@QAE@G@Z PROC			; glm::vec<1,unsigned short,1>::vec<1,unsigned short,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00G$00@glm@@QAE@G@Z ENDP			; glm::vec<1,unsigned short,1>::vec<1,unsigned short,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$00@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$00@glm@@QBEABGH@Z PROC			; glm::vec<1,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$00@glm@@QBEABGH@Z ENDP			; glm::vec<1,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$00@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$00@glm@@QAEAAGH@Z PROC			; glm::vec<1,unsigned short,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$00@glm@@QAEAAGH@Z ENDP			; glm::vec<1,unsigned short,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00G$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00G$00@glm@@SAHXZ PROC			; glm::vec<1,unsigned short,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00G$00@glm@@SAHXZ ENDP			; glm::vec<1,unsigned short,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$00@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00E$00@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00E$00@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,1>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,1>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$00@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00E$00@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,1>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00E$00@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,1>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00E$00@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00E$00@glm@@QAE@E@Z PROC			; glm::vec<1,unsigned char,1>::vec<1,unsigned char,1>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00E$00@glm@@QAE@E@Z ENDP			; glm::vec<1,unsigned char,1>::vec<1,unsigned char,1>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$00@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$00@glm@@QBEABEH@Z PROC			; glm::vec<1,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$00@glm@@QBEABEH@Z ENDP			; glm::vec<1,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$00@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$00@glm@@QAEAAEH@Z PROC			; glm::vec<1,unsigned char,1>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$00@glm@@QAEAAEH@Z ENDP			; glm::vec<1,unsigned char,1>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00E$00@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00E$00@glm@@SAHXZ PROC			; glm::vec<1,unsigned char,1>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00E$00@glm@@SAHXZ ENDP			; glm::vec<1,unsigned char,1>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,double,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 174  : 		--this->x;

	subsd	xmm0, QWORD PTR __real@3ff0000000000000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 174  : 		--this->x;

	movsd	QWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00N$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,double,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 167  : 		++this->x;

	addsd	xmm0, QWORD PTR __real@3ff0000000000000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx

; 167  : 		++this->x;

	movsd	QWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00N$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00N$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00N$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,double,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movsd	xmm0, QWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00N$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,double,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00N$01@glm@@QAE@N@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00N$01@glm@@QAE@N@Z PROC			; glm::vec<1,double,2>::vec<1,double,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movsd	xmm0, QWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movsd	QWORD PTR [ecx], xmm0
	pop	ebp
	ret	8
??0?$vec@$00N$01@glm@@QAE@N@Z ENDP			; glm::vec<1,double,2>::vec<1,double,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$01@glm@@QBEABNH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$01@glm@@QBEABNH@Z PROC			; glm::vec<1,double,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$01@glm@@QBEABNH@Z ENDP			; glm::vec<1,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00N$01@glm@@QAEAANH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00N$01@glm@@QAEAANH@Z PROC			; glm::vec<1,double,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00N$01@glm@@QAEAANH@Z ENDP			; glm::vec<1,double,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00N$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00N$01@glm@@SAHXZ PROC			; glm::vec<1,double,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00N$01@glm@@SAHXZ ENDP			; glm::vec<1,double,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,float,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00M$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,float,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00M$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 176  : 	}

	ret	0
??F?$vec@$00M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00M$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00M$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,float,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0

; 169  : 	}

	ret	0
??E?$vec@$00M$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,float,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00M$01@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00M$01@glm@@QAE@M@Z PROC			; glm::vec<1,float,2>::vec<1,float,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$00M$01@glm@@QAE@M@Z ENDP			; glm::vec<1,float,2>::vec<1,float,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$01@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$01@glm@@QBEABMH@Z PROC			; glm::vec<1,float,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$01@glm@@QBEABMH@Z ENDP			; glm::vec<1,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00M$01@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00M$01@glm@@QAEAAMH@Z PROC			; glm::vec<1,float,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00M$01@glm@@QAEAAMH@Z ENDP			; glm::vec<1,float,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00M$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00M$01@glm@@SAHXZ PROC			; glm::vec<1,float,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00M$01@glm@@SAHXZ ENDP			; glm::vec<1,float,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_J$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_J$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,__int64,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,__int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_J$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_J$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,__int64,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_J$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,__int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_J$01@glm@@QAE@_J@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_J$01@glm@@QAE@_J@Z PROC			; glm::vec<1,__int64,2>::vec<1,__int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_J$01@glm@@QAE@_J@Z ENDP			; glm::vec<1,__int64,2>::vec<1,__int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$01@glm@@QBEAB_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$01@glm@@QBEAB_JH@Z PROC			; glm::vec<1,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$01@glm@@QBEAB_JH@Z ENDP			; glm::vec<1,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_J$01@glm@@QAEAA_JH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_J$01@glm@@QAEAA_JH@Z PROC			; glm::vec<1,__int64,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_J$01@glm@@QAEAA_JH@Z ENDP			; glm::vec<1,__int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_J$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_J$01@glm@@SAHXZ PROC			; glm::vec<1,__int64,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_J$01@glm@@SAHXZ ENDP			; glm::vec<1,__int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,int,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00H$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,int,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00H$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00H$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00H$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,int,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00H$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00H$01@glm@@QAE@H@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00H$01@glm@@QAE@H@Z PROC			; glm::vec<1,int,2>::vec<1,int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00H$01@glm@@QAE@H@Z ENDP			; glm::vec<1,int,2>::vec<1,int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$01@glm@@QBEABHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$01@glm@@QBEABHH@Z PROC			; glm::vec<1,int,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$01@glm@@QBEABHH@Z ENDP			; glm::vec<1,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00H$01@glm@@QAEAAHH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00H$01@glm@@QAEAAHH@Z PROC			; glm::vec<1,int,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00H$01@glm@@QAEAAHH@Z ENDP			; glm::vec<1,int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00H$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00H$01@glm@@SAHXZ PROC			; glm::vec<1,int,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00H$01@glm@@SAHXZ ENDP			; glm::vec<1,int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,short,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00F$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,short,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00F$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	WORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00F$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00F$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,short,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00F$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00F$01@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00F$01@glm@@QAE@F@Z PROC			; glm::vec<1,short,2>::vec<1,short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00F$01@glm@@QAE@F@Z ENDP			; glm::vec<1,short,2>::vec<1,short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$01@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$01@glm@@QBEABFH@Z PROC			; glm::vec<1,short,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$01@glm@@QBEABFH@Z ENDP			; glm::vec<1,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00F$01@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00F$01@glm@@QAEAAFH@Z PROC			; glm::vec<1,short,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00F$01@glm@@QAEAAFH@Z ENDP			; glm::vec<1,short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00F$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00F$01@glm@@SAHXZ PROC			; glm::vec<1,short,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00F$01@glm@@SAHXZ ENDP			; glm::vec<1,short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00C$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00C$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00C$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00C$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,signed char,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00C$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,signed char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00C$01@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00C$01@glm@@QAE@C@Z PROC			; glm::vec<1,signed char,2>::vec<1,signed char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00C$01@glm@@QAE@C@Z ENDP			; glm::vec<1,signed char,2>::vec<1,signed char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$01@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$01@glm@@QBEABCH@Z PROC			; glm::vec<1,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$01@glm@@QBEABCH@Z ENDP			; glm::vec<1,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00C$01@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00C$01@glm@@QAEAACH@Z PROC			; glm::vec<1,signed char,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00C$01@glm@@QAEAACH@Z ENDP			; glm::vec<1,signed char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00C$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00C$01@glm@@SAHXZ PROC			; glm::vec<1,signed char,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00C$01@glm@@SAHXZ ENDP			; glm::vec<1,signed char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 174  : 		--this->x;

	adc	DWORD PTR [ecx+4], -1

; 189  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00_K$01@glm@@QAE?AU01@H@Z PROC		; glm::vec<1,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 167  : 		++this->x;

	adc	DWORD PTR [ecx+4], 0

; 181  : 		vec<1, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00_K$01@glm@@QAE?AU01@H@Z ENDP		; glm::vec<1,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned __int64,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	add	DWORD PTR [ecx], -1

; 175  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], -1

; 176  : 	}

	ret	0
??F?$vec@$00_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned __int64,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00_K$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00_K$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned __int64,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	add	DWORD PTR [ecx], 1

; 168  : 		return *this;

	mov	eax, ecx
	adc	DWORD PTR [ecx+4], 0

; 169  : 	}

	ret	0
??E?$vec@$00_K$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned __int64,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00_K$01@glm@@QAE@_K@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 8
??0?$vec@$00_K$01@glm@@QAE@_K@Z PROC			; glm::vec<1,unsigned __int64,2>::vec<1,unsigned __int64,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _scalar$[ebp+4]
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$00_K$01@glm@@QAE@_K@Z ENDP			; glm::vec<1,unsigned __int64,2>::vec<1,unsigned __int64,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$01@glm@@QBEAB_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$01@glm@@QBEAB_KH@Z PROC			; glm::vec<1,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$01@glm@@QBEAB_KH@Z ENDP			; glm::vec<1,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00_K$01@glm@@QAEAA_KH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00_K$01@glm@@QAEAA_KH@Z PROC			; glm::vec<1,unsigned __int64,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*8]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00_K$01@glm@@QAEAA_KH@Z ENDP			; glm::vec<1,unsigned __int64,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00_K$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00_K$01@glm@@SAHXZ PROC			; glm::vec<1,unsigned __int64,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00_K$01@glm@@SAHXZ ENDP			; glm::vec<1,unsigned __int64,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 174  : 		--this->x;

	dec	edx
	mov	DWORD PTR [ecx], edx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00I$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 167  : 		++this->x;

	inc	edx
	mov	DWORD PTR [ecx], edx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00I$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	DWORD PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00I$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00I$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned int,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	DWORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00I$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00I$01@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$00I$01@glm@@QAE@I@Z PROC			; glm::vec<1,unsigned int,2>::vec<1,unsigned int,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00I$01@glm@@QAE@I@Z ENDP			; glm::vec<1,unsigned int,2>::vec<1,unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$01@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$01@glm@@QBEABIH@Z PROC			; glm::vec<1,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$01@glm@@QBEABIH@Z ENDP			; glm::vec<1,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00I$01@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00I$01@glm@@QAEAAIH@Z PROC			; glm::vec<1,unsigned int,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00I$01@glm@@QAEAAIH@Z ENDP			; glm::vec<1,unsigned int,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00I$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00I$01@glm@@SAHXZ PROC			; glm::vec<1,unsigned int,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00I$01@glm@@SAHXZ ENDP			; glm::vec<1,unsigned int,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 174  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00G$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx

; 167  : 		++this->x;

	inc	edx
	mov	WORD PTR [ecx], dx

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00G$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00G$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00G$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned short,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	WORD PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00G$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned short,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00G$01@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$00G$01@glm@@QAE@G@Z PROC			; glm::vec<1,unsigned short,2>::vec<1,unsigned short,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00G$01@glm@@QAE@G@Z ENDP			; glm::vec<1,unsigned short,2>::vec<1,unsigned short,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$01@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$01@glm@@QBEABGH@Z PROC			; glm::vec<1,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$01@glm@@QBEABGH@Z ENDP			; glm::vec<1,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00G$01@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00G$01@glm@@QAEAAGH@Z PROC			; glm::vec<1,unsigned short,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00G$01@glm@@QAEAAGH@Z ENDP			; glm::vec<1,unsigned short,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00G$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00G$01@glm@@SAHXZ PROC			; glm::vec<1,unsigned short,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00G$01@glm@@SAHXZ ENDP			; glm::vec<1,unsigned short,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$00E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 188  : 	{

	push	ebp
	mov	ebp, esp

; 189  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 174  : 		--this->x;

	dec	dl
	mov	BYTE PTR [ecx], dl

; 190  : 		--*this;
; 191  : 		return Result;
; 192  : 	}

	pop	ebp
	ret	8
??F?$vec@$00E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$01@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$00E$01@glm@@QAE?AU01@H@Z PROC			; glm::vec<1,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 180  : 	{

	push	ebp
	mov	ebp, esp

; 181  : 		vec<1, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 167  : 		++this->x;

	inc	dl
	mov	BYTE PTR [ecx], dl

; 182  : 		++*this;
; 183  : 		return Result;
; 184  : 	}

	pop	ebp
	ret	8
??E?$vec@$00E$01@glm@@QAE?AU01@H@Z ENDP			; glm::vec<1,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??F?$vec@$00E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$00E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,2>::operator--, COMDAT
; _this$ = ecx

; 174  : 		--this->x;

	dec	BYTE PTR [ecx]

; 175  : 		return *this;

	mov	eax, ecx

; 176  : 	}

	ret	0
??F?$vec@$00E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,2>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??E?$vec@$00E$01@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$00E$01@glm@@QAEAAU01@XZ PROC			; glm::vec<1,unsigned char,2>::operator++, COMDAT
; _this$ = ecx

; 167  : 		++this->x;

	inc	BYTE PTR [ecx]

; 168  : 		return *this;

	mov	eax, ecx

; 169  : 	}

	ret	0
??E?$vec@$00E$01@glm@@QAEAAU01@XZ ENDP			; glm::vec<1,unsigned char,2>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??0?$vec@$00E$01@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$00E$01@glm@@QAE@E@Z PROC			; glm::vec<1,unsigned char,2>::vec<1,unsigned char,2>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$00E$01@glm@@QAE@E@Z ENDP			; glm::vec<1,unsigned char,2>::vec<1,unsigned char,2>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$01@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$01@glm@@QBEABEH@Z PROC			; glm::vec<1,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 74   : 	{

	push	ebp
	mov	ebp, esp

; 75   : 		assert(i >= 0 && i < this->length());
; 76   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 77   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$01@glm@@QBEABEH@Z ENDP			; glm::vec<1,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec1.inl
;	COMDAT ??A?$vec@$00E$01@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$00E$01@glm@@QAEAAEH@Z PROC			; glm::vec<1,unsigned char,2>::operator[], COMDAT
; _this$ = ecx

; 67   : 	{

	push	ebp
	mov	ebp, esp

; 68   : 		assert(i >= 0 && i < this->length());
; 69   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 70   : 	}

	pop	ebp
	ret	4
??A?$vec@$00E$01@glm@@QAEAAEH@Z ENDP			; glm::vec<1,unsigned char,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\ext\vec1.hpp
;	COMDAT ?length@?$vec@$00E$01@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$00E$01@glm@@SAHXZ PROC			; glm::vec<1,unsigned char,2>::length, COMDAT

; 97   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}

	mov	eax, 1
	ret	0
?length@?$vec@$00E$01@glm@@SAHXZ ENDP			; glm::vec<1,unsigned char,2>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
;	COMDAT ??$abs@N@glm@@YANN@Z
_TEXT	SEGMENT
tv64 = -8						; size = 8
_x$ = 8							; size = 8
??$abs@N@glm@@YANN@Z PROC				; glm::abs<double>, COMDAT

; 310  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 8

; 82   : 			return x >= genFIType(0) ? x : -x;

	movsd	xmm0, QWORD PTR _x$[ebp]
	andps	xmm0, QWORD PTR __xmm@7fffffffffffffff7fffffffffffffff

; 311  : 		return detail::compute_abs<genFIType, std::numeric_limits<genFIType>::is_signed>::call(x);

	movsd	QWORD PTR tv64[ebp], xmm0
	fld	QWORD PTR tv64[ebp]

; 312  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$abs@N@glm@@YANN@Z ENDP				; glm::abs<double>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\func_common.inl
;	COMDAT ??$abs@M@glm@@YAMM@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
_x$ = 8							; size = 4
??$abs@M@glm@@YAMM@Z PROC				; glm::abs<float>, COMDAT

; 310  : 	{

	push	ebp
	mov	ebp, esp
	push	ecx

; 82   : 			return x >= genFIType(0) ? x : -x;

	movss	xmm0, DWORD PTR _x$[ebp]
	andps	xmm0, DWORD PTR __xmm@7fffffff7fffffff7fffffff7fffffff

; 311  : 		return detail::compute_abs<genFIType, std::numeric_limits<genFIType>::is_signed>::call(x);

	movss	DWORD PTR tv64[ebp], xmm0
	fld	DWORD PTR tv64[ebp]

; 312  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
??$abs@M@glm@@YAMM@Z ENDP				; glm::abs<float>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 240  : 		--this->y;

	dec	DWORD PTR [ecx+4]

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01I$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]

; 232  : 		++this->y;

	inc	DWORD PTR [ecx+4]

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [eax+4], edx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01I$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	DWORD PTR [ecx+4]

; 242  : 	}

	ret	0
??F?$vec@$01I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01I$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01I$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned int,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	DWORD PTR [ecx+4]

; 234  : 	}

	ret	0
??E?$vec@$01I$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned int,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$0A@@glm@@QAE@II@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01I$0A@@glm@@QAE@II@Z PROC			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	eax, DWORD PTR __x$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR __y$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01I$0A@@glm@@QAE@II@Z ENDP			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01I$0A@@glm@@QAE@I@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01I$0A@@glm@@QAE@I@Z PROC			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	eax, DWORD PTR _scalar$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01I$0A@@glm@@QAE@I@Z ENDP			; glm::vec<2,unsigned int,0>::vec<2,unsigned int,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$0A@@glm@@QBEABIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$0A@@glm@@QBEABIH@Z PROC			; glm::vec<2,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$0A@@glm@@QBEABIH@Z ENDP			; glm::vec<2,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01I$0A@@glm@@QAEAAIH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01I$0A@@glm@@QAEAAIH@Z PROC			; glm::vec<2,unsigned int,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01I$0A@@glm@@QAEAAIH@Z ENDP			; glm::vec<2,unsigned int,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01I$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01I$0A@@glm@@SAHXZ PROC			; glm::vec<2,unsigned int,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01I$0A@@glm@@SAHXZ ENDP			; glm::vec<2,unsigned int,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03C$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03C$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03C$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03C$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,signed char,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03C$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,signed char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$0A@@glm@@QAE@CCCC@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03C$0A@@glm@@QAE@CCCC@Z PROC			; glm::vec<4,signed char,0>::vec<4,signed char,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03C$0A@@glm@@QAE@CCCC@Z ENDP			; glm::vec<4,signed char,0>::vec<4,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03C$0A@@glm@@QAE@C@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03C$0A@@glm@@QAE@C@Z PROC			; glm::vec<4,signed char,0>::vec<4,signed char,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03C$0A@@glm@@QAE@C@Z ENDP			; glm::vec<4,signed char,0>::vec<4,signed char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$0A@@glm@@QBEABCH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$0A@@glm@@QBEABCH@Z PROC			; glm::vec<4,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$0A@@glm@@QBEABCH@Z ENDP			; glm::vec<4,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03C$0A@@glm@@QAEAACH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03C$0A@@glm@@QAEAACH@Z PROC			; glm::vec<4,signed char,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03C$0A@@glm@@QAEAACH@Z ENDP			; glm::vec<4,signed char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03C$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03C$0A@@glm@@SAHXZ PROC			; glm::vec<4,signed char,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03C$0A@@glm@@SAHXZ ENDP			; glm::vec<4,signed char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 466  : 		--this->y;

	dec	BYTE PTR [ecx+1]

; 467  : 		--this->z;

	dec	BYTE PTR [ecx+2]

; 483  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 465  : 		--this->x;

	dec	dl

; 468  : 		--this->w;

	dec	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03E$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 456  : 		++this->y;

	inc	BYTE PTR [ecx+1]

; 457  : 		++this->z;

	inc	BYTE PTR [ecx+2]

; 475  : 		vec<4, T, Q> Result(*this);

	mov	DWORD PTR [eax], edx

; 455  : 		++this->x;

	inc	dl

; 458  : 		++this->w;

	inc	BYTE PTR [ecx+3]
	mov	BYTE PTR [ecx], dl

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03E$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	dec	BYTE PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	dec	BYTE PTR [ecx+1]
	dec	BYTE PTR [ecx+2]
	dec	BYTE PTR [ecx+3]

; 470  : 	}

	ret	0
??F?$vec@$03E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03E$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03E$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,unsigned char,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	inc	BYTE PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	inc	BYTE PTR [ecx+1]
	inc	BYTE PTR [ecx+2]
	inc	BYTE PTR [ecx+3]

; 460  : 	}

	ret	0
??E?$vec@$03E$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,unsigned char,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$0A@@glm@@QAE@EEEE@Z
_TEXT	SEGMENT
__x$ = 8						; size = 1
__y$ = 12						; size = 1
__z$ = 16						; size = 1
__w$ = 20						; size = 1
??0?$vec@$03E$0A@@glm@@QAE@EEEE@Z PROC			; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	mov	al, BYTE PTR __x$[ebp]
	mov	BYTE PTR [ecx], al
	mov	al, BYTE PTR __y$[ebp]
	mov	BYTE PTR [ecx+1], al
	mov	al, BYTE PTR __z$[ebp]
	mov	BYTE PTR [ecx+2], al
	mov	al, BYTE PTR __w$[ebp]
	mov	BYTE PTR [ecx+3], al

; 193  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03E$0A@@glm@@QAE@EEEE@Z ENDP			; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03E$0A@@glm@@QAE@E@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 1
??0?$vec@$03E$0A@@glm@@QAE@E@Z PROC			; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	mov	al, BYTE PTR _scalar$[ebp]
	mov	BYTE PTR [ecx], al
	mov	BYTE PTR [ecx+1], al
	mov	BYTE PTR [ecx+2], al
	mov	BYTE PTR [ecx+3], al

; 188  : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$03E$0A@@glm@@QAE@E@Z ENDP			; glm::vec<4,unsigned char,0>::vec<4,unsigned char,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$0A@@glm@@QBEABEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$0A@@glm@@QBEABEH@Z PROC			; glm::vec<4,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$0A@@glm@@QBEABEH@Z ENDP			; glm::vec<4,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03E$0A@@glm@@QAEAAEH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03E$0A@@glm@@QAEAAEH@Z PROC			; glm::vec<4,unsigned char,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, ecx

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03E$0A@@glm@@QAEAAEH@Z ENDP			; glm::vec<4,unsigned char,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03E$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03E$0A@@glm@@SAHXZ PROC			; glm::vec<4,unsigned char,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03E$0A@@glm@@SAHXZ ENDP			; glm::vec<4,unsigned char,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,float,0>::operator--, COMDAT
; _this$ = ecx

; 482  : 	{

	push	ebp
	mov	ebp, esp

; 483  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	movups	XMMWORD PTR [eax], xmm0

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 484  : 		--*this;
; 485  : 		return Result;
; 486  : 	}

	pop	ebp
	ret	8
??F?$vec@$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$03M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<4,float,0>::operator++, COMDAT
; _this$ = ecx

; 474  : 	{

	push	ebp
	mov	ebp, esp

; 475  : 		vec<4, T, Q> Result(*this);

	movups	xmm0, XMMWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 455  : 		++this->x;

	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000

; 475  : 		vec<4, T, Q> Result(*this);

	movups	XMMWORD PTR [eax], xmm0

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 476  : 		++*this;
; 477  : 		return Result;
; 478  : 	}

	pop	ebp
	ret	8
??E?$vec@$03M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??F?$vec@$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$03M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,0>::operator--, COMDAT
; _this$ = ecx

; 465  : 		--this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 466  : 		--this->y;
; 467  : 		--this->z;
; 468  : 		--this->w;
; 469  : 		return *this;

	mov	eax, ecx
	subps	xmm0, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	movups	XMMWORD PTR [ecx], xmm0

; 470  : 	}

	ret	0
??F?$vec@$03M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??E?$vec@$03M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$03M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<4,float,0>::operator++, COMDAT
; _this$ = ecx

; 455  : 		++this->x;

	movups	xmm0, XMMWORD PTR [ecx]

; 456  : 		++this->y;
; 457  : 		++this->z;
; 458  : 		++this->w;
; 459  : 		return *this;

	mov	eax, ecx
	movaps	xmm1, XMMWORD PTR __xmm@3f8000003f8000003f8000003f800000
	addps	xmm1, xmm0
	movups	XMMWORD PTR [ecx], xmm1

; 460  : 	}

	ret	0
??E?$vec@$03M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<4,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$0A@@glm@@QAE@MMMM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
__z$ = 16						; size = 4
__w$ = 20						; size = 4
??0?$vec@$03M$0A@@glm@@QAE@MMMM@Z PROC			; glm::vec<4,float,0>::vec<4,float,0>, COMDAT
; _this$ = ecx

; 193  : 	{}

	push	ebp
	mov	ebp, esp

; 192  : 		: x(_x), y(_y), z(_z), w(_w)

	movss	xmm0, DWORD PTR __x$[ebp]

; 193  : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	movss	xmm0, DWORD PTR __z$[ebp]
	movss	DWORD PTR [ecx+8], xmm0
	movss	xmm0, DWORD PTR __w$[ebp]
	movss	DWORD PTR [ecx+12], xmm0
	pop	ebp
	ret	16					; 00000010H
??0?$vec@$03M$0A@@glm@@QAE@MMMM@Z ENDP			; glm::vec<4,float,0>::vec<4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??0?$vec@$03M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$03M$0A@@glm@@QAE@M@Z PROC			; glm::vec<4,float,0>::vec<4,float,0>, COMDAT
; _this$ = ecx

; 188  : 	{}

	push	ebp
	mov	ebp, esp

; 187  : 		: x(scalar), y(scalar), z(scalar), w(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 188  : 	{}

	mov	eax, ecx
	shufps	xmm0, xmm0, 0
	movups	XMMWORD PTR [ecx], xmm0
	pop	ebp
	ret	4
??0?$vec@$03M$0A@@glm@@QAE@M@Z ENDP			; glm::vec<4,float,0>::vec<4,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$0A@@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$0A@@glm@@QBEABMH@Z PROC			; glm::vec<4,float,0>::operator[], COMDAT
; _this$ = ecx

; 336  : 	{

	push	ebp
	mov	ebp, esp

; 337  : 		assert(i >= 0 && i < this->length());
; 338  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 339  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$0A@@glm@@QBEABMH@Z ENDP			; glm::vec<4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.inl
;	COMDAT ??A?$vec@$03M$0A@@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$03M$0A@@glm@@QAEAAMH@Z PROC			; glm::vec<4,float,0>::operator[], COMDAT
; _this$ = ecx

; 329  : 	{

	push	ebp
	mov	ebp, esp

; 330  : 		assert(i >= 0 && i < this->length());
; 331  : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 332  : 	}

	pop	ebp
	ret	4
??A?$vec@$03M$0A@@glm@@QAEAAMH@Z ENDP			; glm::vec<4,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec4.hpp
;	COMDAT ?length@?$vec@$03M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$03M$0A@@glm@@SAHXZ PROC			; glm::vec<4,float,0>::length, COMDAT

; 85   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}

	mov	eax, 4
	ret	0
?length@?$vec@$03M$0A@@glm@@SAHXZ ENDP			; glm::vec<4,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,short,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx

; 240  : 		--this->y;

	dec	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01F$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,short,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01F$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	dec	WORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	dec	WORD PTR [ecx+2]

; 242  : 	}

	ret	0
??F?$vec@$01F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01F$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01F$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,short,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01F$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$0A@@glm@@QAE@FF@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01F$0A@@glm@@QAE@FF@Z PROC			; glm::vec<2,short,0>::vec<2,short,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01F$0A@@glm@@QAE@FF@Z ENDP			; glm::vec<2,short,0>::vec<2,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01F$0A@@glm@@QAE@F@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01F$0A@@glm@@QAE@F@Z PROC			; glm::vec<2,short,0>::vec<2,short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01F$0A@@glm@@QAE@F@Z ENDP			; glm::vec<2,short,0>::vec<2,short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$0A@@glm@@QBEABFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$0A@@glm@@QBEABFH@Z PROC			; glm::vec<2,short,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$0A@@glm@@QBEABFH@Z ENDP			; glm::vec<2,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01F$0A@@glm@@QAEAAFH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01F$0A@@glm@@QAEAAFH@Z PROC			; glm::vec<2,short,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01F$0A@@glm@@QAEAAFH@Z ENDP			; glm::vec<2,short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01F$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01F$0A@@glm@@SAHXZ PROC			; glm::vec<2,short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01F$0A@@glm@@SAHXZ ENDP			; glm::vec<2,short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 239  : 		--this->x;

	dec	edx
	mov	WORD PTR [ecx], dx

; 240  : 		--this->y;

	mov	edx, 65535				; 0000ffffH
	add	WORD PTR [ecx+2], dx

; 256  : 		--*this;
; 257  : 		return Result;
; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01G$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 231  : 		++this->x;

	inc	edx

; 232  : 		++this->y;

	inc	WORD PTR [ecx+2]
	mov	WORD PTR [ecx], dx

; 248  : 		++*this;
; 249  : 		return Result;
; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01G$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	mov	eax, 65535				; 0000ffffH
	add	WORD PTR [ecx], ax

; 240  : 		--this->y;

	add	WORD PTR [ecx+2], ax

; 241  : 		return *this;

	mov	eax, ecx

; 242  : 	}

	ret	0
??F?$vec@$01G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01G$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01G$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,unsigned short,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	inc	WORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	inc	WORD PTR [ecx+2]

; 234  : 	}

	ret	0
??E?$vec@$01G$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,unsigned short,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$0A@@glm@@QAE@GG@Z
_TEXT	SEGMENT
__x$ = 8						; size = 2
__y$ = 12						; size = 2
??0?$vec@$01G$0A@@glm@@QAE@GG@Z PROC			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	mov	ax, WORD PTR __x$[ebp]
	mov	WORD PTR [ecx], ax
	mov	ax, WORD PTR __y$[ebp]
	mov	WORD PTR [ecx+2], ax

; 40   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	8
??0?$vec@$01G$0A@@glm@@QAE@GG@Z ENDP			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01G$0A@@glm@@QAE@G@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 2
??0?$vec@$01G$0A@@glm@@QAE@G@Z PROC			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	mov	ax, WORD PTR _scalar$[ebp]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax

; 35   : 	{}

	mov	eax, ecx
	pop	ebp
	ret	4
??0?$vec@$01G$0A@@glm@@QAE@G@Z ENDP			; glm::vec<2,unsigned short,0>::vec<2,unsigned short,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$0A@@glm@@QBEABGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$0A@@glm@@QBEABGH@Z PROC			; glm::vec<2,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$0A@@glm@@QBEABGH@Z ENDP			; glm::vec<2,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01G$0A@@glm@@QAEAAGH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01G$0A@@glm@@QAEAAGH@Z PROC			; glm::vec<2,unsigned short,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01G$0A@@glm@@QAEAAGH@Z ENDP			; glm::vec<2,unsigned short,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01G$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01G$0A@@glm@@SAHXZ PROC			; glm::vec<2,unsigned short,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01G$0A@@glm@@SAHXZ ENDP			; glm::vec<2,unsigned short,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??F?$vec@$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,float,0>::operator--, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 239  : 		--this->x;

	movss	DWORD PTR [ecx], xmm0

; 240  : 		--this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000

; 255  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 256  : 		--*this;
; 257  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 240  : 		--this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 258  : 	}

	pop	ebp
	ret	8
??F?$vec@$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$0A@@glm@@QAE?AU01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$vec@$01M$0A@@glm@@QAE?AU01@H@Z PROC		; glm::vec<2,float,0>::operator++, COMDAT
; _this$ = ecx

; 246  : 	{

	push	ebp
	mov	ebp, esp

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [ecx+4]
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]

; 231  : 		++this->x;

	movss	DWORD PTR [ecx], xmm0

; 232  : 		++this->y;

	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000

; 247  : 		vec<2, T, Q> Result(*this);

	mov	DWORD PTR [esi], eax

; 248  : 		++*this;
; 249  : 		return Result;

	mov	eax, esi
	mov	DWORD PTR [esi+4], edx
	pop	esi

; 232  : 		++this->y;

	movss	DWORD PTR [ecx+4], xmm0

; 250  : 	}

	pop	ebp
	ret	8
??E?$vec@$01M$0A@@glm@@QAE?AU01@H@Z ENDP		; glm::vec<2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??F?$vec@$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??F?$vec@$01M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,0>::operator--, COMDAT
; _this$ = ecx

; 239  : 		--this->x;

	movss	xmm0, DWORD PTR [ecx]

; 240  : 		--this->y;
; 241  : 		return *this;

	mov	eax, ecx
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	subss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 242  : 	}

	ret	0
??F?$vec@$01M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,0>::operator--
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??E?$vec@$01M$0A@@glm@@QAEAAU01@XZ
_TEXT	SEGMENT
??E?$vec@$01M$0A@@glm@@QAEAAU01@XZ PROC			; glm::vec<2,float,0>::operator++, COMDAT
; _this$ = ecx

; 231  : 		++this->x;

	movss	xmm0, DWORD PTR [ecx]

; 232  : 		++this->y;
; 233  : 		return *this;

	mov	eax, ecx
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR [ecx+4]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [ecx+4], xmm0

; 234  : 	}

	ret	0
??E?$vec@$01M$0A@@glm@@QAEAAU01@XZ ENDP			; glm::vec<2,float,0>::operator++
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$0A@@glm@@QAE@MM@Z
_TEXT	SEGMENT
__x$ = 8						; size = 4
__y$ = 12						; size = 4
??0?$vec@$01M$0A@@glm@@QAE@MM@Z PROC			; glm::vec<2,float,0>::vec<2,float,0>, COMDAT
; _this$ = ecx

; 40   : 	{}

	push	ebp
	mov	ebp, esp

; 39   : 		: x(_x), y(_y)

	movss	xmm0, DWORD PTR __x$[ebp]

; 40   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	xmm0, DWORD PTR __y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	8
??0?$vec@$01M$0A@@glm@@QAE@MM@Z ENDP			; glm::vec<2,float,0>::vec<2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??0?$vec@$01M$0A@@glm@@QAE@M@Z
_TEXT	SEGMENT
_scalar$ = 8						; size = 4
??0?$vec@$01M$0A@@glm@@QAE@M@Z PROC			; glm::vec<2,float,0>::vec<2,float,0>, COMDAT
; _this$ = ecx

; 35   : 	{}

	push	ebp
	mov	ebp, esp

; 34   : 		: x(scalar), y(scalar)

	movss	xmm0, DWORD PTR _scalar$[ebp]

; 35   : 	{}

	mov	eax, ecx
	movss	DWORD PTR [ecx], xmm0
	movss	DWORD PTR [ecx+4], xmm0
	pop	ebp
	ret	4
??0?$vec@$01M$0A@@glm@@QAE@M@Z ENDP			; glm::vec<2,float,0>::vec<2,float,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$0A@@glm@@QBEABMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$0A@@glm@@QBEABMH@Z PROC			; glm::vec<2,float,0>::operator[], COMDAT
; _this$ = ecx

; 92   : 	{

	push	ebp
	mov	ebp, esp

; 93   : 		assert(i >= 0 && i < this->length());
; 94   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 95   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$0A@@glm@@QBEABMH@Z ENDP			; glm::vec<2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.inl
;	COMDAT ??A?$vec@$01M$0A@@glm@@QAEAAMH@Z
_TEXT	SEGMENT
_i$ = 8							; size = 4
??A?$vec@$01M$0A@@glm@@QAEAAMH@Z PROC			; glm::vec<2,float,0>::operator[], COMDAT
; _this$ = ecx

; 85   : 	{

	push	ebp
	mov	ebp, esp

; 86   : 		assert(i >= 0 && i < this->length());
; 87   : 		return (&x)[i];

	mov	eax, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+eax*4]

; 88   : 	}

	pop	ebp
	ret	4
??A?$vec@$01M$0A@@glm@@QAEAAMH@Z ENDP			; glm::vec<2,float,0>::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\bachmaer\downloads\glm-0.9.9.0\glm\glm\detail\type_vec2.hpp
;	COMDAT ?length@?$vec@$01M$0A@@glm@@SAHXZ
_TEXT	SEGMENT
?length@?$vec@$01M$0A@@glm@@SAHXZ PROC			; glm::vec<2,float,0>::length, COMDAT

; 82   : 		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}

	mov	eax, 2
	ret	0
?length@?$vec@$01M$0A@@glm@@SAHXZ ENDP			; glm::vec<2,float,0>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
__Xx$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	movss	xmm0, DWORD PTR __Xx$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath

; 295  : 	return (_CSTD sqrtf(_Xx));

	movss	DWORD PTR tv65[esp+8], xmm0
	fld	DWORD PTR tv65[esp+8]

; 296  : 	}

	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
tv65 = 8						; size = 4
__Xx$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT

; 284  : 	{

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __Xx$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath

; 285  : 	return (_CSTD sinf(_Xx));

	movss	DWORD PTR tv65[ebp], xmm0
	fld	DWORD PTR tv65[ebp]

; 286  : 	}

	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
tv65 = 8						; size = 4
__Xx$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT

; 77   : 	{

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __Xx$[ebp]
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.15.26726\include\cmath

; 78   : 	return (_CSTD cosf(_Xx));

	movss	DWORD PTR tv65[ebp], xmm0
	fld	DWORD PTR tv65[ebp]

; 79   : 	}

	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv68 = -4						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	sub	esp, 8
	movss	xmm0, DWORD PTR __X$[ebp]

; 760  :             return (float)sqrt(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sqrt_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv68[esp+8], xmm0
	fld	DWORD PTR tv68[esp+8]

; 761  :         }

	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv68 = 8						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __X$[ebp]

; 750  :             return (float)sin(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_sin_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 751  :         }

	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv68 = 8						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

	push	ebp
	mov	ebp, esp
	movss	xmm0, DWORD PTR __X$[ebp]

; 649  :             return (float)cos(_X);

	cvtps2pd xmm0, xmm0
	call	__libm_sse2_cos_precise
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR tv68[ebp], xmm0
	fld	DWORD PTR tv68[ebp]

; 650  :         }

	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
END
